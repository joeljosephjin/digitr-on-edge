/*!
 * ONNX Runtime Web v1.17.0-dev.20231103-1439da36fe
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var ort=(()=>{var Ey=Object.create;var Mo=Object.defineProperty;var Cy=Object.getOwnPropertyDescriptor;var Py=Object.getOwnPropertyNames;var Dy=Object.getPrototypeOf,ky=Object.prototype.hasOwnProperty;var P=(r,e)=>()=>(r&&(e=r(r=0)),e);var He=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Ar=(r,e)=>{for(var n in e)Mo(r,n,{get:e[n],enumerable:!0})},Bu=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Py(e))!ky.call(r,o)&&o!==n&&Mo(r,o,{get:()=>e[o],enumerable:!(t=Cy(e,o))||t.enumerable});return r};var hn=(r,e,n)=>(n=r!=null?Ey(Dy(r)):{},Bu(e||!r||!r.__esModule?Mo(n,"default",{value:r,enumerable:!0}):n,r)),br=r=>Bu(Mo({},"__esModule",{value:!0}),r);var Lo,Hr,er,No,zo=P(()=>{"use strict";Lo=new Map,Hr=[],er=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=Lo.get(r);if(t===void 0)Lo.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=Hr.indexOf(r);o!==-1&&Hr.splice(o,1);for(let i=0;i<Hr.length;i++)if(Lo.get(Hr[i]).priority<=n){Hr.splice(i,0,r);return}Hr.push(r)}return}throw new TypeError("not a valid backend")},No=async r=>{let e=r.length===0?Hr:r,n=[];for(let t of e){let o=Lo.get(t);if(o){if(o.initialized)return o.backend;if(o.aborted)continue;let i=!!o.initPromise;try{return i||(o.initPromise=o.backend.init()),await o.initPromise,o.initialized=!0,o.backend}catch(u){i||n.push({name:t,err:u}),o.aborted=!0}finally{delete o.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`)}});var Mu=P(()=>{"use strict";zo()});var Lu,Nu=P(()=>{"use strict";Lu="1.17.0-dev.20231103-1439da36fe"});var zu,ma,Fu=P(()=>{"use strict";Nu();zu="warning",ma={wasm:{},webgl:{},webgpu:{},versions:{common:Lu},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);zu=r}},get logLevel(){return zu}};Object.defineProperty(ma,"logLevel",{enumerable:!0})});var xe,Gu=P(()=>{"use strict";Fu();xe=ma});var Vu,Wu,Uu=P(()=>{"use strict";Vu=(r,e)=>{let n=document.createElement("canvas");n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let u=e?.format!==void 0?e.format:"RGB",a=e?.norm,s,l;a===void 0||a.mean===void 0?s=[255,255,255,255]:typeof a.mean=="number"?s=[a.mean,a.mean,a.mean,a.mean]:(s=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(s[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let c=i*o,f=0,h=c,g=c*2,y=-1;u==="RGBA"?(f=0,h=c,g=c*2,y=c*3):u==="RGB"?(f=0,h=c,g=c*2):u==="RBG"&&(f=0,g=c,h=c*2);for(let b=0;b<i;b++)for(let w=0;w<o;w++){let S=(r.data[f++]-l[0])*s[0],A=(r.data[h++]-l[1])*s[1],E=(r.data[g++]-l[2])*s[2],R=y===-1?255:(r.data[y++]-l[3])*s[3];t.fillStyle="rgba("+S+","+A+","+E+","+R+")",t.fillRect(w,b,1,1)}return n.toDataURL()}else throw new Error("Can not access image data")},Wu=(r,e)=>{let n=document.createElement("canvas").getContext("2d"),t;if(n!=null){let o,i,u;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],u=r.dims[3]):(o=r.dims[3],i=r.dims[2],u=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",s=e?.norm,l,c;s===void 0||s.mean===void 0?l=[255,255,255,255]:typeof s.mean=="number"?l=[s.mean,s.mean,s.mean,s.mean]:(l=[s.mean[0],s.mean[1],s.mean[2],255],s.mean[3]!==void 0&&(l[3]=s.mean[3])),s===void 0||s.bias===void 0?c=[0,0,0,0]:typeof s.bias=="number"?c=[s.bias,s.bias,s.bias,s.bias]:(c=[s.bias[0],s.bias[1],s.bias[2],0],s.bias[3]!==void 0&&(c[3]=s.bias[3]));let f=i*o;if(e!==void 0&&(e.format!==void 0&&u===4&&e.format!=="RGBA"||u===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let h=4,g=0,y=1,b=2,w=3,S=0,A=f,E=f*2,R=-1;a==="RGBA"?(S=0,A=f,E=f*2,R=f*3):a==="RGB"?(S=0,A=f,E=f*2):a==="RBG"&&(S=0,E=f,A=f*2),t=n.createImageData(o,i);for(let z=0;z<i*o;g+=h,y+=h,b+=h,w+=h,z++)t.data[g]=(r.data[S++]-c[0])*l[0],t.data[y]=(r.data[A++]-c[1])*l[1],t.data[b]=(r.data[E++]-c[2])*l[2],t.data[w]=R===-1?255:(r.data[R++]-c[3])*l[3]}else throw new Error("Can not access image data");return t}});var ga,Hu,ju,qu,Ku,Yu=P(()=>{"use strict";Fo();ga=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,u;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?u=[o.bias,o.bias,o.bias,o.bias]:u=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",s=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,c=s==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),f=4,h=0,g=1,y=2,b=3,w=0,S=l,A=l*2,E=-1;a==="RGB"&&(f=3,h=0,g=1,y=2,b=-1),s==="RGBA"?E=l*3:s==="RBG"?(w=0,A=l,S=l*2):s==="BGR"&&(A=0,S=l,w=l*2);for(let z=0;z<l;z++,h+=f,y+=f,g+=f,b+=f)c[w++]=(r[h]+u[0])/i[0],c[S++]=(r[g]+u[1])/i[1],c[A++]=(r[y]+u[2])/i[2],E!==-1&&b!==-1&&(c[E++]=(r[b]+u[3])/i[3]);return s==="RGBA"?new wt("float32",c,[1,4,n,t]):new wt("float32",c,[1,3,n,t])},Hu=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",u,a=e??{};if(n){let s=document.createElement("canvas");s.width=r.width,s.height=r.height;let l=s.getContext("2d");if(l!=null){let c=r.height,f=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(c=e.resizedHeight,f=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=c,a.width=f}else a.tensorFormat="RGBA",a.height=c,a.width=f;l.drawImage(r,0,0),u=l.getImageData(0,0,f,c).data}else throw new Error("Can not access image data")}else if(t){let s,l;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(s=e.resizedHeight,l=e.resizedWidth):(s=r.height,l=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=s,a.width=l,e!==void 0){let c=document.createElement("canvas");c.width=l,c.height=s;let f=c.getContext("2d");if(f!=null)f.putImageData(r,0,0),u=f.getImageData(0,0,l,s).data;else throw new Error("Can not access image data")}else u=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let s=document.createElement("canvas");s.width=r.width,s.height=r.height;let l=s.getContext("2d");if(l!=null){let c=r.height,f=r.width;return l.drawImage(r,0,0,f,c),u=l.getImageData(0,0,f,c).data,a.height=c,a.width=f,ga(u,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((s,l)=>{let c=document.createElement("canvas"),f=c.getContext("2d");if(!r||!f)return l();let h=new Image;h.crossOrigin="Anonymous",h.src=r,h.onload=()=>{c.width=h.width,c.height=h.height,f.drawImage(h,0,0,c.width,c.height);let g=f.getImageData(0,0,c.width,c.height);a.height=c.height,a.width=c.width,s(ga(g.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(u!==void 0)return ga(u,a);throw new Error("Input data provided is not supported - aborted tensor creation")},ju=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,u=[1,t,n,4];return new wt({location:"texture",type:"float32",texture:r,dims:u,download:o,dispose:i})},qu=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new wt({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},Ku=(r,e,n)=>new wt({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var Hn,Go,Xu,Ju,Zu=P(()=>{"use strict";Hn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Go=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Xu=!1,Ju=()=>{if(!Xu){Xu=!0;let r=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";r&&(Hn.set("int64",BigInt64Array),Go.set(BigInt64Array,"int64")),e&&(Hn.set("uint64",BigUint64Array),Go.set(BigUint64Array,"uint64"))}}});var Qu,el,tl=P(()=>{"use strict";Fo();Qu=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},el=(r,e)=>{switch(r.location){case"cpu":return new wt(r.type,r.data,e);case"cpu-pinned":return new wt({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new wt({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new wt({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var wt,Fo=P(()=>{"use strict";Uu();Yu();Zu();tl();wt=class{constructor(e,n,t){Ju();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=Hn.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,s;if(typeof e=="string")if(o=e,s=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=Hn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(s=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Go.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(s===void 0)s=[a.length];else if(!Array.isArray(s))throw new TypeError("A tensor's dims must be a number array");i=s,this.cpuData=a,this.dataLocation="cpu"}let u=Qu(i);if(this.cpuData&&u!==this.cpuData.length)throw new Error(`Tensor's size(${u}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=u}static async fromImage(e,n){return Hu(e,n)}static fromTexture(e,n){return ju(e,n)}static fromGpuBuffer(e,n){return qu(e,n)}static fromPinnedBuffer(e,n,t){return Ku(e,n,t)}toDataURL(e){return Vu(this,e)}toImageData(e){return Wu(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return el(this,e)}}});var lt,Vo=P(()=>{"use strict";Fo();lt=wt});var Wo,rl=P(()=>{"use strict";zo();Vo();Wo=class r{constructor(e){this.handler=e}async run(e,n,t){let o={},i={};if(typeof e!="object"||e===null||e instanceof lt||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof lt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,c=Object.getOwnPropertyNames(n);for(let f of this.outputNames)if(c.indexOf(f)!==-1){let h=n[f];(h===null||h instanceof lt)&&(l=!0,u=!1,o[f]=h)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),s={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let c=a[l];c instanceof lt?s[l]=c:s[l]=new lt(c.type,c.data,c.dims)}return s}async release(){return this.handler.dispose()}static async create(e,n,t,o){let i,u={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)u=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)u=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let f=e,h=0,g=e.byteLength;if(typeof n=="object"&&n!==null)u=n;else if(typeof n=="number"){if(h=n,!Number.isSafeInteger(h))throw new RangeError("'byteOffset' must be an integer.");if(h<0||h>=f.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${f.byteLength}).`);if(g=e.byteLength-h,typeof t=="number"){if(g=t,!Number.isSafeInteger(g))throw new RangeError("'byteLength' must be an integer.");if(g<=0||h+g>f.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${f.byteLength-h}].`);if(typeof o=="object"&&o!==null)u=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(f,h,g)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let s=(u.executionProviders||[]).map(f=>typeof f=="string"?f:f.name),c=await(await No(s)).createInferenceSessionHandler(i,u);return new r(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var nl,ol=P(()=>{"use strict";rl();nl=Wo});var il=P(()=>{"use strict"});var Ry,Uo,al=P(()=>{"use strict";zo();Vo();Ry="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Uo=class r{constructor(e){this.handler=e}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},a=(i.executionProviders||[]).map(l=>typeof l=="string"?l:l.name),s=await No(a);if(s.createTrainingSessionHandler){let l=await s.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,i);return new r(l)}else throw new Error(Ry)}typeNarrowingForRunStep(e,n,t){let o={},i={};if(typeof e!="object"||e===null||e instanceof lt||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof lt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let a of n){if(typeof a!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(a)===-1)throw new RangeError(`'fetches' contains invalid output name: ${a}.`);o[a]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let a=!1,s=Object.getOwnPropertyNames(n);for(let l of this.outputNames)if(s.indexOf(l)!==-1){let c=n[l];(c===null||c instanceof lt)&&(a=!0,u=!1,o[l]=c)}if(a){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let a of this.inputNames)if(typeof e[a]>"u")throw new Error(`input '${a}' is missing in 'feeds'.`);if(u)for(let a of this.outputNames)o[a]=null;return[o,i]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof lt?n[t]=o:n[t]=new lt(o.type,o.data,o.dims)}return n}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(e,n,t),u=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(u)}async loadParametersBuffer(e,n){throw new Error("Method not implemented.")}async getContiguousParameters(e){throw new Error("Method not implemented.")}async release(){return this.handler.dispose()}}});var sl,ul=P(()=>{"use strict";al();sl=Uo});var ba={};Ar(ba,{InferenceSession:()=>nl,Tensor:()=>lt,TrainingSession:()=>sl,env:()=>xe,registerBackend:()=>er});var kt=P(()=>{"use strict";Mu();Gu();ol();Vo();il();ul()});function Or(r,e,n,t){if(e===void 0)return My(r);if(n===void 0)Ho(r,e,1);else if(typeof n=="number"&&t===void 0)Ho(r,e,n);else if(typeof n=="string"&&t===void 0)Ho(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")Ho(r,n,t,e);else throw new TypeError("input is valid")}function My(r){return{verbose:Or.verbose.bind(null,r),info:Or.info.bind(null,r),warning:Or.warning.bind(null,r),error:Or.error.bind(null,r),fatal:Or.fatal.bind(null,r)}}function Ho(r,e,n,t){let o=jn[t||""]||jn[""];cl[r]<cl[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,By[o.provider].log(r,e,t))}var ya,va,cl,By,dl,jn,ze,qo,Ko,Yo,jo,Rt=P(()=>{"use strict";ya=class{log(e,n,t){}},va=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},cl={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},By={none:new ya,console:new va},dl={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},jn={"":dl};(s=>{function r(l,c){s("verbose",l,c)}s.verbose=r;function e(l,c){s("info",l,c)}s.info=e;function n(l,c){s("warning",l,c)}s.warning=n;function t(l,c){s("error",l,c)}s.error=t;function o(l,c){s("fatal",l,c)}s.fatal=o;function i(l){jn={},u("",l||{})}s.reset=i;function u(l,c){if(l==="*")i(c);else{let f=jn[l]||dl;jn[l]={provider:c.provider||f.provider,minimalSeverity:c.minimalSeverity||f.minimalSeverity,logDateTime:c.logDateTime===void 0?f.logDateTime:c.logDateTime,logSourceLocation:c.logSourceLocation===void 0?f.logSourceLocation:c.logSourceLocation}}}s.set=u;function a(l){let c={};l.logLevel&&(c.minimalSeverity=l.logLevel),u("",c)}s.setWithEnv=a})(Or||={});ze=Or,qo=class{constructor(e,n,t,o,i,u){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=u}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Ko=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},Yo=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=jo(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,u=!1,a=t();if(a&&typeof a.then=="function")return u=!0,new Promise((s,l)=>{a.then(async c=>{i&&await i.end(),s(c)},async c=>{i&&await i.end(),l(c)})});if(!u&&i){let s=i.end();if(s&&typeof s.then=="function")return new Promise((l,c)=>{s.then(()=>{l(a)},f=>{c(f)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=jo();return this.flush(o),new qo(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new qo(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Ko(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=jo();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Ko(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){ze.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=jo()}}get started(){return this._started}},jo=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function fl(r,e,n){for(let t of n){let o=t[0],i=t[1],u=t[2],a=t[3],s=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&Ly(l.version,u))return{opImpl:a,opInit:s}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function Ly(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var pl=P(()=>{"use strict"});var hl=He(xa=>{"use strict";xa.__esModule=!0;var Ny=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();xa.Guid=Ny});function je(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function vt(r){return(r&&r.__isLong__)===!0}function ml(r){var e=Math.clz32(r&-r);return r?31-e:e}function jr(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=bl[r],t)?t:(n=Me(r,0,!0),o&&(bl[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=gl[r],t)?t:(n=Me(r,r<0?-1:0,!1),o&&(gl[r]=n),n))}function Mt(r,e){if(isNaN(r))return e?yr:Ut;if(e){if(r<0)return yr;if(r>=wl)return Sl}else{if(r<=-vl)return _t;if(r+1>=vl)return $l}return r<0?Mt(-r,e).neg():Me(r%gn|0,r/gn|0,e)}function Me(r,e,n){return new je(r,e,n)}function Ta(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?yr:Ut;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return Ta(r.substring(1),e,n).neg();for(var o=Mt(Xo(n,8)),i=Ut,u=0;u<r.length;u+=8){var a=Math.min(8,r.length-u),s=parseInt(r.substring(u,u+a),n);if(a<8){var l=Mt(Xo(n,a));i=i.mul(l).add(Mt(s))}else i=i.mul(o),i=i.add(Mt(s))}return i.unsigned=e,i}function Ht(r,e){return typeof r=="number"?Mt(r,e):typeof r=="string"?Ta(r,e):Me(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var Bt,gl,bl,Xo,yl,zy,gn,wl,vl,xl,Ut,yr,mn,Tl,wa,$l,Sl,_t,H,vr,$a=P(()=>{Bt=null;try{Bt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}je.prototype.__isLong__;Object.defineProperty(je.prototype,"__isLong__",{value:!0});je.isLong=vt;gl={},bl={};je.fromInt=jr;je.fromNumber=Mt;je.fromBits=Me;Xo=Math.pow;je.fromString=Ta;je.fromValue=Ht;yl=65536,zy=1<<24,gn=yl*yl,wl=gn*gn,vl=wl/2,xl=jr(zy),Ut=jr(0);je.ZERO=Ut;yr=jr(0,!0);je.UZERO=yr;mn=jr(1);je.ONE=mn;Tl=jr(1,!0);je.UONE=Tl;wa=jr(-1);je.NEG_ONE=wa;$l=Me(-1,2147483647,!1);je.MAX_VALUE=$l;Sl=Me(-1,-1,!0);je.MAX_UNSIGNED_VALUE=Sl;_t=Me(0,-2147483648,!1);je.MIN_VALUE=_t;H=je.prototype;H.toInt=function(){return this.unsigned?this.low>>>0:this.low};H.toNumber=function(){return this.unsigned?(this.high>>>0)*gn+(this.low>>>0):this.high*gn+(this.low>>>0)};H.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(_t)){var n=Mt(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=Mt(Xo(e,6),this.unsigned),u=this,a="";;){var s=u.div(i),l=u.sub(s.mul(i)).toInt()>>>0,c=l.toString(e);if(u=s,u.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};H.getHighBits=function(){return this.high};H.getHighBitsUnsigned=function(){return this.high>>>0};H.getLowBits=function(){return this.low};H.getLowBitsUnsigned=function(){return this.low>>>0};H.getNumBitsAbs=function(){if(this.isNegative())return this.eq(_t)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};H.isZero=function(){return this.high===0&&this.low===0};H.eqz=H.isZero;H.isNegative=function(){return!this.unsigned&&this.high<0};H.isPositive=function(){return this.unsigned||this.high>=0};H.isOdd=function(){return(this.low&1)===1};H.isEven=function(){return(this.low&1)===0};H.equals=function(e){return vt(e)||(e=Ht(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};H.eq=H.equals;H.notEquals=function(e){return!this.eq(e)};H.neq=H.notEquals;H.ne=H.notEquals;H.lessThan=function(e){return this.comp(e)<0};H.lt=H.lessThan;H.lessThanOrEqual=function(e){return this.comp(e)<=0};H.lte=H.lessThanOrEqual;H.le=H.lessThanOrEqual;H.greaterThan=function(e){return this.comp(e)>0};H.gt=H.greaterThan;H.greaterThanOrEqual=function(e){return this.comp(e)>=0};H.gte=H.greaterThanOrEqual;H.ge=H.greaterThanOrEqual;H.compare=function(e){if(vt(e)||(e=Ht(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};H.comp=H.compare;H.negate=function(){return!this.unsigned&&this.eq(_t)?_t:this.not().add(mn)};H.neg=H.negate;H.add=function(e){vt(e)||(e=Ht(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,u=e.high>>>16,a=e.high&65535,s=e.low>>>16,l=e.low&65535,c=0,f=0,h=0,g=0;return g+=i+l,h+=g>>>16,g&=65535,h+=o+s,f+=h>>>16,h&=65535,f+=t+a,c+=f>>>16,f&=65535,c+=n+u,c&=65535,Me(h<<16|g,c<<16|f,this.unsigned)};H.subtract=function(e){return vt(e)||(e=Ht(e)),this.add(e.neg())};H.sub=H.subtract;H.multiply=function(e){if(this.isZero())return this;if(vt(e)||(e=Ht(e)),Bt){var n=Bt.mul(this.low,this.high,e.low,e.high);return Me(n,Bt.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?yr:Ut;if(this.eq(_t))return e.isOdd()?_t:Ut;if(e.eq(_t))return this.isOdd()?_t:Ut;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(xl)&&e.lt(xl))return Mt(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,u=this.low&65535,a=e.high>>>16,s=e.high&65535,l=e.low>>>16,c=e.low&65535,f=0,h=0,g=0,y=0;return y+=u*c,g+=y>>>16,y&=65535,g+=i*c,h+=g>>>16,g&=65535,g+=u*l,h+=g>>>16,g&=65535,h+=o*c,f+=h>>>16,h&=65535,h+=i*l,f+=h>>>16,h&=65535,h+=u*s,f+=h>>>16,h&=65535,f+=t*c+o*l+i*s+u*a,f&=65535,Me(g<<16|y,f<<16|h,this.unsigned)};H.mul=H.multiply;H.divide=function(e){if(vt(e)||(e=Ht(e)),e.isZero())throw Error("division by zero");if(Bt){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Bt.div_u:Bt.div_s)(this.low,this.high,e.low,e.high);return Me(n,Bt.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?yr:Ut;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return yr;if(e.gt(this.shru(1)))return Tl;i=yr}else{if(this.eq(_t)){if(e.eq(mn)||e.eq(wa))return _t;if(e.eq(_t))return mn;var u=this.shr(1);return t=u.div(e).shl(1),t.eq(Ut)?e.isNegative()?mn:wa:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(_t))return this.unsigned?yr:Ut;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=Ut}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),s=a<=48?1:Xo(2,a-48),l=Mt(t),c=l.mul(e);c.isNegative()||c.gt(o);)t-=s,l=Mt(t,this.unsigned),c=l.mul(e);l.isZero()&&(l=mn),i=i.add(l),o=o.sub(c)}return i};H.div=H.divide;H.modulo=function(e){if(vt(e)||(e=Ht(e)),Bt){var n=(this.unsigned?Bt.rem_u:Bt.rem_s)(this.low,this.high,e.low,e.high);return Me(n,Bt.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};H.mod=H.modulo;H.rem=H.modulo;H.not=function(){return Me(~this.low,~this.high,this.unsigned)};H.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};H.clz=H.countLeadingZeros;H.countTrailingZeros=function(){return this.low?ml(this.low):ml(this.high)+32};H.ctz=H.countTrailingZeros;H.and=function(e){return vt(e)||(e=Ht(e)),Me(this.low&e.low,this.high&e.high,this.unsigned)};H.or=function(e){return vt(e)||(e=Ht(e)),Me(this.low|e.low,this.high|e.high,this.unsigned)};H.xor=function(e){return vt(e)||(e=Ht(e)),Me(this.low^e.low,this.high^e.high,this.unsigned)};H.shiftLeft=function(e){return vt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Me(0,this.low<<e-32,this.unsigned)};H.shl=H.shiftLeft;H.shiftRight=function(e){return vt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Me(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};H.shr=H.shiftRight;H.shiftRightUnsigned=function(e){return vt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?Me(this.high,0,this.unsigned):Me(this.high>>>e-32,0,this.unsigned)};H.shru=H.shiftRightUnsigned;H.shr_u=H.shiftRightUnsigned;H.rotateLeft=function(e){var n;return vt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Me(this.high,this.low,this.unsigned):e<32?(n=32-e,Me(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,Me(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};H.rotl=H.rotateLeft;H.rotateRight=function(e){var n;return vt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Me(this.high,this.low,this.unsigned):e<32?(n=32-e,Me(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,Me(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};H.rotr=H.rotateRight;H.toSigned=function(){return this.unsigned?Me(this.low,this.high,!1):this};H.toUnsigned=function(){return this.unsigned?this:Me(this.low,this.high,!0)};H.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};H.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};H.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};je.fromBytes=function(e,n,t){return t?je.fromBytesLE(e,n):je.fromBytesBE(e,n)};je.fromBytesLE=function(e,n){return new je(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};je.fromBytesBE=function(e,n){return new je(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};vr=je});var C,Jo=P(()=>{C={};C.Offset;C.Table;C.SIZEOF_SHORT=2;C.SIZEOF_INT=4;C.FILE_IDENTIFIER_LENGTH=4;C.SIZE_PREFIX_LENGTH=4;C.Encoding={UTF8_BYTES:1,UTF16_STRING:2};C.int32=new Int32Array(2);C.float32=new Float32Array(C.int32.buffer);C.float64=new Float64Array(C.int32.buffer);C.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;C.Long=function(r,e){this.low=r|0,this.high=e|0};C.Long.create=function(r,e){return r==0&&e==0?C.Long.ZERO:new C.Long(r,e)};C.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};C.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};C.Long.ZERO=new C.Long(0,0);C.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=C.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};C.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};C.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};C.Builder.prototype.dataBuffer=function(){return this.bb};C.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};C.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=C.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};C.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};C.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};C.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};C.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};C.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};C.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};C.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};C.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};C.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};C.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};C.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};C.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};C.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};C.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};C.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};C.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};C.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};C.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};C.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};C.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};C.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};C.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};C.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};C.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};C.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};C.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=C.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};C.Builder.prototype.addOffset=function(r){this.prep(C.SIZEOF_INT,0),this.writeInt32(this.offset()-r+C.SIZEOF_INT)};C.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};C.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*C.SIZEOF_SHORT;this.addInt16(o);var i=0,u=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var s=C.SIZEOF_SHORT;s<o;s+=C.SIZEOF_SHORT)if(this.bb.readInt16(u+s)!=this.bb.readInt16(a+s))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};C.Builder.prototype.finish=function(r,e,n){var t=n?C.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,C.SIZEOF_INT+C.FILE_IDENTIFIER_LENGTH+t),o.length!=C.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+C.FILE_IDENTIFIER_LENGTH);for(var i=C.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,C.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};C.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};C.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};C.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(C.SIZEOF_INT,r*e),this.prep(n,r*e)};C.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};C.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,u=this.space,a=this.bb.bytes();n<e.length;n++)a[u++]=e[n];return this.endVector()};C.Builder.prototype.createLong=function(r,e){return C.Long.create(r,e)};C.ByteBuffer=function(r){this.bytes_=r,this.position_=0};C.ByteBuffer.allocate=function(r){return new C.ByteBuffer(new Uint8Array(r))};C.ByteBuffer.prototype.clear=function(){this.position_=0};C.ByteBuffer.prototype.bytes=function(){return this.bytes_};C.ByteBuffer.prototype.position=function(){return this.position_};C.ByteBuffer.prototype.setPosition=function(r){this.position_=r};C.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};C.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};C.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};C.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};C.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};C.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};C.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};C.ByteBuffer.prototype.readInt64=function(r){return new C.Long(this.readInt32(r),this.readInt32(r+4))};C.ByteBuffer.prototype.readUint64=function(r){return new C.Long(this.readUint32(r),this.readUint32(r+4))};C.ByteBuffer.prototype.readFloat32=function(r){return C.int32[0]=this.readInt32(r),C.float32[0]};C.ByteBuffer.prototype.readFloat64=function(r){return C.int32[C.isLittleEndian?0:1]=this.readInt32(r),C.int32[C.isLittleEndian?1:0]=this.readInt32(r+4),C.float64[0]};C.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};C.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};C.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};C.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};C.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};C.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};C.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};C.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};C.ByteBuffer.prototype.writeFloat32=function(r,e){C.float32[0]=e,this.writeInt32(r,C.int32[0])};C.ByteBuffer.prototype.writeFloat64=function(r,e){C.float64[0]=e,this.writeInt32(r,C.int32[C.isLittleEndian?0:1]),this.writeInt32(r+4,C.int32[C.isLittleEndian?1:0])};C.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+C.SIZEOF_INT+C.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<C.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+C.SIZEOF_INT+e));return r};C.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};C.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};C.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=C.SIZEOF_INT,e===C.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,u=this.readUint8(r+o++);if(u<192)i=u;else{var a=this.readUint8(r+o++);if(u<224)i=(u&31)<<6|a&63;else{var s=this.readUint8(r+o++);if(u<240)i=(u&15)<<12|(a&63)<<6|s&63;else{var l=this.readUint8(r+o++);i=(u&7)<<18|(a&63)<<12|(s&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};C.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};C.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+C.SIZEOF_INT};C.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};C.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=C.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+C.FILE_IDENTIFIER_LENGTH);for(var e=0;e<C.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+C.SIZEOF_INT+e))return!1;return!0};C.ByteBuffer.prototype.createLong=function(r,e){return C.Long.create(r,e)}});var re,qn=P(()=>{"use strict";Jo();(e=>{let r;(t=>{let n;(i=>{let o;(E=>(E[E.UNDEFINED=0]="UNDEFINED",E[E.FLOAT=1]="FLOAT",E[E.INT=2]="INT",E[E.STRING=3]="STRING",E[E.TENSOR=4]="TENSOR",E[E.GRAPH=5]="GRAPH",E[E.FLOATS=6]="FLOATS",E[E.INTS=7]="INTS",E[E.STRINGS=8]="STRINGS",E[E.TENSORS=9]="TENSORS",E[E.GRAPHS=10]="GRAPHS",E[E.SPARSE_TENSOR=11]="SPARSE_TENSOR",E[E.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{let o;(k=>(k[k.UNDEFINED=0]="UNDEFINED",k[k.FLOAT=1]="FLOAT",k[k.UINT8=2]="UINT8",k[k.INT8=3]="INT8",k[k.UINT16=4]="UINT16",k[k.INT16=5]="INT16",k[k.INT32=6]="INT32",k[k.INT64=7]="INT64",k[k.STRING=8]="STRING",k[k.BOOL=9]="BOOL",k[k.FLOAT16=10]="FLOAT16",k[k.DOUBLE=11]="DOUBLE",k[k.UINT32=12]="UINT32",k[k.UINT64=13]="UINT64",k[k.COMPLEX64=14]="COMPLEX64",k[k.COMPLEX128=15]="COMPLEX128",k[k.BFLOAT16=16]="BFLOAT16",k[k.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",k[k.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",k[k.FLOAT8E5M2=19]="FLOAT8E5M2",k[k.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{let o;(s=>(s[s.Primitive=0]="Primitive",s[s.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{let o;(c=>(c[c.NONE=0]="NONE",c[c.tensor_type=1]="tensor_type",c[c.sequence_type=2]="sequence_type",c[c.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsShape(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,s){let l=this.bb.__offset(this.bb_pos,4);return l?(s||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,s){a.addFieldOffset(0,s,0)}static createDimVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startDimVector(a,s){a.startVector(4,s,4)}static endShape(a){return a.endObject()}static createShape(a,s){return o.startShape(a),o.addDim(a,s),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsDimension(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}denotation(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}static startDimension(a){a.startObject(2)}static addValue(a,s){a.addFieldOffset(0,s,0)}static addDenotation(a,s){a.addFieldOffset(1,s,0)}static endDimension(a){return a.endObject()}static createDimension(a,s,l){return o.startDimension(a),o.addValue(a,s),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsDimensionValue(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,s){a.addFieldInt8(0,s,0)}static addDimValue(a,s){a.addFieldInt64(1,s,a.createLong(0,0))}static addDimParam(a,s){a.addFieldOffset(2,s,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,s,l,c){return o.startDimensionValue(a),o.addDimType(a,s),o.addDimValue(a,l),o.addDimParam(a,c),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTensorTypeAndShape(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,s){a.addFieldInt32(0,s,0)}static addShape(a,s){a.addFieldOffset(1,s,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,s,l){return o.startTensorTypeAndShape(a),o.addElemType(a,s),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsMapType(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,s){a.addFieldInt32(0,s,0)}static addValueType(a,s){a.addFieldOffset(1,s,0)}static endMapType(a){return a.endObject()}static createMapType(a,s,l){return o.startMapType(a),o.addKeyType(a,s),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSequenceType(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,s){a.addFieldOffset(0,s,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,s){return o.startSequenceType(a),o.addElemType(a,s),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,s,l,c){return a.prep(4,12),a.writeInt32(c),a.writeInt32(l),a.writeInt32(s),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsNodeEdge(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,s){let l=this.bb.__offset(this.bb_pos,8);return l?(s||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,s){a.addFieldInt32(0,s,0)}static addInputEdges(a,s){a.addFieldOffset(1,s,0)}static startInputEdgesVector(a,s){a.startVector(12,s,4)}static addOutputEdges(a,s){a.addFieldOffset(2,s,0)}static startOutputEdgesVector(a,s){a.startVector(12,s,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,s,l,c){return o.startNodeEdge(a),o.addNodeIndex(a,s),o.addInputEdges(a,l),o.addOutputEdges(a,c),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsNode(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}domain(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let s=this.bb.__offset(this.bb_pos,14);return s?this.bb.__string(this.bb_pos+s,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let s=this.bb.__offset(this.bb_pos,18);return s?this.bb.__string(this.bb_pos+s,a):null}inputs(a,s){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,s){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,s){let l=this.bb.__offset(this.bb_pos,24);return l?(s||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let s=this.bb.__offset(this.bb_pos,26);return s?this.bb.readInt32(this.bb.__vector(this.bb_pos+s)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,s){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addDomain(a,s){a.addFieldOffset(2,s,0)}static addSinceVersion(a,s){a.addFieldInt32(3,s,0)}static addIndex(a,s){a.addFieldInt32(4,s,0)}static addOpType(a,s){a.addFieldOffset(5,s,0)}static addType(a,s){a.addFieldInt32(6,s,0)}static addExecutionProviderType(a,s){a.addFieldOffset(7,s,0)}static addInputs(a,s){a.addFieldOffset(8,s,0)}static createInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInputsVector(a,s){a.startVector(4,s,4)}static addOutputs(a,s){a.addFieldOffset(9,s,0)}static createOutputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOutputsVector(a,s){a.startVector(4,s,4)}static addAttributes(a,s){a.addFieldOffset(10,s,0)}static createAttributesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startAttributesVector(a,s){a.startVector(4,s,4)}static addInputArgCounts(a,s){a.addFieldOffset(11,s,0)}static createInputArgCountsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addInt32(s[l]);return a.endVector()}static startInputArgCountsVector(a,s){a.startVector(4,s,4)}static addImplicitInputs(a,s){a.addFieldOffset(12,s,0)}static createImplicitInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startImplicitInputsVector(a,s){a.startVector(4,s,4)}static endNode(a){return a.endObject()}static createNode(a,s,l,c,f,h,g,y,b,w,S,A,E,R){return o.startNode(a),o.addName(a,s),o.addDocString(a,l),o.addDomain(a,c),o.addSinceVersion(a,f),o.addIndex(a,h),o.addOpType(a,g),o.addType(a,y),o.addExecutionProviderType(a,b),o.addInputs(a,w),o.addOutputs(a,S),o.addAttributes(a,A),o.addInputArgCounts(a,E),o.addImplicitInputs(a,R),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsValueInfo(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}type(a){let s=this.bb.__offset(this.bb_pos,8);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addType(a,s){a.addFieldOffset(2,s,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,s,l,c){return o.startValueInfo(a),o.addName(a,s),o.addDocString(a,l),o.addType(a,c),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTypeInfo(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__union(a,this.bb_pos+s):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,s){a.addFieldOffset(0,s,0)}static addValueType(a,s){a.addFieldInt8(1,s,0)}static addValue(a,s){a.addFieldOffset(2,s,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,s,l,c){return o.startTypeInfo(a),o.addDenotation(a,s),o.addValueType(a,l),o.addValue(a,c),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsOperatorSetId(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,s){a.addFieldOffset(0,s,0)}static addVersion(a,s){a.addFieldInt64(1,s,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,s,l){return o.startOperatorSetId(a),o.addDomain(a,s),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTensor(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}dims(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let s=this.bb.__offset(this.bb_pos,12);return s?this.bb.readUint8(this.bb.__vector(this.bb_pos+s)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,s){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addDims(a,s){a.addFieldOffset(2,s,0)}static createDimsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startDimsVector(a,s){a.startVector(8,s,8)}static addDataType(a,s){a.addFieldInt32(3,s,0)}static addRawData(a,s){a.addFieldOffset(4,s,0)}static createRawDataVector(a,s){a.startVector(1,s.length,1);for(let l=s.length-1;l>=0;l--)a.addInt8(s[l]);return a.endVector()}static startRawDataVector(a,s){a.startVector(1,s,1)}static addStringData(a,s){a.addFieldOffset(5,s,0)}static createStringDataVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startStringDataVector(a,s){a.startVector(4,s,4)}static endTensor(a){return a.endObject()}static createTensor(a,s,l,c,f,h,g){return o.startTensor(a),o.addName(a,s),o.addDocString(a,l),o.addDims(a,c),o.addDataType(a,f),o.addRawData(a,h),o.addStringData(a,g),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSparseTensor(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}indices(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}dims(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,s){a.addFieldOffset(0,s,0)}static addIndices(a,s){a.addFieldOffset(1,s,0)}static addDims(a,s){a.addFieldOffset(2,s,0)}static createDimsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startDimsVector(a,s){a.startVector(8,s,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,s,l,c){return o.startSparseTensor(a),o.addValues(a,s),o.addIndices(a,l),o.addDims(a,c),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsAttribute(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let s=this.bb.__offset(this.bb_pos,14);return s?this.bb.__string(this.bb_pos+s,a):null}t(a){let s=this.bb.__offset(this.bb_pos,16);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}g(a){let s=this.bb.__offset(this.bb_pos,18);return s?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}floats(a){let s=this.bb.__offset(this.bb_pos,20);return s?this.bb.readFloat32(this.bb.__vector(this.bb_pos+s)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let s=this.bb.__offset(this.bb_pos,22);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,s){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,s){let l=this.bb.__offset(this.bb_pos,26);return l?(s||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,s){let l=this.bb.__offset(this.bb_pos,28);return l?(s||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addType(a,s){a.addFieldInt32(2,s,0)}static addF(a,s){a.addFieldFloat32(3,s,0)}static addI(a,s){a.addFieldInt64(4,s,a.createLong(0,0))}static addS(a,s){a.addFieldOffset(5,s,0)}static addT(a,s){a.addFieldOffset(6,s,0)}static addG(a,s){a.addFieldOffset(7,s,0)}static addFloats(a,s){a.addFieldOffset(8,s,0)}static createFloatsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addFloat32(s[l]);return a.endVector()}static startFloatsVector(a,s){a.startVector(4,s,4)}static addInts(a,s){a.addFieldOffset(9,s,0)}static createIntsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startIntsVector(a,s){a.startVector(8,s,8)}static addStrings(a,s){a.addFieldOffset(10,s,0)}static createStringsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startStringsVector(a,s){a.startVector(4,s,4)}static addTensors(a,s){a.addFieldOffset(11,s,0)}static createTensorsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startTensorsVector(a,s){a.startVector(4,s,4)}static addGraphs(a,s){a.addFieldOffset(12,s,0)}static createGraphsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startGraphsVector(a,s){a.startVector(4,s,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,s,l,c,f,h,g,y,b,w,S,A,E,R){return o.startAttribute(a),o.addName(a,s),o.addDocString(a,l),o.addType(a,c),o.addF(a,f),o.addI(a,h),o.addS(a,g),o.addT(a,y),o.addG(a,b),o.addFloats(a,w),o.addInts(a,S),o.addStrings(a,A),o.addTensors(a,E),o.addGraphs(a,R),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsGraph(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,s){let l=this.bb.__offset(this.bb_pos,4);return l?(s||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,s){let l=this.bb.__offset(this.bb_pos,8);return l?(s||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,s){let l=this.bb.__offset(this.bb_pos,12);return l?(s||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,s){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,s){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,s){let l=this.bb.__offset(this.bb_pos,18);return l?(s||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,s){a.addFieldOffset(0,s,0)}static createInitializersVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInitializersVector(a,s){a.startVector(4,s,4)}static addNodeArgs(a,s){a.addFieldOffset(1,s,0)}static createNodeArgsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodeArgsVector(a,s){a.startVector(4,s,4)}static addNodes(a,s){a.addFieldOffset(2,s,0)}static createNodesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodesVector(a,s){a.startVector(4,s,4)}static addMaxNodeIndex(a,s){a.addFieldInt32(3,s,0)}static addNodeEdges(a,s){a.addFieldOffset(4,s,0)}static createNodeEdgesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodeEdgesVector(a,s){a.startVector(4,s,4)}static addInputs(a,s){a.addFieldOffset(5,s,0)}static createInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInputsVector(a,s){a.startVector(4,s,4)}static addOutputs(a,s){a.addFieldOffset(6,s,0)}static createOutputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOutputsVector(a,s){a.startVector(4,s,4)}static addSparseInitializers(a,s){a.addFieldOffset(7,s,0)}static createSparseInitializersVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startSparseInitializersVector(a,s){a.startVector(4,s,4)}static endGraph(a){return a.endObject()}static createGraph(a,s,l,c,f,h,g,y,b){return o.startGraph(a),o.addInitializers(a,s),o.addNodeArgs(a,l),o.addNodes(a,c),o.addMaxNodeIndex(a,f),o.addNodeEdges(a,h),o.addInputs(a,g),o.addOutputs(a,y),o.addSparseInitializers(a,b),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsModel(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}producerVersion(a){let s=this.bb.__offset(this.bb_pos,10);return s?this.bb.__string(this.bb_pos+s,a):null}domain(a){let s=this.bb.__offset(this.bb_pos,12);return s?this.bb.__string(this.bb_pos+s,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let s=this.bb.__offset(this.bb_pos,16);return s?this.bb.__string(this.bb_pos+s,a):null}graph(a){let s=this.bb.__offset(this.bb_pos,18);return s?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}graphDocString(a){let s=this.bb.__offset(this.bb_pos,20);return s?this.bb.__string(this.bb_pos+s,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,s){a.addFieldInt64(0,s,a.createLong(0,0))}static addOpsetImport(a,s){a.addFieldOffset(1,s,0)}static createOpsetImportVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOpsetImportVector(a,s){a.startVector(4,s,4)}static addProducerName(a,s){a.addFieldOffset(2,s,0)}static addProducerVersion(a,s){a.addFieldOffset(3,s,0)}static addDomain(a,s){a.addFieldOffset(4,s,0)}static addModelVersion(a,s){a.addFieldInt64(5,s,a.createLong(0,0))}static addDocString(a,s){a.addFieldOffset(6,s,0)}static addGraph(a,s){a.addFieldOffset(7,s,0)}static addGraphDocString(a,s){a.addFieldOffset(8,s,0)}static endModel(a){return a.endObject()}static createModel(a,s,l,c,f,h,g,y,b,w){return o.startModel(a),o.addIrVersion(a,s),o.addOpsetImport(a,l),o.addProducerName(a,c),o.addProducerVersion(a,f),o.addDomain(a,h),o.addModelVersion(a,g),o.addDocString(a,y),o.addGraph(a,b),o.addGraphDocString(a,w),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsKernelCreateInfos(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.readUint32(this.bb.__vector(this.bb_pos+s)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.readUint64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,s){a.addFieldOffset(0,s,0)}static createNodeIndicesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addInt32(s[l]);return a.endVector()}static startNodeIndicesVector(a,s){a.startVector(4,s,4)}static addKernelDefHashes(a,s){a.addFieldOffset(1,s,0)}static createKernelDefHashesVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startKernelDefHashesVector(a,s){a.startVector(8,s,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,s,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,s),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSubGraphSessionState(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}sessionState(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,s){a.addFieldOffset(0,s,0)}static addSessionState(a,s){a.addFieldOffset(1,s,0)}static endSubGraphSessionState(a){let s=a.endObject();return a.requiredField(s,4),s}static createSubGraphSessionState(a,s,l){return o.startSubGraphSessionState(a),o.addGraphId(a,s),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSessionState(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}subGraphSessionStates(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,s){a.addFieldOffset(0,s,0)}static addSubGraphSessionStates(a,s){a.addFieldOffset(1,s,0)}static createSubGraphSessionStatesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,s){a.startVector(4,s,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,s,l){return o.startSessionState(a),o.addKernels(a,s),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsInferenceSession(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}model(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}sessionState(a){let s=this.bb.__offset(this.bb_pos,8);return s?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,s){a.addFieldOffset(0,s,0)}static addModel(a,s){a.addFieldOffset(1,s,0)}static addSessionState(a,s){a.addFieldOffset(2,s,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,s){a.finish(s,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,s){a.finish(s,"ORTM",!0)}static createInferenceSession(a,s,l,c){return o.startInferenceSession(a),o.addOrtVersion(a,s),o.addModel(a,l),o.addSessionState(a,c),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(re||={})});var _l=He((FT,Il)=>{"use strict";Il.exports=Fy;function Fy(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,s){n[t]=function(c){if(i)if(i=!1,c)s(c);else{for(var f=new Array(arguments.length-1),h=0;h<f.length;)f[h++]=arguments[h];a.apply(null,f)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,s(l))}})}});var Cl=He(El=>{"use strict";var Zo=El;Zo.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var bn=new Array(64),Ol=new Array(123);for(jt=0;jt<64;)Ol[bn[jt]=jt<26?jt+65:jt<52?jt+71:jt<62?jt-4:jt-59|43]=jt++;var jt;Zo.encode=function(e,n,t){for(var o=null,i=[],u=0,a=0,s;n<t;){var l=e[n++];switch(a){case 0:i[u++]=bn[l>>2],s=(l&3)<<4,a=1;break;case 1:i[u++]=bn[s|l>>4],s=(l&15)<<2,a=2;break;case 2:i[u++]=bn[s|l>>6],i[u++]=bn[l&63],a=0;break}u>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),u=0)}return a&&(i[u++]=bn[s],i[u++]=61,a===1&&(i[u++]=61)),o?(u&&o.push(String.fromCharCode.apply(String,i.slice(0,u))),o.join("")):String.fromCharCode.apply(String,i.slice(0,u))};var Al="invalid encoding";Zo.decode=function(e,n,t){for(var o=t,i=0,u,a=0;a<e.length;){var s=e.charCodeAt(a++);if(s===61&&i>1)break;if((s=Ol[s])===void 0)throw Error(Al);switch(i){case 0:u=s,i=1;break;case 1:n[t++]=u<<2|(s&48)>>4,u=s,i=2;break;case 2:n[t++]=(u&15)<<4|(s&60)>>2,u=s,i=3;break;case 3:n[t++]=(u&3)<<6|s,i=0;break}}if(i===1)throw Error(Al);return t-o};Zo.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var Dl=He((VT,Pl)=>{"use strict";Pl.exports=Qo;function Qo(){this._listeners={}}Qo.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};Qo.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};Qo.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var zl=He((WT,Nl)=>{"use strict";Nl.exports=kl(kl);function kl(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(s,l,c){e[0]=s,l[c]=n[0],l[c+1]=n[1],l[c+2]=n[2],l[c+3]=n[3]}function i(s,l,c){e[0]=s,l[c]=n[3],l[c+1]=n[2],l[c+2]=n[1],l[c+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function u(s,l){return n[0]=s[l],n[1]=s[l+1],n[2]=s[l+2],n[3]=s[l+3],e[0]}function a(s,l){return n[3]=s[l],n[2]=s[l+1],n[1]=s[l+2],n[0]=s[l+3],e[0]}r.readFloatLE=t?u:a,r.readFloatBE=t?a:u}():function(){function e(t,o,i,u){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,u);else if(isNaN(o))t(2143289344,i,u);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,u);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,u);else{var s=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-s)*8388608)&8388607;t((a<<31|s+127<<23|l)>>>0,i,u)}}r.writeFloatLE=e.bind(null,Rl),r.writeFloatBE=e.bind(null,Bl);function n(t,o,i){var u=t(o,i),a=(u>>31)*2+1,s=u>>>23&255,l=u&8388607;return s===255?l?NaN:a*(1/0):s===0?a*1401298464324817e-60*l:a*Math.pow(2,s-150)*(l+8388608)}r.readFloatLE=n.bind(null,Ml),r.readFloatBE=n.bind(null,Ll)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(s,l,c){e[0]=s,l[c]=n[0],l[c+1]=n[1],l[c+2]=n[2],l[c+3]=n[3],l[c+4]=n[4],l[c+5]=n[5],l[c+6]=n[6],l[c+7]=n[7]}function i(s,l,c){e[0]=s,l[c]=n[7],l[c+1]=n[6],l[c+2]=n[5],l[c+3]=n[4],l[c+4]=n[3],l[c+5]=n[2],l[c+6]=n[1],l[c+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function u(s,l){return n[0]=s[l],n[1]=s[l+1],n[2]=s[l+2],n[3]=s[l+3],n[4]=s[l+4],n[5]=s[l+5],n[6]=s[l+6],n[7]=s[l+7],e[0]}function a(s,l){return n[7]=s[l],n[6]=s[l+1],n[5]=s[l+2],n[4]=s[l+3],n[3]=s[l+4],n[2]=s[l+5],n[1]=s[l+6],n[0]=s[l+7],e[0]}r.readDoubleLE=t?u:a,r.readDoubleBE=t?a:u}():function(){function e(t,o,i,u,a,s){var l=u<0?1:0;if(l&&(u=-u),u===0)t(0,a,s+o),t(1/u>0?0:2147483648,a,s+i);else if(isNaN(u))t(0,a,s+o),t(2146959360,a,s+i);else if(u>17976931348623157e292)t(0,a,s+o),t((l<<31|2146435072)>>>0,a,s+i);else{var c;if(u<22250738585072014e-324)c=u/5e-324,t(c>>>0,a,s+o),t((l<<31|c/4294967296)>>>0,a,s+i);else{var f=Math.floor(Math.log(u)/Math.LN2);f===1024&&(f=1023),c=u*Math.pow(2,-f),t(c*4503599627370496>>>0,a,s+o),t((l<<31|f+1023<<20|c*1048576&1048575)>>>0,a,s+i)}}}r.writeDoubleLE=e.bind(null,Rl,0,4),r.writeDoubleBE=e.bind(null,Bl,4,0);function n(t,o,i,u,a){var s=t(u,a+o),l=t(u,a+i),c=(l>>31)*2+1,f=l>>>20&2047,h=4294967296*(l&1048575)+s;return f===2047?h?NaN:c*(1/0):f===0?c*5e-324*h:c*Math.pow(2,f-1075)*(h+4503599627370496)}r.readDoubleLE=n.bind(null,Ml,0,4),r.readDoubleBE=n.bind(null,Ll,4,0)}(),r}function Rl(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function Bl(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function Ml(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function Ll(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var Fl=He((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var Vl=He(Gl=>{"use strict";var Sa=Gl;Sa.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};Sa.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,u=[],a=0,s;n<t;)s=e[n++],s<128?u[a++]=s:s>191&&s<224?u[a++]=(s&31)<<6|e[n++]&63:s>239&&s<365?(s=((s&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,u[a++]=55296+(s>>10),u[a++]=56320+(s&1023)):u[a++]=(s&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,u)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,u.slice(0,a))),i.join("")):String.fromCharCode.apply(String,u.slice(0,a))};Sa.write=function(e,n,t){for(var o=t,i,u,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((u=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(u&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var Ul=He((HT,Wl)=>{"use strict";Wl.exports=Gy;function Gy(r,e,n){var t=n||8192,o=t>>>1,i=null,u=t;return function(s){if(s<1||s>o)return r(s);u+s>t&&(i=r(t),u=0);var l=e.call(i,u,u+=s);return u&7&&(u=(u|7)+1),l}}});var jl=He((jT,Hl)=>{"use strict";Hl.exports=pt;var Kn=Cr();function pt(r,e){this.lo=r>>>0,this.hi=e>>>0}var qr=pt.zero=new pt(0,0);qr.toNumber=function(){return 0};qr.zzEncode=qr.zzDecode=function(){return this};qr.length=function(){return 1};var Vy=pt.zeroHash="\0\0\0\0\0\0\0\0";pt.fromNumber=function(e){if(e===0)return qr;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new pt(t,o)};pt.from=function(e){if(typeof e=="number")return pt.fromNumber(e);if(Kn.isString(e))if(Kn.Long)e=Kn.Long.fromString(e);else return pt.fromNumber(parseInt(e,10));return e.low||e.high?new pt(e.low>>>0,e.high>>>0):qr};pt.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};pt.prototype.toLong=function(e){return Kn.Long?new Kn.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var Er=String.prototype.charCodeAt;pt.fromHash=function(e){return e===Vy?qr:new pt((Er.call(e,0)|Er.call(e,1)<<8|Er.call(e,2)<<16|Er.call(e,3)<<24)>>>0,(Er.call(e,4)|Er.call(e,5)<<8|Er.call(e,6)<<16|Er.call(e,7)<<24)>>>0)};pt.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};pt.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};pt.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};pt.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var Cr=He(Ia=>{"use strict";var ie=Ia;ie.asPromise=_l();ie.base64=Cl();ie.EventEmitter=Dl();ie.float=zl();ie.inquire=Fl();ie.utf8=Vl();ie.pool=Ul();ie.LongBits=jl();ie.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);ie.global=ie.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||Ia;ie.emptyArray=Object.freeze?Object.freeze([]):[];ie.emptyObject=Object.freeze?Object.freeze({}):{};ie.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};ie.isString=function(e){return typeof e=="string"||e instanceof String};ie.isObject=function(e){return e&&typeof e=="object"};ie.isset=ie.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};ie.Buffer=function(){try{var r=ie.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();ie._Buffer_from=null;ie._Buffer_allocUnsafe=null;ie.newBuffer=function(e){return typeof e=="number"?ie.Buffer?ie._Buffer_allocUnsafe(e):new ie.Array(e):ie.Buffer?ie._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};ie.Array=typeof Uint8Array<"u"?Uint8Array:Array;ie.Long=ie.global.dcodeIO&&ie.global.dcodeIO.Long||ie.global.Long||ie.inquire("long");ie.key2Re=/^true|false|0|1$/;ie.key32Re=/^-?(?:0|[1-9][0-9]*)$/;ie.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;ie.longToHash=function(e){return e?ie.LongBits.from(e).toHash():ie.LongBits.zeroHash};ie.longFromHash=function(e,n){var t=ie.LongBits.fromHash(e);return ie.Long?ie.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function ql(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}ie.merge=ql;ie.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function Kl(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&ql(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}ie.newError=Kl;ie.ProtocolError=Kl("ProtocolError");ie.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};ie.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};ie.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};ie._configure=function(){var r=ie.Buffer;if(!r){ie._Buffer_from=ie._Buffer_allocUnsafe=null;return}ie._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},ie._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var Da=He((KT,Zl)=>{"use strict";Zl.exports=ke;var Lt=Cr(),_a,ei=Lt.LongBits,Yl=Lt.base64,Xl=Lt.utf8;function Yn(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function Oa(){}function Wy(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function ke(){this.len=0,this.head=new Yn(Oa,0,0),this.tail=this.head,this.states=null}var Jl=function(){return Lt.Buffer?function(){return(ke.create=function(){return new _a})()}:function(){return new ke}};ke.create=Jl();ke.alloc=function(e){return new Lt.Array(e)};Lt.Array!==Array&&(ke.alloc=Lt.pool(ke.alloc,Lt.Array.prototype.subarray));ke.prototype._push=function(e,n,t){return this.tail=this.tail.next=new Yn(e,n,t),this.len+=n,this};function Ea(r,e,n){e[n]=r&255}function Uy(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function Ca(r,e){this.len=r,this.next=void 0,this.val=e}Ca.prototype=Object.create(Yn.prototype);Ca.prototype.fn=Uy;ke.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new Ca((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};ke.prototype.int32=function(e){return e<0?this._push(Pa,10,ei.fromNumber(e)):this.uint32(e)};ke.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function Pa(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}ke.prototype.uint64=function(e){var n=ei.from(e);return this._push(Pa,n.length(),n)};ke.prototype.int64=ke.prototype.uint64;ke.prototype.sint64=function(e){var n=ei.from(e).zzEncode();return this._push(Pa,n.length(),n)};ke.prototype.bool=function(e){return this._push(Ea,1,e?1:0)};function Aa(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}ke.prototype.fixed32=function(e){return this._push(Aa,4,e>>>0)};ke.prototype.sfixed32=ke.prototype.fixed32;ke.prototype.fixed64=function(e){var n=ei.from(e);return this._push(Aa,4,n.lo)._push(Aa,4,n.hi)};ke.prototype.sfixed64=ke.prototype.fixed64;ke.prototype.float=function(e){return this._push(Lt.float.writeFloatLE,4,e)};ke.prototype.double=function(e){return this._push(Lt.float.writeDoubleLE,8,e)};var Hy=Lt.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};ke.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(Ea,1,0);if(Lt.isString(e)){var t=ke.alloc(n=Yl.length(e));Yl.decode(e,t,0),e=t}return this.uint32(n)._push(Hy,n,e)};ke.prototype.string=function(e){var n=Xl.length(e);return n?this.uint32(n)._push(Xl.write,n,e):this._push(Ea,1,0)};ke.prototype.fork=function(){return this.states=new Wy(this),this.head=this.tail=new Yn(Oa,0,0),this.len=0,this};ke.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Yn(Oa,0,0),this.len=0),this};ke.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};ke.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};ke._configure=function(r){_a=r,ke.create=Jl(),_a._configure()}});var tc=He((YT,ec)=>{"use strict";ec.exports=tr;var Ql=Da();(tr.prototype=Object.create(Ql.prototype)).constructor=tr;var Pr=Cr();function tr(){Ql.call(this)}tr._configure=function(){tr.alloc=Pr._Buffer_allocUnsafe,tr.writeBytesBuffer=Pr.Buffer&&Pr.Buffer.prototype instanceof Uint8Array&&Pr.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};tr.prototype.bytes=function(e){Pr.isString(e)&&(e=Pr._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(tr.writeBytesBuffer,n,e),this};function jy(r,e,n){r.length<40?Pr.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}tr.prototype.string=function(e){var n=Pr.Buffer.byteLength(e);return this.uint32(n),n&&this._push(jy,n,e),this};tr._configure()});var Ba=He((XT,ac)=>{"use strict";ac.exports=rt;var rr=Cr(),Ra,oc=rr.LongBits,qy=rr.utf8;function qt(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function rt(r){this.buf=r,this.pos=0,this.len=r.length}var rc=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new rt(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new rt(e);throw Error("illegal buffer")},ic=function(){return rr.Buffer?function(n){return(rt.create=function(o){return rr.Buffer.isBuffer(o)?new Ra(o):rc(o)})(n)}:rc};rt.create=ic();rt.prototype._slice=rr.Array.prototype.subarray||rr.Array.prototype.slice;rt.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,qt(this,10);return e}}();rt.prototype.int32=function(){return this.uint32()|0};rt.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function ka(){var r=new oc(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw qt(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw qt(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}rt.prototype.bool=function(){return this.uint32()!==0};function ti(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}rt.prototype.fixed32=function(){if(this.pos+4>this.len)throw qt(this,4);return ti(this.buf,this.pos+=4)};rt.prototype.sfixed32=function(){if(this.pos+4>this.len)throw qt(this,4);return ti(this.buf,this.pos+=4)|0};function nc(){if(this.pos+8>this.len)throw qt(this,8);return new oc(ti(this.buf,this.pos+=4),ti(this.buf,this.pos+=4))}rt.prototype.float=function(){if(this.pos+4>this.len)throw qt(this,4);var e=rr.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};rt.prototype.double=function(){if(this.pos+8>this.len)throw qt(this,4);var e=rr.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};rt.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw qt(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};rt.prototype.string=function(){var e=this.bytes();return qy.read(e,0,e.length)};rt.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw qt(this,e);this.pos+=e}else do if(this.pos>=this.len)throw qt(this);while(this.buf[this.pos++]&128);return this};rt.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};rt._configure=function(r){Ra=r,rt.create=ic(),Ra._configure();var e=rr.Long?"toLong":"toNumber";rr.merge(rt.prototype,{int64:function(){return ka.call(this)[e](!1)},uint64:function(){return ka.call(this)[e](!0)},sint64:function(){return ka.call(this).zzDecode()[e](!1)},fixed64:function(){return nc.call(this)[e](!0)},sfixed64:function(){return nc.call(this)[e](!1)}})}});var cc=He((JT,lc)=>{"use strict";lc.exports=Kr;var uc=Ba();(Kr.prototype=Object.create(uc.prototype)).constructor=Kr;var sc=Cr();function Kr(r){uc.call(this,r)}Kr._configure=function(){sc.Buffer&&(Kr.prototype._slice=sc.Buffer.prototype.slice)};Kr.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};Kr._configure()});var fc=He((ZT,dc)=>{"use strict";dc.exports=Xn;var Ma=Cr();(Xn.prototype=Object.create(Ma.EventEmitter.prototype)).constructor=Xn;function Xn(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");Ma.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}Xn.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var u=this;if(!i)return Ma.asPromise(r,u,e,n,t,o);if(!u.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return u.rpcImpl(e,n[u.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(s,l){if(s)return u.emit("error",s,e),i(s);if(l===null){u.end(!0);return}if(!(l instanceof t))try{l=t[u.responseDelimited?"decodeDelimited":"decode"](l)}catch(c){return u.emit("error",c,e),i(c)}return u.emit("data",l,e),i(null,l)})}catch(a){u.emit("error",a,e),setTimeout(function(){i(a)},0);return}};Xn.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var hc=He(pc=>{"use strict";var Ky=pc;Ky.Service=fc()});var gc=He((e$,mc)=>{"use strict";mc.exports={}});var vc=He(yc=>{"use strict";var At=yc;At.build="minimal";At.Writer=Da();At.BufferWriter=tc();At.Reader=Ba();At.BufferReader=cc();At.util=Cr();At.rpc=hc();At.roots=gc();At.configure=bc;function bc(){At.util._configure(),At.Writer._configure(At.BufferWriter),At.Reader._configure(At.BufferReader)}bc()});var wc=He((r$,xc)=>{"use strict";xc.exports=vc()});var yn=He((n$,Tc)=>{"use strict";var qe=wc(),q=qe.Reader,nt=qe.Writer,_=qe.util,T=qe.roots.default||(qe.roots.default={});T.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=_.Long?_.Long.fromBits(0,0,!1):0,e.prototype.s=_.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=_.emptyArray,e.prototype.ints=_.emptyArray,e.prototype.strings=_.emptyArray,e.prototype.tensors=_.emptyArray,e.prototype.graphs=_.emptyArray,e.prototype.sparseTensors=_.emptyArray,e.prototype.typeProtos=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=nt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&T.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&T.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)T.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)T.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&T.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)T.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&T.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)T.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 21:{u.refAttrName=t.string();break}case 13:{u.docString=t.string();break}case 20:{u.type=t.int32();break}case 2:{u.f=t.float();break}case 3:{u.i=t.int64();break}case 4:{u.s=t.bytes();break}case 5:{u.t=T.onnx.TensorProto.decode(t,t.uint32());break}case 6:{u.g=T.onnx.GraphProto.decode(t,t.uint32());break}case 22:{u.sparseTensor=T.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{u.tp=T.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(u.floats&&u.floats.length||(u.floats=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.floats.push(t.float());else u.floats.push(t.float());break}case 8:{if(u.ints&&u.ints.length||(u.ints=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.ints.push(t.int64());else u.ints.push(t.int64());break}case 9:{u.strings&&u.strings.length||(u.strings=[]),u.strings.push(t.bytes());break}case 10:{u.tensors&&u.tensors.length||(u.tensors=[]),u.tensors.push(T.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{u.graphs&&u.graphs.length||(u.graphs=[]),u.graphs.push(T.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{u.sparseTensors&&u.sparseTensors.length||(u.sparseTensors=[]),u.sparseTensors.push(T.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{u.typeProtos&&u.typeProtos.length||(u.typeProtos=[]),u.typeProtos.push(T.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!_.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!_.isInteger(t.i)&&!(t.i&&_.isInteger(t.i.low)&&_.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||_.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=T.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=T.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=T.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=T.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!_.isInteger(t.ints[i])&&!(t.ints[i]&&_.isInteger(t.ints[i].low)&&_.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||_.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=T.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=T.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=T.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=T.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof T.onnx.AttributeProto)return t;var o=new T.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(_.Long?(o.i=_.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new _.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?_.base64.decode(t.s,o.s=_.newBuffer(_.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=T.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=T.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=T.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=T.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)_.Long?(o.ints[i]=_.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new _.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?_.base64.decode(t.strings[i],o.strings[i]=_.newBuffer(_.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=T.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=T.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=T.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=T.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,_.Long){var u=new _.Long(0,0,!1);i.i=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=_.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?_.Long.prototype.toString.call(t.i):o.longs===Number?new _.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?_.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=T.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=T.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?_.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new _.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?_.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=T.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=T.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=T.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=T.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?T.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:T.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=T.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=T.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=nt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&T.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 2:{u.type=T.onnx.TypeProto.decode(t,t.uint32());break}case 3:{u.docString=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=T.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.ValueInfoProto)return t;var o=new T.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=T.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=T.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=_.emptyArray,e.prototype.output=_.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=_.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=nt.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)T.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.input&&u.input.length||(u.input=[]),u.input.push(t.string());break}case 2:{u.output&&u.output.length||(u.output=[]),u.output.push(t.string());break}case 3:{u.name=t.string();break}case 4:{u.opType=t.string();break}case 7:{u.domain=t.string();break}case 5:{u.attribute&&u.attribute.length||(u.attribute=[]),u.attribute.push(T.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{u.docString=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!_.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!_.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!_.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!_.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=T.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.NodeProto)return t;var o=new T.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=T.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=t.input[u]}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=t.output[u]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var u=0;u<t.attribute.length;++u)i.attribute[u]=T.onnx.AttributeProto.toObject(t.attribute[u],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=_.emptyArray,e.prototype.updateBinding=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=nt.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&T.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&T.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)T.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)T.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.initialization=T.onnx.GraphProto.decode(t,t.uint32());break}case 2:{u.algorithm=T.onnx.GraphProto.decode(t,t.uint32());break}case 3:{u.initializationBinding&&u.initializationBinding.length||(u.initializationBinding=[]),u.initializationBinding.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{u.updateBinding&&u.updateBinding.length||(u.updateBinding=[]),u.updateBinding.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=T.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=T.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=T.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=T.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TrainingInfoProto)return t;var o=new T.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=T.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=T.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=T.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=T.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=T.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=T.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var u=0;u<t.initializationBinding.length;++u)i.initializationBinding[u]=T.onnx.StringStringEntryProto.toObject(t.initializationBinding[u],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var u=0;u<t.updateBinding.length;++u)i.updateBinding[u]=T.onnx.StringStringEntryProto.toObject(t.updateBinding[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=_.Long?_.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=_.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=_.Long?_.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=_.emptyArray,e.prototype.trainingInfo=_.emptyArray,e.prototype.functions=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=nt.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&T.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)T.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)T.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)T.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)T.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.irVersion=t.int64();break}case 8:{u.opsetImport&&u.opsetImport.length||(u.opsetImport=[]),u.opsetImport.push(T.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{u.producerName=t.string();break}case 3:{u.producerVersion=t.string();break}case 4:{u.domain=t.string();break}case 5:{u.modelVersion=t.int64();break}case 6:{u.docString=t.string();break}case 7:{u.graph=T.onnx.GraphProto.decode(t,t.uint32());break}case 14:{u.metadataProps&&u.metadataProps.length||(u.metadataProps=[]),u.metadataProps.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{u.trainingInfo&&u.trainingInfo.length||(u.trainingInfo=[]),u.trainingInfo.push(T.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{u.functions&&u.functions.length||(u.functions=[]),u.functions.push(T.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!_.isInteger(t.irVersion)&&!(t.irVersion&&_.isInteger(t.irVersion.low)&&_.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=T.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!_.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!_.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!_.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!_.isInteger(t.modelVersion)&&!(t.modelVersion&&_.isInteger(t.modelVersion.low)&&_.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=T.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=T.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=T.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.ModelProto)return t;var o=new T.onnx.ModelProto;if(t.irVersion!=null&&(_.Long?(o.irVersion=_.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new _.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=T.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(_.Long?(o.modelVersion=_.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new _.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=T.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=T.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=T.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=T.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(_.Long){var u=new _.Long(0,0,!1);i.irVersion=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",_.Long){var u=new _.Long(0,0,!1);i.modelVersion=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?_.Long.prototype.toString.call(t.irVersion):o.longs===Number?new _.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?_.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new _.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=T.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=T.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=T.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=T.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=T.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=nt.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.key=t.string();break}case 2:{u.value=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!_.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!_.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.StringStringEntryProto)return t;var o=new T.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=nt.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)T.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.tensorName=t.string();break}case 2:{u.quantParameterTensorNames&&u.quantParameterTensorNames.length||(u.quantParameterTensorNames=[]),u.quantParameterTensorNames.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!_.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorAnnotation)return t;var o=new T.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=T.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var u=0;u<t.quantParameterTensorNames.length;++u)i.quantParameterTensorNames[u]=T.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=_.emptyArray,e.prototype.name="",e.prototype.initializer=_.emptyArray,e.prototype.sparseInitializer=_.emptyArray,e.prototype.docString="",e.prototype.input=_.emptyArray,e.prototype.output=_.emptyArray,e.prototype.valueInfo=_.emptyArray,e.prototype.quantizationAnnotation=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=nt.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)T.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)T.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)T.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)T.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)T.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)T.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)T.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.node&&u.node.length||(u.node=[]),u.node.push(T.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{u.name=t.string();break}case 5:{u.initializer&&u.initializer.length||(u.initializer=[]),u.initializer.push(T.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{u.sparseInitializer&&u.sparseInitializer.length||(u.sparseInitializer=[]),u.sparseInitializer.push(T.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{u.docString=t.string();break}case 11:{u.input&&u.input.length||(u.input=[]),u.input.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{u.output&&u.output.length||(u.output=[]),u.output.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{u.valueInfo&&u.valueInfo.length||(u.valueInfo=[]),u.valueInfo.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{u.quantizationAnnotation&&u.quantizationAnnotation.length||(u.quantizationAnnotation=[]),u.quantizationAnnotation.push(T.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=T.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=T.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=T.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=T.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=T.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=T.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=T.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.GraphProto)return t;var o=new T.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=T.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=T.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=T.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=T.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=T.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=T.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=T.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var u=0;u<t.node.length;++u)i.node[u]=T.onnx.NodeProto.toObject(t.node[u],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var u=0;u<t.initializer.length;++u)i.initializer[u]=T.onnx.TensorProto.toObject(t.initializer[u],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=T.onnx.ValueInfoProto.toObject(t.input[u],o)}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=T.onnx.ValueInfoProto.toObject(t.output[u],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var u=0;u<t.valueInfo.length;++u)i.valueInfo[u]=T.onnx.ValueInfoProto.toObject(t.valueInfo[u],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var u=0;u<t.quantizationAnnotation.length;++u)i.quantizationAnnotation[u]=T.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[u],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var u=0;u<t.sparseInitializer.length;++u)i.sparseInitializer[u]=T.onnx.SparseTensorProto.toObject(t.sparseInitializer[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=_.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=_.emptyArray,e.prototype.int32Data=_.emptyArray,e.prototype.stringData=_.emptyArray,e.prototype.int64Data=_.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=_.newBuffer([]),e.prototype.externalData=_.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=_.emptyArray,e.prototype.uint64Data=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=nt.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&T.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)T.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(u.dims&&u.dims.length||(u.dims=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.dims.push(t.int64());else u.dims.push(t.int64());break}case 2:{u.dataType=t.int32();break}case 3:{u.segment=T.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(u.floatData&&u.floatData.length||(u.floatData=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.floatData.push(t.float());else u.floatData.push(t.float());break}case 5:{if(u.int32Data&&u.int32Data.length||(u.int32Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.int32Data.push(t.int32());else u.int32Data.push(t.int32());break}case 6:{u.stringData&&u.stringData.length||(u.stringData=[]),u.stringData.push(t.bytes());break}case 7:{if(u.int64Data&&u.int64Data.length||(u.int64Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.int64Data.push(t.int64());else u.int64Data.push(t.int64());break}case 8:{u.name=t.string();break}case 12:{u.docString=t.string();break}case 9:{u.rawData=t.bytes();break}case 13:{u.externalData&&u.externalData.length||(u.externalData=[]),u.externalData.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{u.dataLocation=t.int32();break}case 10:{if(u.doubleData&&u.doubleData.length||(u.doubleData=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.doubleData.push(t.double());else u.doubleData.push(t.double());break}case 11:{if(u.uint64Data&&u.uint64Data.length||(u.uint64Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.uint64Data.push(t.uint64());else u.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!_.isInteger(t.dims[o])&&!(t.dims[o]&&_.isInteger(t.dims[o].low)&&_.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!_.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=T.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!_.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||_.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!_.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&_.isInteger(t.int64Data[o].low)&&_.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||_.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!_.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&_.isInteger(t.uint64Data[o].low)&&_.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorProto)return t;var o=new T.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)_.Long?(o.dims[i]=_.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new _.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=T.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?_.base64.decode(t.stringData[i],o.stringData[i]=_.newBuffer(_.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)_.Long?(o.int64Data[i]=_.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new _.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?_.base64.decode(t.rawData,o.rawData=_.newBuffer(_.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=T.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)_.Long?(o.uint64Data[i]=_.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new _.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=_.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var u=0;u<t.dims.length;++u)typeof t.dims[u]=="number"?i.dims[u]=o.longs===String?String(t.dims[u]):t.dims[u]:i.dims[u]=o.longs===String?_.Long.prototype.toString.call(t.dims[u]):o.longs===Number?new _.LongBits(t.dims[u].low>>>0,t.dims[u].high>>>0).toNumber():t.dims[u]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=T.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var u=0;u<t.floatData.length;++u)i.floatData[u]=o.json&&!isFinite(t.floatData[u])?String(t.floatData[u]):t.floatData[u]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var u=0;u<t.int32Data.length;++u)i.int32Data[u]=t.int32Data[u]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var u=0;u<t.stringData.length;++u)i.stringData[u]=o.bytes===String?_.base64.encode(t.stringData[u],0,t.stringData[u].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[u]):t.stringData[u]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var u=0;u<t.int64Data.length;++u)typeof t.int64Data[u]=="number"?i.int64Data[u]=o.longs===String?String(t.int64Data[u]):t.int64Data[u]:i.int64Data[u]=o.longs===String?_.Long.prototype.toString.call(t.int64Data[u]):o.longs===Number?new _.LongBits(t.int64Data[u].low>>>0,t.int64Data[u].high>>>0).toNumber():t.int64Data[u]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?_.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var u=0;u<t.doubleData.length;++u)i.doubleData[u]=o.json&&!isFinite(t.doubleData[u])?String(t.doubleData[u]):t.doubleData[u]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var u=0;u<t.uint64Data.length;++u)typeof t.uint64Data[u]=="number"?i.uint64Data[u]=o.longs===String?String(t.uint64Data[u]):t.uint64Data[u]:i.uint64Data[u]=o.longs===String?_.Long.prototype.toString.call(t.uint64Data[u]):o.longs===Number?new _.LongBits(t.uint64Data[u].low>>>0,t.uint64Data[u].high>>>0).toNumber(!0):t.uint64Data[u]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var u=0;u<t.externalData.length;++u)i.externalData[u]=T.onnx.StringStringEntryProto.toObject(t.externalData[u],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?T.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:T.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=_.Long?_.Long.fromBits(0,0,!1):0,n.prototype.end=_.Long?_.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=nt.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof q||(o=q.create(o));for(var u=i===void 0?o.len:o.pos+i,a=new T.onnx.TensorProto.Segment;o.pos<u;){var s=o.uint32();switch(s>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(s&7);break}}return a},n.decodeDelimited=function(o){return o instanceof q||(o=new q(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!_.isInteger(o.begin)&&!(o.begin&&_.isInteger(o.begin.low)&&_.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!_.isInteger(o.end)&&!(o.end&&_.isInteger(o.end.low)&&_.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof T.onnx.TensorProto.Segment)return o;var i=new T.onnx.TensorProto.Segment;return o.begin!=null&&(_.Long?(i.begin=_.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new _.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(_.Long?(i.end=_.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new _.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var u={};if(i.defaults){if(_.Long){var a=new _.Long(0,0,!1);u.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else u.begin=i.longs===String?"0":0;if(_.Long){var a=new _.Long(0,0,!1);u.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else u.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?u.begin=i.longs===String?String(o.begin):o.begin:u.begin=i.longs===String?_.Long.prototype.toString.call(o.begin):i.longs===Number?new _.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?u.end=i.longs===String?String(o.end):o.end:u.end=i.longs===String?_.Long.prototype.toString.call(o.end):i.longs===Number?new _.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),u},n.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=nt.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&T.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&T.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.values=T.onnx.TensorProto.decode(t,t.uint32());break}case 2:{u.indices=T.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(u.dims&&u.dims.length||(u.dims=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.dims.push(t.int64());else u.dims.push(t.int64());break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=T.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=T.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!_.isInteger(t.dims[i])&&!(t.dims[i]&&_.isInteger(t.dims[i].low)&&_.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof T.onnx.SparseTensorProto)return t;var o=new T.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=T.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=T.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)_.Long?(o.dims[i]=_.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new _.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=T.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=T.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var u=0;u<t.dims.length;++u)typeof t.dims[u]=="number"?i.dims[u]=o.longs===String?String(t.dims[u]):t.dims[u]:i.dims[u]=o.longs===String?_.Long.prototype.toString.call(t.dims[u]):o.longs===Number?new _.LongBits(t.dims[u].low>>>0,t.dims[u].high>>>0).toNumber():t.dims[u]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=nt.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)T.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.dim&&u.dim.length||(u.dim=[]),u.dim.push(T.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=T.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorShapeProto)return t;var o=new T.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=T.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var u=0;u<t.dim.length;++u)i.dim[u]=T.onnx.TensorShapeProto.Dimension.toObject(t.dim[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:_.oneOfGetter(t=["dimValue","dimParam"]),set:_.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,u){return u||(u=nt.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&u.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&u.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&u.uint32(26).string(i.denotation),u},n.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},n.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.dimValue=i.int64();break}case 2:{s.dimParam=i.string();break}case 3:{s.denotation=i.string();break}default:i.skipType(l&7);break}}return s},n.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var u={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(u.value=1,!_.isInteger(i.dimValue)&&!(i.dimValue&&_.isInteger(i.dimValue.low)&&_.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(u.value===1)return"value: multiple values";if(u.value=1,!_.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!_.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof T.onnx.TensorShapeProto.Dimension)return i;var u=new T.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(_.Long?(u.dimValue=_.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?u.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?u.dimValue=i.dimValue:typeof i.dimValue=="object"&&(u.dimValue=new _.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(u.dimParam=String(i.dimParam)),i.denotation!=null&&(u.denotation=String(i.denotation)),u},n.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=u.longs===String?String(i.dimValue):i.dimValue:a.dimValue=u.longs===String?_.Long.prototype.toString.call(i.dimValue):u.longs===Number?new _.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,u.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,u.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:_.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:_.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=nt.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&T.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&T.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&T.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&T.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&T.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof q||(o=q.create(o));for(var u=i===void 0?o.len:o.pos+i,a=new T.onnx.TypeProto;o.pos<u;){var s=o.uint32();switch(s>>>3){case 1:{a.tensorType=T.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=T.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=T.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=T.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=T.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(s&7);break}}return a},e.decodeDelimited=function(o){return o instanceof q||(o=new q(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var u=T.onnx.TypeProto.Tensor.verify(o.tensorType);if(u)return"tensorType."+u}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Sequence.verify(o.sequenceType);if(u)return"sequenceType."+u}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Map.verify(o.mapType);if(u)return"mapType."+u}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Optional.verify(o.optionalType);if(u)return"optionalType."+u}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(u)return"sparseTensorType."+u}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!_.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof T.onnx.TypeProto)return o;var i=new T.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=T.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=T.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=T.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=T.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=T.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var u={};return i.defaults&&(u.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(u.tensorType=T.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(u.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(u.sequenceType=T.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(u.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(u.mapType=T.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(u.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(u.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(u.sparseTensorType=T.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(u.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(u.optionalType=T.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(u.value="optionalType")),u},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=nt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&u.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&T.onnx.TensorShapeProto.encode(i.shape,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=i.int32();break}case 2:{s.shape=T.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!_.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var u=T.onnx.TensorShapeProto.verify(i.shape);if(u)return"shape."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Tensor)return i;var u=new T.onnx.TypeProto.Tensor;if(i.elemType!=null&&(u.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");u.shape=T.onnx.TensorShapeProto.fromObject(i.shape)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=T.onnx.TensorShapeProto.toObject(i.shape,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=nt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&T.onnx.TypeProto.encode(i.elemType,u.uint32(10).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var u=T.onnx.TypeProto.verify(i.elemType);if(u)return"elemType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Sequence)return i;var u=new T.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");u.elemType=T.onnx.TypeProto.fromObject(i.elemType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=T.onnx.TypeProto.toObject(i.elemType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=nt.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&u.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&T.onnx.TypeProto.encode(i.valueType,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.keyType=i.int32();break}case 2:{s.valueType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!_.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var u=T.onnx.TypeProto.verify(i.valueType);if(u)return"valueType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Map)return i;var u=new T.onnx.TypeProto.Map;if(i.keyType!=null&&(u.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");u.valueType=T.onnx.TypeProto.fromObject(i.valueType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=T.onnx.TypeProto.toObject(i.valueType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=nt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&T.onnx.TypeProto.encode(i.elemType,u.uint32(10).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var u=T.onnx.TypeProto.verify(i.elemType);if(u)return"elemType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Optional)return i;var u=new T.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");u.elemType=T.onnx.TypeProto.fromObject(i.elemType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=T.onnx.TypeProto.toObject(i.elemType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=nt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&u.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&T.onnx.TensorShapeProto.encode(i.shape,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=i.int32();break}case 2:{s.shape=T.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!_.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var u=T.onnx.TensorShapeProto.verify(i.shape);if(u)return"shape."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.SparseTensor)return i;var u=new T.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(u.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");u.shape=T.onnx.TensorShapeProto.fromObject(i.shape)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=T.onnx.TensorShapeProto.toObject(i.shape,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=_.Long?_.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=nt.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.domain=t.string();break}case 2:{u.version=t.int64();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!_.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!_.isInteger(t.version)&&!(t.version&&_.isInteger(t.version.low)&&_.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof T.onnx.OperatorSetIdProto)return t;var o=new T.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(_.Long?(o.version=_.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new _.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",_.Long){var u=new _.Long(0,0,!1);i.version=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?_.Long.prototype.toString.call(t.version):o.longs===Number?new _.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=_.emptyArray,e.prototype.output=_.emptyArray,e.prototype.attribute=_.emptyArray,e.prototype.attributeProto=_.emptyArray,e.prototype.node=_.emptyArray,e.prototype.docString="",e.prototype.opsetImport=_.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=nt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)T.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)T.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)T.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 4:{u.input&&u.input.length||(u.input=[]),u.input.push(t.string());break}case 5:{u.output&&u.output.length||(u.output=[]),u.output.push(t.string());break}case 6:{u.attribute&&u.attribute.length||(u.attribute=[]),u.attribute.push(t.string());break}case 11:{u.attributeProto&&u.attributeProto.length||(u.attributeProto=[]),u.attributeProto.push(T.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{u.node&&u.node.length||(u.node=[]),u.node.push(T.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{u.docString=t.string();break}case 9:{u.opsetImport&&u.opsetImport.length||(u.opsetImport=[]),u.opsetImport.push(T.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{u.domain=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!_.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!_.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!_.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=T.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=T.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=T.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!_.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.FunctionProto)return t;var o=new T.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=T.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=T.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=T.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=t.input[u]}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=t.output[u]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var u=0;u<t.attribute.length;++u)i.attribute[u]=t.attribute[u]}if(t.node&&t.node.length){i.node=[];for(var u=0;u<t.node.length;++u)i.node[u]=T.onnx.NodeProto.toObject(t.node[u],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var u=0;u<t.opsetImport.length;++u)i.opsetImport[u]=T.onnx.OperatorSetIdProto.toObject(t.opsetImport[u],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var u=0;u<t.attributeProto.length;++u)i.attributeProto[u]=T.onnx.AttributeProto.toObject(t.attributeProto[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();Tc.exports=T});function vn(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Zn(r){return new TextDecoder().decode(r)}var Ke,Yr,La,Tt,ri,yt,Ot,te,Jn,Xr,Jr,Zr,Le=P(()=>{"use strict";Jo();$a();Ke=hn(yn());Qr();Yr=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},La=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Tt=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let u=Math.max(e.length,n.length),a=new Array(u);if(t){if(o<2||i<2)return;let s=La.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(s===void 0)return;[a[u-2],a[u-1]]=s}for(let s=t?3:1;s<=u;s++){let l=o-s<0?1:e[o-s],c=i-s<0?1:n[i-s];if(l!==c&&l>1&&c>1)return;a[u-s]=Math.max(l,c)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let u=r.calcShape(e.dims,n.dims);if(u){if(o&&!te.areEqual(u,e.dims))return;let a=te.size(u),s=o?e:new ut(u,i||e.type);if(u.length===0)s.set([],t(e.get([]),n.get([])));else{let l=new Array(u.length),c=new Array(e.dims.length),f=new Array(n.dims.length),h=0,g=0,y=!1,b=!1;e.dims.length===0&&(h=e.get([]),y=!0),n.dims.length===0&&(g=n.get([]),b=!0);let w;for(let S=0;S<a;S++){w=S;for(let A=u.length-1;A>=0;A--)l[A]=w%u[A],w=Math.floor(w/u[A]);y||(r.fillIndex(l,e.dims,c),h=e.get(c)),b||(r.fillIndex(l,n.dims,f),g=n.get(f)),s.set(l,t(h,g))}}return s}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let u=t-1-i,a=e[u]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}},ri=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let u,a,s;n?(u=e[1],a=e[0]):(u=e[0],a=e[1]);let l=-1;if(o?(s=t[0],l=1):(s=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(u<=0||s<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Tt.isValidBroadcast(i,[u,s]))throw new Error("gemm: invalid bias shape for broadcast");return[u,s,a]}},yt=class r{static tensorDataTypeFromProto(e){switch(e){case Ke.onnx.TensorProto.DataType.INT8:return"int8";case Ke.onnx.TensorProto.DataType.UINT8:return"uint8";case Ke.onnx.TensorProto.DataType.BOOL:return"bool";case Ke.onnx.TensorProto.DataType.INT16:return"int16";case Ke.onnx.TensorProto.DataType.UINT16:return"uint16";case Ke.onnx.TensorProto.DataType.INT32:return"int32";case Ke.onnx.TensorProto.DataType.UINT32:return"uint32";case Ke.onnx.TensorProto.DataType.FLOAT:return"float32";case Ke.onnx.TensorProto.DataType.DOUBLE:return"float64";case Ke.onnx.TensorProto.DataType.STRING:return"string";case Ke.onnx.TensorProto.DataType.INT64:return"int32";case Ke.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${Ke.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return Ke.onnx.TensorProto.DataType.INT8;case"uint8":return Ke.onnx.TensorProto.DataType.UINT8;case"bool":return Ke.onnx.TensorProto.DataType.BOOL;case"int16":return Ke.onnx.TensorProto.DataType.INT16;case"uint16":return Ke.onnx.TensorProto.DataType.UINT16;case"int32":return Ke.onnx.TensorProto.DataType.INT32;case"uint32":return Ke.onnx.TensorProto.DataType.UINT32;case"float32":return Ke.onnx.TensorProto.DataType.FLOAT;case"float64":return Ke.onnx.TensorProto.DataType.DOUBLE;case"string":return Ke.onnx.TensorProto.DataType.STRING;case"int64":return Ke.onnx.TensorProto.DataType.INT64;case"uint64":return Ke.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>vr.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(Ot.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},Ot=class{static longToNumber(e,n){return vr.isLong(e)?e.toNumber():e instanceof C.Long?vr.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return vr.isLong(e)||e instanceof C.Long}},te=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,u=1;for(let s=0;s<t;s++){if(n[s]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[s]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=s}else{if(n[s]===0){if(s>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[s]=e[s]}else o[s]=n[s];u*=o[s]}}let a=r.size(e);if(i!==-1){if(a%u!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/u}else if(u!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((u,a)=>u*a,1),o=e.slice(n).reduce((u,a)=>u*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let u=r.normalizeAxis(n[i],t.length);if(u>=t.length)throw new Error("'axes' has an out of range axis");if(t[u]!==0)throw new Error("'axes' has a duplicate axis");t[u]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},Jn=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],u=[0];for(let a=0;a<t.length;++a){a!==0&&u.push(u[a-1]+t[a-1]);let s=e.slice();s[n]=t[a],i.push(s)}return[i,u]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},Xr=class r{static adjustPoolAttributes(e,n,t,o,i,u){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<u.length){if(u[a]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[a]>=t[a]||u[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,u){if(u){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,u)}}static computePoolOutputShape(e,n,t,o,i,u,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let s=[n[0],n[1]];return r.computeShapeHelper(e,n,s,t,o,i,u,a),s}static computeConvOutputShape(e,n,t,o,i,u,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let s=[e[0],n[0]];return r.computeShapeHelper(!1,e,s,t,o,i,u,a),s}static computeShapeHelper(e,n,t,o,i,u,a,s){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],u[l],a,l,l+n.length-2,s))}static adjustPadAndReturnShape(e,n,t,o,i,u,a,s){let l=t*(o-1)+1;if(s&&s!=="NOTSET")switch(s){case"VALID":return i[u]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let f=((e+n-1)/n-1)*n+o-e;return i[u]=Math.floor(s==="SAME_LOWER"?(f+1)/2:f/2),i[a]=f-i[u],Math.floor((e+f-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[u]+i[a]-l)/n+1)}},Jr=-34028234663852886e22,Zr=34028234663852886e22});function Yy(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function $c(r){switch(r){case $e.onnx.TensorProto.DataType.UINT8:case $e.onnx.TensorProto.DataType.INT8:case $e.onnx.TensorProto.DataType.BOOL:return 1;case $e.onnx.TensorProto.DataType.UINT16:case $e.onnx.TensorProto.DataType.INT16:return 2;case $e.onnx.TensorProto.DataType.FLOAT:case $e.onnx.TensorProto.DataType.INT32:case $e.onnx.TensorProto.DataType.UINT32:return 4;case $e.onnx.TensorProto.DataType.INT64:case $e.onnx.TensorProto.DataType.DOUBLE:case $e.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${$e.onnx.TensorProto.DataType[r]}`)}}function Xy(r,e){return new(_c(e))(r)}function _c(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function za(r,e){if(e===$e.onnx.TensorProto.DataType.INT64||e===Na.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===$e.onnx.TensorProto.DataType.UINT32||e===Na.TensorDataType.UINT32||e===$e.onnx.TensorProto.DataType.UINT64||e===Na.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${$e.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function Sc(r,e,n){switch(e){case $e.onnx.TensorProto.DataType.BOOL:case $e.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case $e.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case $e.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case $e.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case $e.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case $e.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case $e.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case $e.onnx.TensorProto.DataType.INT64:return za(vr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case $e.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case $e.onnx.TensorProto.DataType.UINT64:return za(vr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${$e.onnx.TensorProto.DataType[e]}`)}}var Ic,$e,Na,ut,Qr=P(()=>{"use strict";Ic=hn(hl());$a();qn();$e=hn(yn());Le();Na=re.experimental.fbs,ut=class r{constructor(e,n,t,o,i,u=Ic.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=u;this.size=te.validateDimsAndCalcSize(e);let a=this.size,s=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");s&&(this.cache=new Array(a))}else{if(i!==void 0){let l=_c(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(s){let l=new ArrayBuffer(a*Yy(n));this.cache=Xy(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[te.indicesToOffset(e,this.strides)]}set(e,n){this.data[te.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=te.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=yt.tensorDataTypeFromProto(e.dataType),t=yt.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,u)=>{o.data[u]=Zn(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,u=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=$c(e.dataType),s=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==s)throw new Error("buffer length mismatch");for(let l=0;l<s;l++){let c=Sc(u,e.dataType,l*a);i[l]=c}}else{let i;switch(e.dataType){case $e.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case $e.onnx.TensorProto.DataType.INT32:case $e.onnx.TensorProto.DataType.INT16:case $e.onnx.TensorProto.DataType.UINT16:case $e.onnx.TensorProto.DataType.INT8:case $e.onnx.TensorProto.DataType.UINT8:case $e.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case $e.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case $e.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case $e.onnx.TensorProto.DataType.UINT32:case $e.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let u=o.data;if(u.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let s=i[a];vr.isLong(s)?u[a]=za(s,e.dataType):u[a]=s}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=yt.tensorDimsFromORTFormat(e),t=yt.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,u=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=$c(e.dataType()),s=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==s)throw new Error("buffer length mismatch");for(let l=0;l<s;l++){let c=Sc(u,e.dataType(),l*a);i[l]=c}}return o}}});function ae(r){return r===1?Jy:Zy}function Ac(r){let e=ae(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function Oc(r){let e=ae(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function Ec(r,e){let n=ae(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var Jy,Zy,Xe=P(()=>{"use strict";Jy={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},Zy={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var Ce=P(()=>{"use strict"});async function Fa(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,u=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(u,a)};u()})}function ni(r){return vn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function Cc(r){return vn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function xn(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function wn(r,e){return e.map(n=>r[n]).join(", ")}function $t(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Kt(r=6){return["x","y","z","w","u","v"].slice(0,r)}var nr=P(()=>{"use strict";Le()});function Qy(r,e){return Kt(e).map(n=>`${r}.${n}`)}function Tn(r,e){return e===1?[r]:Qy(r,e)}function or(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var en=P(()=>{"use strict";nr()});function t0(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function r0(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",u="rp1, cp1",a="";if(n>2)for(let s=0;s<n-2;++s)a=a+`${e[s]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${u})`}function n0(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var Pc,e0,Dc,kc=P(()=>{"use strict";Xe();Ce();nr();en();Pc={name:"pack",inputNames:["A"],inputTypes:[1]},e0=(r,e)=>{let n=ae(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,u=$t(i),a=Tn("rc",i),s=n0(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let c=t0(i,l,a),f=r0(t,a),h=`
        void main() {
          ${u} rc = getOutputCoords();

          if(${c}) {
            ${n.output} = vec4(0);
          } else {
            ${s}

            ${n.output} = vec4(${f});
          }
        }
      `;return{...Pc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:h}},Dc=(r,e)=>({...Pc,get:()=>e0(r,e)})});function Ga(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function Bc(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function a0(r){let e=te.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,u)=>{let a=`int ${n[u]} = ${t} / ${i}`,s=u===e.length-1?`int ${n[u+1]} = ${t} - ${n[u]} * ${i}`:`index -= ${n[u]} * ${i}`;return`${a}; ${s};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function s0(r){let e=te.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var o0,i0,Rc,Mc=P(()=>{"use strict";Le();Xe();Ce();en();o0=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),i0=(r,e,n,t)=>{let o=e.dims,i=t,u="";for(let l=0;l<4;l++){let c="";switch(l){case 0:c="outputCoords = rc;";break;case 1:c="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:c="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:c="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}u+=`
        ${c}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=ae(r.session.backend.glContext.version),s=`
      ${a0(o)}
      ${s0(i)}
      ${or()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${u}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:s,hasMain:!0}},Rc=(r,e,n)=>{let t=o0(n);return{...t,get:()=>i0(r,e,t,n)}}});var Va,Lc=P(()=>{"use strict";Xe();Ce();Va=(r,e)=>{let n=e.shape,t=ae(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function l0(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var Nc,u0,zc,Fc=P(()=>{"use strict";Xe();Ce();nr();en();Nc={name:"unpack",inputNames:["A"],inputTypes:[2]},u0=(r,e)=>{let n=e.dims.length,t=Tn("rc",n),o=t.slice(-2),i=$t(n),u=or(),s=e.dims.length===0?"":l0(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,c=ae(r.session.backend.glContext.version),f=`
    ${u}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${s});

       ${c.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...Nc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:f}},zc=(r,e)=>({...Nc,get:()=>u0(r,e)})});var oi,Qn,ii,eo=P(()=>{"use strict";Rt();oi=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(ze.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(ze.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,u)=>t[u]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Qn=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(ze.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},ii=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var to,Gc,Wa,Vc=P(()=>{"use strict";Le();Ce();to=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,u=n===4?e.length-1:void 0,a=n===4?e.map((s,l)=>l===e.length-1?s*4:s):void 0;return Wa(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:u})},Gc=(r,e,n)=>{let t=to(r,e,n);return[t.width,t.height]},Wa=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[u,a]=r.computeTextureWH(i&&t||e,o),s=e.length,l=e.slice(0);if(s===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,s>0&&(l[s-1]=Math.ceil(l[s-1]/2)),s>1&&(l[s-2]=Math.ceil(l[s-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:u,height:a,channels:n,isPacked:i,shape:l,strides:te.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var d0,ai,Uc=P(()=>{"use strict";Rt();Qr();Le();kc();Mc();Lc();Fc();eo();Vc();Ce();d0=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},ai=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return Gc(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=d0(e,t),i=this.session.programManager.getArtifact(o),u=i?i.programInfo:typeof e.get=="function"?e.get():e,a=to(this.session.layoutStrategy,u.output.dims,u.output.textureType),s=this.createTextureData(a,u.output.type);return i||(i=this.session.programManager.build(u,t,s),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,s),s}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=to(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let s=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=to(this.session.layoutStrategy,s,n),c=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let f=a[0],h=a[1]*a[2]*a[3],g=Math.ceil(h*1/4)*4,y=f*g;c=new Float32Array(y);for(let b=0;b<f;++b){let w=b*h,S=b*g+b%1*h;c.set(e.numberData.subarray(w,w+h),S)}}return this.createTextureData(l,e.type,c,e,1)}}if(n===2){let i=Wa(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),u=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(u)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){ze.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let u=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,u,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:te.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(Bc(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:te.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=Ga(e.dims),i=Ga(n),u=this.reshapePacked(e,o),a=this.run(Rc(this,u,i),[u]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let u={...e,tensor:o||new ut(e.unpackedShape,n,a=>this.readTexture(u),async a=>this.readTextureAsync(u),void 0,i),texture:t};return this.setTextureData(u.tensor.dataId,u,e.isPacked),u}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Va(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Va(this,e))}pack(e){return this.executeProgram(Dc(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(zc(this,e.tensor),[e.tensor])}}});var Ua,Te,ht=P(()=>{"use strict";Ua=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this._cacheKey}},Te=r=>new Ua(r)});var Hc,jc,qc,f0,p0,Kc=P(()=>{"use strict";ht();Xe();Ce();Hc={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},jc=(r,e,n)=>(p0(e),[r.run({...Hc,cacheHint:n.cacheKey,get:()=>f0(r,e,n)},e)]),qc=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return Te({epsilon:e,momentum:n,spatial:t})},f0=(r,e,n)=>{let t=ae(r.session.backend.glContext.version),o=e[0].dims.length,[i,u]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${u});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...Hc,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},p0=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var si,Nt,J,ro,ui,xr=P(()=>{"use strict";si=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},Nt=class{constructor(e){this.context=e}},J=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},ro=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},ui=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let u=0;u<i.length;++u)this.dfsTraverse(i[u],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function m0(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function g0(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function b0(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function y0(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function v0(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function x0(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function w0(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function T0(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function $0(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function S0(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function I0(){return A0("pow")}function _0(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function A0(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var zt,O0,Yc,Xc,Jc,Zc,Qc,ed,td,rd,nd,od,id,ad,sd=P(()=>{"use strict";Le();xr();Xe();Ce();zt=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>O0(r,e,n,t)}},O0=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!te.areEqual(e[0].dims,e[1].dims),u=e[0].dims,a=r.session.pack;if(i){let c=Tt.calcShape(e[0].dims,e[1].dims,!1);if(!c)throw new Error("Can't perform binary op on the given tensors");u=c;let f=u.length,h=e[0].dims.length!==0?e[0].dims.length:1,g=e[1].dims.length!==0?e[1].dims.length:1,y=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",b=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",w=ae(r.session.backend.glContext.version),S=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${w.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${f}]) {
        int aindices[${h}];
        int bindices[${g}];
        ${y}
        ${b}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:u,type:t,textureType:o},shaderSource:S,hasMain:a}}let s=ae(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${s.texture2D}(A, TexCoords);
      vec4 v2 = ${s.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${s.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},Yc=(r,e)=>[r.run(zt(r,e,m0()),e)],Xc=(r,e)=>[r.run(zt(r,e,T0(),"bool"),e)],Jc=(r,e)=>[r.run(zt(r,e,g0()),e)],Zc=(r,e)=>[r.run(zt(r,e,v0(),"bool"),e)],Qc=(r,e)=>[r.run(zt(r,e,x0(),"bool"),e)],ed=(r,e)=>[r.run(zt(r,e,w0(),"bool"),e)],td=(r,e)=>[r.run(zt(r,e,b0()),e)],rd=(r,e)=>[r.run(zt(r,e,$0(),"bool"),e)],nd=(r,e)=>[r.run(zt(r,e,I0()),e)],od=(r,e)=>[r.run(zt(r,e,_0()),e)],id=(r,e)=>[r.run(zt(r,e,y0()),e)],ad=(r,e)=>[r.run(zt(r,e,S0(),"bool"),e)]});var ud,ld,C0,cd=P(()=>{"use strict";Le();ud=(r,e,n)=>(C0(e),[r.cast(e[0],n)]),ld=r=>yt.tensorDataTypeFromProto(r.attributes.getInt("to")),C0=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var P0,D0,dd,li,fd=P(()=>{"use strict";Xe();Ce();nr();en();P0=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),D0=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let z=1;z<n.length;z++){let B=n[z].dims.slice();for(let G=0;G<o.length;G++)if(G===t)i[t]+=B[G];else if(o[G]!==B[G])throw new Error("non concat dimensions must match")}let u=i.length,a=Tn("coords",u),s=$t(u),l=or(),c=n.map(z=>z.dims),f=Kt(u),h=new Array(c.length-1);h[0]=c[0][t];for(let z=1;z<h.length;z++)h[z]=h[z-1]+c[z][t];let g=f[t],y=f.slice(-2),b=f.join(),w=`if (${g} < ${h[0]}) {
        return getChannel(
            getX0(${b}), vec2(${y.join()}));
        }`;for(let z=1;z<h.length;z++){let B=h[z-1];w+=`
            if (${g} < ${h[z]}  && ${g} >= ${h[z-1]}) {
              return getChannel(
                getX${z}(${li(f,g,B)}),
                vec2(${li(y,g,B)}));
            }`}let S=h.length,A=h[h.length-1];w+=`
            return getChannel(
              getX${S}(${li(f,g,A)}),
              vec2(${li(y,g,A)}));`;let E=ae(r.session.backend.glContext.version),R=`
          ${l}
          float getValue(${f.map(z=>"int "+z)}) {
            ${w}
          }

          void main() {
            ${s} coords = getOutputCoords();
            int lastDim = coords.${f[u-1]};
            coords.${f[u-1]} = coords.${f[u-2]};
            coords.${f[u-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[u-1]} = ${a[u-1]} + 1;
            if (${a[u-1]} < ${i[u-1]}) {
              result.g = getValue(${a});
            }

            ${a[u-2]} = ${a[u-2]} + 1;
            if (${a[u-2]} < ${i[u-2]}) {
              result.a = getValue(${a});
            }

            ${a[u-1]} = ${a[u-1]} - 1;
            if (${a[u-2]} < ${i[u-2]} &&
                ${a[u-1]} < ${i[u-1]}) {
              result.b = getValue(${a});
            }
            ${E.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:R,hasMain:!0}},dd=(r,e,n)=>{let t=P0(e.length,n.cacheKey);return{...t,get:()=>D0(r,t,e,n.axis)}},li=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,u)=>u===t?`${i} - ${n}`:i).join()}});var pd,k0,R0,B0,hd,M0,L0,N0,md,z0,gd=P(()=>{"use strict";ht();Ce();fd();pd=(r,e,n)=>(z0(e),r.session.pack&&e[0].dims.length>1?[r.run(dd(r,e,n),e)]:[r.run(B0(r,e,n),e)]),k0=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),R0=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let g=1;g<n.length;g++){let y=n[g].dims.slice();for(let b=0;b<o.length;b++)if(b===t)i[t]+=y[b];else if(o[b]!==y[b])throw new Error("non concat dimensions must match")}let u=i.length,a=new Array(n.length),s=0;for(let g=0;g<a.length;++g)s+=n[g].dims[t],a[g]=s;let l="";n.length<5?l=hd(a):l=M0(a);let c=L0(n.length,u),f=N0(a),h=`
        ${c}
        ${f}
        ${l}
        float process(int indices[${u}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:h}},B0=(r,e,n)=>{let t=k0(e.length,n.cacheKey);return{...t,get:()=>R0(r,t,e,n.axis)}},hd=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,M0=r=>hd(r),L0=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},N0=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},md=r=>Te({axis:r.attributes.getInt("axis")}),z0=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function F0(){return Ft("abs")}function G0(){return Ft("acos")}function V0(){return Ft("asin")}function W0(){return Ft("atan")}function U0(){return Ft("ceil")}function H0(){return Ft("cos")}function j0(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function q0(){return Ft("exp")}function K0(){return Ft("floor")}function Ha(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function Y0(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function X0(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function J0(){return Ft("log")}function Z0(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function Q0(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function ev(){return Ft("sin")}function ja(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function qa(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function tv(){return Ft("sqrt")}function rv(){return Ft("tan")}function nv(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function Ft(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var ov,ot,bd,yd,vd,xd,Ka,wd,Td,iv,$d,Sd,Id,_d,Ad,Od,Ya,Ed,Cd,Pd,Dd,kd,Rd,Bd,Md,Ld,Nd,zd,Xa=P(()=>{"use strict";ht();Le();xr();Xe();Ce();ov=(r,e,n,t)=>{let o=r.session.pack?2:0,i=ae(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},ot=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>ov(r,i,e,n)}},bd=(r,e)=>[r.run(ot(r,e[0],F0()),e)],yd=(r,e)=>[r.run(ot(r,e[0],G0()),e)],vd=(r,e)=>[r.run(ot(r,e[0],V0()),e)],xd=(r,e)=>[r.run(ot(r,e[0],W0()),e)],Ka=(r,e,n)=>[r.run(ot(r,e[0],Ha(n.min,n.max),n.cacheKey),e)],wd=r=>Te({min:r.attributes.getFloat("min",Jr),max:r.attributes.getFloat("max",Zr)}),Td=(r,e)=>{let n=iv(r,e);return Ka(r,[e[0]],n)},iv=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:Jr,t=e.length>=3?e[2].numberData[0]:Zr;return Te({min:n,max:t})},$d=(r,e)=>[r.run(ot(r,e[0],U0()),e)],Sd=(r,e)=>[r.run(ot(r,e[0],H0()),e)],Id=(r,e,n)=>[r.run(ot(r,e[0],j0(n.alpha),n.cacheKey),e)],_d=r=>Te({alpha:r.attributes.getFloat("alpha",1)}),Ad=(r,e)=>[r.run(ot(r,e[0],q0()),e)],Od=(r,e)=>[r.run(ot(r,e[0],K0()),e)],Ya=(r,e)=>[r.run(ot(r,e[0],Y0()),e)],Ed=(r,e,n)=>[r.run(ot(r,e[0],X0(n.alpha),n.cacheKey),e)],Cd=r=>Te({alpha:r.attributes.getFloat("alpha",.01)}),Pd=(r,e)=>[r.run(ot(r,e[0],J0()),e)],Dd=(r,e)=>[r.run(ot(r,e[0],Z0()),e)],kd=(r,e)=>[r.run(ot(r,e[0],Q0()),e)],Rd=(r,e)=>[r.run(ot(r,e[0],ja()),e)],Bd=(r,e)=>[r.run(ot(r,e[0],qa()),e)],Md=(r,e)=>[r.run(ot(r,e[0],ev()),e)],Ld=(r,e)=>[r.run(ot(r,e[0],tv()),e)],Nd=(r,e)=>[r.run(ot(r,e[0],rv()),e)],zd=(r,e)=>[r.run(ot(r,e[0],nv()),e)]});function ir(r){let e;switch(r.activation){case"Relu":e=ja();break;case"Sigmoid":e=qa();break;case"Clip":e=Ha(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var $n,tn=P(()=>{"use strict";Le();Xa();$n=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[Jr,Zr]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var sv,uv,Fd,Gd=P(()=>{"use strict";Rt();Xe();Ce();ci();tn();sv=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),uv=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",u=e[0].dims.slice(),a=e[1].dims.slice(),s=a[0]/t.group;ze.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=Sn(u,a,t.dilations,t.pads,t.strides),c=ae(r.session.backend.glContext.version),{activationFunction:f,applyActivation:h}=ir(t),g=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${f}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${s};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${u[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${u[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${h}
    ${c.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:g,hasMain:!0}},Fd=(r,e,n)=>{let t=sv(e.length>2,n.cacheKey);return{...t,get:()=>uv(r,e,t,n)}}});var lv,cv,Vd,Wd=P(()=>{"use strict";Xe();Ce();en();lv=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),cv=(r,e,n,t,o,i)=>{let u=n.dims,a=t.dims,s=2,l=3,c=o.length,f=[a[1]*a[2]*a[3],o[2]*o[3]],h=a[2]*a[3],g=or(),y=ae(r.session.backend.glContext.version),b="";for(let S=0;S<=1;S++)for(let A=0;A<=1;A++)b+=`
            blockIndex = rc.x + ${A};
            pos = rc.y + ${S};

            if(blockIndex < ${f[1]} && pos < ${f[0]}) {
              offsetY = int(blockIndex / (${o[c-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${h}) / ${a[2]});

              if(d0 < ${u[s]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[c-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${h}), ${a[2]});

                if(d1 < ${u[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${h}.);
                    innerDims = vec2(d0, d1);
                    result[${S*2+A}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let w=`
      ${g}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${b}
          ${y.output} = result;
      }
            `;return{...e,output:{dims:f,type:n.type,textureType:2},shaderSource:w,hasMain:!0}},Vd=(r,e,n,t,o)=>{let i=lv(o.cacheKey);return{...i,get:()=>cv(r,i,e,n,t,o)}}});function fv(r,e,n){let t=e[0].dims,o=e[1].dims,i=Tt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let u=$t(i.length),a=Kt(),{activationFunction:s,applyActivation:l}=ir(n),c=e.length>2,f=c?"value += getBiasForMatmul();":"",h=c?`${Za(u,a,e[2].dims,i,!1)}`:"",g=i.length,y=t.length,b=o.length,w=t[t.length-1],S=`
    ${s}
    ${h}
    float process(int indices[${g}]) {
        int a[${y}];
        int b[${b}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${w}; ++k) {
            a[${y-1}] = k;
            b[${b-2}] = k;
            value += _A(a) * _B(b);
        }
        ${f}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:S}}function Ja(r,e){let n=dv(r.length>2,e.activationCacheKey);return{...n,get:()=>fv(n,r,e)}}function Za(r,e,n,t,o){let i="",u=n.length,a=t.length,s=a-u;a<2&&u>0?i="coords":i=n.map((b,w)=>`coords.${e[w+s]}`).join(", ");let c=Tt.getBroadcastDims(n,t).map(b=>`coords.${e[b+s]} = 0;`).join(`
`),h=te.size(n)===1,g="vec4(outputValue.xx, outputValue.yy)";return h&&(g="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${c}
  vec4 outputValue = getBias(${i});
  return ${g};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${c}
  return getBias(coords.x);
}`}var Ud,Hd,dv,pv,di=P(()=>{"use strict";Le();Ce();nr();tn();Qa();Ud=(r,e,n)=>(pv(e),r.session.pack?[r.run(fi(r,e,n),e)]:[r.run(Ja(e,n),e)]),Hd=r=>$n(r.attributes),dv=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});pv=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function gv(r,e,n,t){let o=[],i=[],u=n[0].dims,a=n[1].dims,s=u.length,l=a.length,c=t.length,f=c-s,h=c-l;o=u.map((E,R)=>`coords.${e[R+f]}`),o[s-1]="i*2",o.join(", "),i=a.map((E,R)=>`coords.${e[R+h]}`),i[l-2]="i*2",i.join(", ");let g=Tt.getBroadcastDims(u,t),y=Tt.getBroadcastDims(a,t),b=g.map(E=>`coords.${e[E+f]} = 0;`).join(`
`),w=y.map(E=>`coords.${e[E+h]} = 0;`).join(`
`),S=`int lastDim = coords.${e[c-1]};
  coords.${e[c-1]} = coords.${e[c-2]};
  coords.${e[c-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${S}
  ${b}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${S}
  ${w}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function bv(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function yv(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var hv,mv,fi,Qa=P(()=>{"use strict";Le();Xe();Ce();nr();tn();di();hv=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),mv=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",u=n[0].dims,a=n[1].dims,s=Tt.calcShape(u,a,!0),l=!te.areEqual(n[0].dims,n[1].dims);if(!s)throw new Error("Can't use matmul on the given tensors");let c=u[u.length-1],f=Math.ceil(c/2),h=u.length,g=a.length,y=ae(r.session.backend.glContext.version),b=$t(s.length),w=s.length,S=Kt(),{activationFunction:A,applyActivation:E}=ir(t),R=o?`${Za(b,S,n[2].dims,s,!0)}`:"",z=l?`${gv(b,S,n,s)}`:"",B=l?"getAAtOutCoordsMatmul(i)":`getA(${bv(S,h)})`,G=l?"getBAtOutCoordsMatmul(i)":`getB(${yv(S,g)})`,Y=l?"":`${b} rc =
          getOutputCoords(); int lastDim = rc.${S[w-1]}; rc.${S[w-1]} =
          rc.${S[w-2]}; rc.${S[w-2]} = lastDim;
      `,Z=`
            ${z}
            ${R}
            ${A}
            void main() {
              ${Y}

              vec4 value = vec4(0);
              for (int i = 0; i < ${f}; i++) {
                vec4 a = ${B};
                vec4 b = ${G};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${E}
              ${y.output} = value;
            }`;return{...e,output:{dims:s,type:n[0].type,textureType:2},shaderSource:Z,hasMain:!0}},fi=(r,e,n)=>{let t=hv(e.length>2,n.activationCacheKey);return{...t,get:()=>mv(r,t,e,n)}}});var jd,qd=P(()=>{"use strict";ci();Wd();Qa();jd=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Sn(t,o,n.dilations,n.pads,n.strides),u=r.run(Vd(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),s=e.length===3?[a,u,e[2]]:[a,u],l=r.run(fi(r,s,n),s);return r.reshapePacked(l,i)}});var vv,xv,Kd,es,ts=P(()=>{"use strict";Ce();vv=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),xv=(r,e,n,t,o,i)=>{let u=n.dims,a=t.dims,s=o.length,l=es(u,a,o,4),c=`
        const int XC = ${u[1]};
        const int XH = ${u[2]};
        const int XW = ${u[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${s}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${u.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:c}},Kd=(r,e,n,t,o)=>{let i=vv(o.cacheKey);return{...i,get:()=>xv(r,i,e,n,t,o)}},es=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var wv,Tv,Yd,Xd=P(()=>{"use strict";Le();Xe();Ce();tn();ts();wv=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),Tv=(r,e,n,t,o)=>{let i=n[0].dims,u=n[1].dims,a=[u[0],Math.ceil(i[1]*u[2]*u[3]/4)],s=es(i,u,t),[l,c]=r.calculateTextureWidthAndHeight(a,4),f=te.computeStrides(s),[h,g]=r.calculateTextureWidthAndHeight(s,4),y=t.length,b=n.length<3?"0.0":"_B(b)",w=Math.ceil(i[1]*u[2]*u[3]/4),{activationFunction:S,applyActivation:A}=ir(o),E=ae(r.session.backend.glContext.version),R=`
${S}
float process(int indices[${y}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${f[0]} + im2col[1] * ${f[1]} + im2col[2] * ${f[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${b};
  for (int i = 0; i < ${w}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${h}, ${g});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${c});
    value += dot(${E.texture2D}(Im2Col, im2colCoords), ${E.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${A}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:R}},Yd=(r,e,n,t)=>{let o=wv(e.length>2,t);return{...o,get:()=>Tv(r,o,e,n,t)}}});var Sn,rs,$v,Sv,Iv,_v,ns,Av,ci=P(()=>{"use strict";ht();Le();Gd();qd();Xd();tn();ts();di();Sn=(r,e,n,t,o)=>{let i=r[0],u=r.slice(2),a=u.length,s=e[0],c=e.slice(2).map((y,b)=>y+(y-1)*(n[b]-1)),h=u.map((y,b)=>y+t[b]+t[b+a]).map((y,b)=>Math.floor((y-c[b]+o[b])/o[b]));return[i,s].concat(...h)},rs=(r,e,n)=>(Av(e,n),$v(r,e,n)),$v=(r,e,n)=>{let t=_v(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(Fd(r,e,t),e)]:i&&o?[Sv(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[jd(r,e,t)]:[Iv(r,e,t)]},Sv=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Sn(t,o,n.dilations,n.pads,n.strides),u=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),s=e.length>2?[a,u,e[2]]:[a,u],l=r.run(Ja(s,n),s);return r.reshapeUnpacked(l,i)},Iv=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Sn(t,o,n.dilations,n.pads,n.strides),u=r.run(Kd(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[u,e[1],e[2]]:[u,e[1]];return r.run(Yd(r,e,i,n),a)},_v=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();Xr.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},ns=r=>{let e=r.attributes,n=$n(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),u=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),s=e.getInts("strides",[1,1]);return Te({autoPad:t,dilations:o,group:i,kernelShape:u,pads:a,strides:s,...n})},Av=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var Ov,Ev,Cv,Jd,Pv,Dv,kv,Rv,Bv,Mv,Zd,Lv,Qd=P(()=>{"use strict";ht();Xe();Ce();tn();Ov=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,Ev=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},Cv=(r,e,n,t,o,i,u,a)=>{let s=r.length-2,l=a.length===0;for(let c=0;c<s;++c){let f=l?r[c+2]*i[c]:a[c],h=Ov(r[c+2],i[c],o[c],e[c],n[c],f);Ev(h,t,o,c,c+s),l&&a.push(i[c]*(r[c+2]-1)+u[c]+(e[c]-1)*n[c]+1-o[c]-o[c+s])}},Jd=(r,e,n)=>(Lv(e,n),Pv(r,e,n)),Pv=(r,e,n)=>{let t=Mv(n,e);return[Bv(r,e,t)]},Dv=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),kv=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",u=e[0].dims,a=e[1].dims,s=a[1],l=a[0]/t.group,c=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],f=ae(r.session.backend.glContext.version),{activationFunction:h,applyActivation:g}=ir(t),y=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${h}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${s};
    int wOutChannel = output_channel - group_id * ${s};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${u[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${u[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${g}
    ${f.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:c,type:e[0].type,textureType:0},shaderSource:y,hasMain:!0}},Rv=(r,e,n)=>{let t=Dv(e.length>2,n.cacheKey);return{...t,get:()=>kv(r,e,t,n)}},Bv=(r,e,n)=>r.run(Rv(r,e,n),e),Mv=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;Cv(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let u=Object.assign({},r);return Object.assign(u,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),u},Zd=r=>{let e=r.attributes,n=$n(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),u=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),s=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),c=e.getInts("strides",[1,1]);return Te({autoPad:t,dilations:o,group:i,kernelShape:u,outputPadding:a,outputShape:s,pads:l,strides:c,...n})},Lv=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var ef,rn,tf,Nv,rf,zv,Fv,Gv,pi=P(()=>{"use strict";ht();Le();Ce();ef={name:"Transpose",inputNames:["A"],inputTypes:[0]},rn=(r,e,n)=>(Gv(e),[r.run({...ef,cacheHint:n.cacheKey,get:()=>Nv(r,e[0],n.perm)},e)]),tf=r=>Te({perm:r.attributes.getInts("perm",[])}),Nv=(r,e,n)=>{let t=e.dims;n=rf(t,n);let o=zv(t,n),i=t.length,u=`
      ${Fv("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...ef,output:{dims:o,type:e.type,textureType:0},shaderSource:u}},rf=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),zv=(r,e)=>(e=rf(r,e),te.sortBasedOnPerm(r,e)),Fv=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},Gv=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var nf,of,Vv,af=P(()=>{"use strict";pi();nf=(r,e,n)=>{Vv(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],u=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],u),s={perm:i,cacheKey:`${i}`},[l]=rn(r,[a],s),c=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,c)]},of=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},Vv=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var sf,uf,Wv,lf=P(()=>{"use strict";Le();sf=(r,e,n)=>{Wv(e,n);let t=te.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},uf=r=>r.attributes.getInt("axis",1),Wv=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var Dr,no=P(()=>{"use strict";Dr=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var cf,df,Uv,Hv,jv,qv,ff=P(()=>{"use strict";ht();no();Le();Ce();cf=(r,e,n)=>(qv(e,n.axis),[r.run(jv(r,e,n),e)]),df=r=>Te({axis:r.attributes.getInt("axis",0)}),Uv={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},Hv=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),u=new Array(o.length+i.length-1);t=te.normalizeAxis(t,o.length);let a=[];for(let h=0;h<u.length;h++)h<t?(u[h]=o[h],a.push(`inputIdx[${h}] = outputIdx[${h}];`)):h<t+i.length?(u[h]=i[h-t],a.push(`indexDataIdx[${h-t}] = outputIdx[${h}];`)):(u[h]=o[h-i.length+1],a.push(`inputIdx[${h-i.length+1}] = outputIdx[${h}];`));let s=u.length||1,l=o.length,c=i.length||1,f=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${l}];
        int indexDataIdx[${c}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:u,type:n[0].type,textureType:0},shaderSource:f}},jv=(r,e,n)=>{let t={...Uv,cacheHint:n.cacheKey};return{...t,get:()=>Hv(r,t,e,n.axis)}},qv=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(Dr.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var os,pf,hf,mf,Kv,Yv,Xv,gf=P(()=>{"use strict";ht();Le();Ce();os=(r,e,n)=>(Xv(e,n),[r.run(Kv(e,n),e)]),pf=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return Te({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},hf=r=>pf(r,!1),mf=r=>pf(r,!0),Kv=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>Yv(n,r,e)}},Yv=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,u]=ri.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,u];if(!a)throw new Error("Can't use gemm on the given tensors");let s=t[t.length-1],l="";n.transA&&(s=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let c=a.length,f=e.length===3?`int c[${e[2].dims.length}];`:"",h=e.length===3?"bcastIndices_C(indices, c);":"",g=e.length===3?"value += beta * _C(c);":"",y=`
      float process(int indices[${c}]) {
          int a[${c}];
          int b[${c}];
          ${f}

          copyVec(indices, a);
          copyVec(indices, b);
          ${h}

          float value = 0.0;
          for (int k=0; k<${s}; ++k) {
              a[${c-1}] = k;
              b[${c-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${g}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:y}},Xv=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var bf,yf,Jv,Zv,Qv,ex,tx,vf=P(()=>{"use strict";ht();Ce();bf=(r,e,n)=>(tx(e),[r.run(Qv(r,e,n),e)]),yf=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return Te({scale:e,bias:n})},Jv={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},Zv=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${ex(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},Qv=(r,e,n)=>{let t={...Jv,cacheHint:n.cacheKey};return{...t,get:()=>Zv(r,t,e,n)}},ex=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},tx=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var wf,Tf,xf,rx,nx,ox,ix,ax,sx,$f=P(()=>{"use strict";Xe();Ce();wf=(r,e,n)=>{sx(e);let t=r.run(nx(e[0]),e);return[r.run(ax(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},Tf=r=>r.attributes.getFloat("epsilon",1e-5),xf={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},rx=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],u=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:u}},nx=r=>({...xf,get:()=>rx(xf,r)}),ox={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},ix=(r,e,n,t,o)=>{let i=ae(r.session.backend.glContext.version),[u,a]=r.calculateTextureWidthAndHeight(o,4),[s,l]=[u/4,a],c=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${s}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:c}},ax=(r,e,n,t)=>{let o={...ox,cacheHint:`${n}`};return{...o,get:()=>ix(r,o,e,n,t)}},sx=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function ux(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),u=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,s=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${u} * square_sum, ${s});
    }`;return{..._f,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function lx(r,e){return{..._f,cacheHint:e.cacheKey,get:()=>ux(r,e)}}var Sf,If,_f,cx,Af=P(()=>{"use strict";ht();Ce();Sf=(r,e,n)=>(cx(e),[r.run(lx(e,n),e)]),If=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return Te({alpha:e,beta:n,bias:t,size:o})},_f={name:"LRN",inputNames:["X"],inputTypes:[0]};cx=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var dx,is,Of,Ef,Cf,fx,px,hx,mx,gx,bx,yx,vx,Pf=P(()=>{"use strict";ht();Le();Xe();Ce();dx={name:"Pad",inputNames:["A"],inputTypes:[0]},is=(r,e,n)=>(hx(e),[r.run({...dx,cacheHint:n.cacheKey,get:()=>px(r,e[0],n)},e)]),Of=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return Te({mode:e,value:n,pads:t})},Ef=(r,e,n)=>{mx(e);let t=fx(r,e,n);return is(r,[e[0]],t)},Cf=r=>r.attributes.getString("mode","constant"),fx=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return Te({mode:n,pads:t,value:o})},px=(r,e,n)=>{let t=te.padShape(e.dims.slice(),n.pads),o=t.length,u=`
      ${gx(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:u}},hx=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},mx=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},gx=(r,e,n)=>{let t=ae(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),u=te.computeStrides(e.dims);switch(n.mode){case"constant":return bx(t,e.dims,u,o,i,n.pads,n.value);case"reflect":return yx(t,e.dims,u,o,i,n.pads);case"edge":return vx(t,e.dims,u,o,i,n.pads);default:throw new Error("Invalid mode")}},bx=(r,e,n,t,o,i,u)=>{let a=e.length,s="";for(let l=a-1;l>=0;--l)s+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${u});
        int offset = 0;
        int k = 0;
        ${s}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},yx=(r,e,n,t,o,i)=>{let u=e.length,a="";for(let s=u-1;s>=0;--s)a+=`
        k = m[${s}] - ${i[s]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[s]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[s]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[s]};
        `;return`
      float padA(int m[${u}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},vx=(r,e,n,t,o,i)=>{let u=e.length,a="";for(let s=u-1;s>=0;--s)a+=`
        k = m[${s}] - ${i[s]};
        if (k < 0)  k = 0;
        if (k >= ${e[s]}) k = ${e[s]-1};
        offset += k * ${n[s]};
      `;return`
      float padA(int m[${u}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var kf,Rf,Bf,Mf,Lf,Nf,zf,Ff,Gf,xx,Df,Vf,mi,Wf,hi,wx,Uf=P(()=>{"use strict";ht();Le();Ce();kf=(r,e,n)=>{mi(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Bf(e,t,!1,n)},e)]},Rf=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),u=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return Te({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:u})},Bf=(r,e,n,t)=>{let[o,i]=Gf(r,t,n),u=te.size(o.kernelShape),a="value += _X(x);",s="";o.countIncludePad?s+=`value /= float(${u});`:s+=`value /= float(${u} - pad);`;let c=`
        ${Wf(r[0].dims,o,a,s,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:c}},Mf=(r,e,n)=>{mi(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>Bf(e,t,!0,n)},e)]},Lf=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return Te({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},Nf=(r,e,n)=>{mi(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Ff(e,t,!1,n)},e)]},zf=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),u=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(u!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return Te({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:u,dilations:a})},Ff=(r,e,n,t)=>{let[o,i]=Gf(r,t,n),u=`
      value = max(_X(x), value);
    `,a="",l=`
      ${Wf(r[0].dims,o,u,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},Gf=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),u=e.strides.slice(),a=o?e.dilations.slice():[],s=e.pads.slice();Xr.adjustPoolAttributes(n,t,i,u,a,s);let l=Xr.computePoolOutputShape(n,t,u,a,i,s,e.autoPad),c=Object.assign({},e);return o?Object.assign(c,{kernelShape:i,strides:u,pads:s,dilations:a,cacheKey:e.cacheKey}):Object.assign(c,{kernelShape:i,strides:u,pads:s,cacheKey:e.cacheKey}),[c,l]},xx={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Df={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},Vf=(r,e)=>(mi(e),[r.run({...Df,get:()=>Ff(e,Df,!0,xx)},e)]),mi=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Wf=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let u=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],s=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],c=r[i-1],f="",h="",g="";if(s+l!==0?f=`
          for (int i = 0; i < ${u}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${s} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${c}) {
              pad++;
              continue;
            }
            ${n}
          }`:f=`
          for (int i = 0; i < ${u}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${s} + i;
            ${n}
          }`,e.kernelShape.length===2){let b=e.kernelShape[e.kernelShape.length-2],w=e.strides[e.strides.length-2],S=e.pads[e.pads.length/2-2],A=e.pads[e.pads.length-2],E=r[i-2];S+A!==0?h=`
            for (int j = 0; j < ${b}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${w} - ${S} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${E}) {
                pad+= ${u};
                continue;
              }
          `:h=`
            for (int j = 0; j < ${b}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${w} - ${S} + j;
            `,g=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${h}
          ${f}
          ${g}
          ${t}
          return value;
        }
      `}else{let u=te.size(e.kernelShape),a=te.computeStrides(e.kernelShape),s=a.length,l=e.pads.length,c=wx(s),f=hi(r,"inputDims"),h=hi(e.pads,"pads"),g=hi(a,"kernelStrides"),y=hi(e.strides,"strides"),b=e.pads.reduce((A,E)=>A+E),w="";return b?w=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:w=`
          }
          ${n}
        `,`
        ${c}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${s}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${s}];
          int strides[${s}];
          ${h}
          ${f}
          ${y}
          ${g}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${u}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${s}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${s}]
                + offset[j - ${i} + ${s}] - pads[j - 2];
              ${w}
          }
          ${t}

          return value;
        }
      `}},hi=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},wx=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var nn,kr,Tx,$x,Hf,jf,qf,Kf,Yf,Xf,Jf,Zf=P(()=>{"use strict";ht();no();Le();Ce();nn=(r,e,n,t,o)=>{$x(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>Tx(r,e,n,t,o,i)},e)]},kr=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return Te({axes:e,keepDims:n})},Tx=(r,e,n,t,o,i)=>{let u=[],a=e[0].dims.length||1,s=[],l=te.normalizeAxes(n.axes,e[0].dims.length),c=o(e,l),f=c[1];for(let y=0;y<e[0].dims.length;y++)l.indexOf(y)>=0||l.length===0?(n.keepDims&&u.push(1),f=`
          for(int j${y} = 0; j${y} < ${e[0].dims[y]}; j${y}++) {
            inputIdx[${y}] = j${y};
            ${f}
          }`):(s.push(`inputIdx[${y}] = outputIdx[${u.length}];`),u.push(e[0].dims[y]));let g=`
      float process(int outputIdx[${u.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${s.join(`
`)}
        ${c[0]}       // init ops for reduce max/min
        ${f}
        ${c[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:u,type:e[0].type,textureType:0},shaderSource:g}},$x=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(Dr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},Hf=(r,e,n)=>nn(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),jf=(r,e,n)=>nn(r,e,n,"ReduceMean",(o,i)=>{let u=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(u*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${u}.;`]}),qf=(r,e,n)=>nn(r,e,n,"ReduceMax",(o,i)=>{let u=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIdx[${a}] = 0;`);return[`${u.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),Kf=(r,e,n)=>nn(r,e,n,"ReduceMin",(o,i)=>{let u=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIdx[${a}] = 0;`);return[`${u.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),Yf=(r,e,n)=>nn(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),Xf=(r,e,n)=>nn(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),Jf=(r,e,n)=>nn(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var Qf,ep=P(()=>{"use strict";Le();Qf=(r,e)=>{let n=te.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var tp,as,rp,np,oo,Sx,ss,gi,us=P(()=>{"use strict";ht();Xe();Ce();tp={name:"Upsample",inputNames:["X"],inputTypes:[0]},as=(r,e,n)=>(ss(e,n),[r.run({...tp,cacheHint:n.cacheKey,get:()=>Sx(r,e,n)},e)]),rp=r=>oo(r,7),np=r=>oo(r,9),oo=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),gi(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),u=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(u)===-1)throw new Error(`coordinate_transform_mode '${u}' is not supported`);let a=u==="tf_crop_and_resize",s=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let c=r.attributes.getFloat("cubic_coeff_a",-.75),f=r.attributes.getInt("exclude_outside",0)!==0;if(f&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let h=e<11?!0:t==="nearest"&&u==="asymmetric"&&l==="floor",g=0,y=0,b=0;return e>10?r.inputs.length>2?(g=1,y=2,b=3):(y=1,b=2):e===9&&(y=1),Te({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:u,useExtrapolation:s,needRoiInput:a,nearestMode:l,cubicCoefficientA:c,excludeOutside:f,useNearest2xOptimization:h,roiInputIdx:g,scalesInputIdx:y,sizesInputIdx:b})},Sx=(r,e,n)=>{let t=ae(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),u=e[0].dims.map((b,w)=>Math.floor(b*n.scales[w])),[a,s]=r.calculateTextureWidthAndHeight(u,0),l=u.length,c=new Array(l),f=new Array(l),h=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let b=l-1;b>=0;b--)c[b]=b===l-1?1:c[b+1]*u[b+1],f[b]=b===l-1?1:f[b+1]*e[0].dims[b+1],h+=`
        output_pitches[${b}] = ${c[b]};
        input_pitches[${b}] = ${f[b]};
        `;let g=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,y=n.mode==="nearest"?`
    ${g}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${h}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${g}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${g}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...tp,output:{dims:u,type:e[0].type,textureType:0},shaderSource:y,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(b=>Math.ceil(b))}]}},ss=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},gi=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var ls,cs,op,ip,Ix,_x,Ax,Ox,ap=P(()=>{"use strict";Xe();Ce();nr();en();us();ls={name:"Resize",inputNames:["A"],inputTypes:[2]},cs=(r,e,n)=>(ss(e,n),[r.run({...ls,cacheHint:n.cacheKey,get:()=>Ix(r,e,n)},e)]),op=r=>oo(r,10),ip=r=>oo(r,11),Ix=(r,e,n)=>{let t=ae(r.session.backend.glContext.version),[o,i]=_x(e,n);if(o.every(E=>E===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...ls,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let s=i[a-2],l=i[a-1],c=e[0].dims;if(a!==c.length)throw new Error(`output dimension should match input ${c.length}, but got ${a}`);let f=c[a-2],h=c[a-1],g=o[a-2],y=o[a-1],b="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${s}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${s}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${s}.0 - 1.0, ${l}.0 - 1.0,
                            ${s}.0 - 1.0);
                        vec4 original = vec4(${h}.0 - 1.0, ${f}.0 - 1.0, ${h}.0 - 1.0,
                            ${f}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let w=$t(a),S=or(),A=`
            const vec2 inputWH = vec2(${f}.0, ${h}.0);
            const vec4 scaleWHWH = vec4(float(${g}), float(${y}), float(${g}), float(${y}));
            ${S}
            ${b}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${w} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${s-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...ls,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:A}},_x=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=Ax(a,e.mode,e.isResize)}else{let s=r[e.sizesInputIdx];if(!s||s.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(s.integerData),o=Ox(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let u=i||t.map((a,s)=>Math.floor(a*o[s]));return[o,u]},Ax=(r,e,n)=>{let t=Array.from(r.floatData);return gi(t,e,n),t},Ox=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let u=0,a=o;u<a;u++)if(e[u]===0){if(r[u]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[u]=1}else i[u]=r[u]/e[u];return gi(i,n,t),i}});var sp,Ex,up=P(()=>{"use strict";Qr();sp=(r,e)=>(Ex(e),[new ut([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),Ex=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var ds,lp,cp,dp,Cx,fp,Px,Dx,pp=P(()=>{"use strict";ht();no();Le();Ce();ds={name:"Slice",inputNames:["A"],inputTypes:[0]},lp=(r,e,n)=>(Cx(e),[r.run({...ds,cacheHint:n.cacheKey,get:()=>dp(r,e[0],n)},e)]),cp=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return Te({starts:e,ends:n,axes:t})},dp=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((f,h)=>h):n.axes,o=te.normalizeAxes(t,e.dims.length),i=n.starts.map((f,h)=>f>e.dims[o[h]]-1?e.dims[o[h]]:te.normalizeAxis(f,e.dims[o[h]])),u=n.ends.map((f,h)=>f>e.dims[o[h]]-1?e.dims[o[h]]:te.normalizeAxis(f,e.dims[o[h]])),a=e.dims.slice(),s=[];for(let f=0;f<o.length;f++)a[o[f]]=u[f]-i[f],i[f]>0&&s.push(`outputIdx[${o[f]}] += ${i[f]};`);let c=`
      float process(int outputIdx[${a.length}]) {
        ${s.join(`
      `)}
        return _A(outputIdx);
      }`;return{...ds,output:{dims:a,type:e.type,textureType:0},shaderSource:c}},Cx=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(Dr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},fp=(r,e)=>{Dx(e);let n=Px(r,e);return[r.run({...ds,cacheHint:n.cacheKey,get:()=>dp(r,e[0],n)},[e[0]])]},Px=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(u=>u!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},Dx=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var hp,mp,gp,bp,yp,vp,xp,wp,kx,Rx,Bx,Tp,$p=P(()=>{"use strict";ht();Le();Xe();Ce();pi();hp={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},mp={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},gp={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},bp=(r,e,n)=>{Tp(e);let t=e[0].dims.slice(),o=te.normalizeAxis(n.axis,t.length),i=te.sizeToDimension(t,o),u=te.sizeFromDimension(t,o);return wp(r,e,n,i,u)},yp=r=>Te({axis:r.attributes.getInt("axis",1)}),vp=r=>Te({axis:r.attributes.getInt("axis",-1)}),xp=(r,e,n)=>{Tp(e);let t=e[0].dims.slice(),o=te.normalizeAxis(n.axis,t.length),i=t.length,u=o!==i-1,a=[],s=[],l=[],c;u&&(s=Array.from({length:i}).map((y,b)=>b),s[o]=i-1,s[i-1]=o,s.map(y=>a.push(t[y])),c=Te({perm:s}),l=rn(r,e,c));let f=u?te.sizeToDimension(a,i-1):te.sizeToDimension(t,i-1),h=u?te.sizeFromDimension(a,i-1):te.sizeFromDimension(t,i-1),g=wp(r,u?l:e,n,f,h);return u?rn(r,g,c):g},wp=(r,e,n,t,o)=>{let i=kx(r,e[0],t,o,[t]),u=r.run({...hp,cacheHint:n.cacheKey,get:()=>i},e),a=Rx(r,e[0],t,o,i.output.dims,[t]),s=r.run({...mp,cacheHint:n.cacheKey,get:()=>a},[e[0],u]),l=Bx(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...gp,cacheHint:n.cacheKey,get:()=>l},[e[0],u,s])]},kx=(r,e,n,t,o)=>{let[i,u]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let s=ae(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${s.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${u} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${s.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${u})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...hp,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},Rx=(r,e,n,t,o,i)=>{let[u,a]=r.calculateTextureWidthAndHeight(e.dims,0),s=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=ae(r.session.backend.glContext.version),c=`
      float process(int[${s}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${u}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...mp,output:{dims:i,type:e.type,textureType:0},shaderSource:c}},Bx=(r,e,n,t,o,i)=>{let[u,a]=r.calculateTextureWidthAndHeight(e.dims,0),s=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${s}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${u}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...gp,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},Tp=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var Sp,Ip,_p,Mx,Lx,Nx,Ap=P(()=>{"use strict";ht();Le();Ce();Sp={name:"Split",inputNames:["A"],inputTypes:[0]},Ip=(r,e,n)=>{Nx(e);let t=te.normalizeAxis(n.axis,e[0].dims.length),o=Mx(r,e,t,n),i=[];for(let u=0;u<o;++u)i.push(r.run({...Sp,cacheHint:`${n.cacheKey};${u}`,get:()=>Lx(r,e[0],n,t,u)},e));return i},_p=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return Te({axis:e,split:n,numOutputs:t})},Mx=(r,e,n,t)=>{let[,o]=Jn.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},Lx=(r,e,n,t,o)=>{let[i,u]=Jn.splitShape(e.dims,t,n.split,n.numOutputs),a=u[o],s=i[o],c=`
      float process(int indices[${s.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...Sp,cacheHint:`${n.cacheKey}:${o}`,output:{dims:s,type:e.type,textureType:0},shaderSource:c}},Nx=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var fs,Op,Ep,zx,Fx,Cp=P(()=>{"use strict";Le();fs=(r,e,n)=>{zx(e);let t=te.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Op=(r,e)=>(Fx(e),fs(r,[e[0]],Array.from(e[1].integerData))),Ep=r=>r.attributes.getInts("axes"),zx=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},Fx=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Pp,Gx,Vx,Dp=P(()=>{"use strict";Xe();Ce();Pp=(r,e)=>{Vx(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>Gx(r,e,n)},e)]},Gx=(r,e,n)=>{let t=ae(r.session.backend.glContext.version),o=e[0].dims.slice(),u=`
      void main() {
        vec4 result = ${e.map((a,s)=>`${t.texture2D}(X${s},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:u}},Vx=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var kp,Wx,Ux,Rp=P(()=>{"use strict";no();Ce();kp=(r,e)=>{Ux(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>Wx(r,e,n)},e)]},Wx=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let s=0;s<t.length;s++)o[s]=t[s]*e[1].numberData[s],i.push(`inputIdx[${s}] = int(mod(float(outputIdx[${s}]), ${t[s]}.));`);let u=o.length,a=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${u}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},Ux=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(Dr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var ps,Bp,Mp,Hx,jx,Lp=P(()=>{"use strict";Le();ps=(r,e,n)=>{Hx(e);let t=te.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Bp=(r,e)=>(jx(e),ps(r,[e[0]],Array.from(e[1].integerData))),Mp=r=>r.attributes.getInts("axes"),Hx=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},jx=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Np,zp=P(()=>{"use strict";Kc();sd();cd();gd();ci();Qd();af();lf();ff();gf();vf();$f();Af();di();Pf();Uf();Zf();ep();ap();up();pp();$p();Ap();Cp();Dp();Rp();pi();Xa();Lp();us();Np=[["Abs","","6+",bd],["Acos","","7+",yd],["Add","","7+",Yc],["And","","7+",Xc],["Asin","","7+",vd],["Atan","","7+",xd],["AveragePool","","7+",kf,Rf],["BatchNormalization","","7+",jc,qc],["Cast","","6+",ud,ld],["Ceil","","6+",$d],["Clip","","6-10",Ka,wd],["Clip","","11+",Td],["Concat","","4+",pd,md],["Conv","","1+",rs,ns],["ConvTranspose","","1+",Jd,Zd],["Cos","","7+",Sd],["Div","","7+",Jc],["Dropout","","7+",Ya],["DepthToSpace","","1+",nf,of],["Equal","","7+",Zc],["Elu","","6+",Id,_d],["Exp","","6+",Ad],["Flatten","","1+",sf,uf],["Floor","","6+",Od],["FusedConv","com.microsoft","1+",rs,ns],["Gather","","1+",cf,df],["Gemm","","7-10",os,hf],["Gemm","","11+",os,mf],["GlobalAveragePool","","1+",Mf,Lf],["GlobalMaxPool","","1+",Vf],["Greater","","7+",Qc],["Identity","","1+",Ya],["ImageScaler","","1+",bf,yf],["InstanceNormalization","","6+",wf,Tf],["LeakyRelu","","6+",Ed,Cd],["Less","","7+",ed],["LRN","","1+",Sf,If],["Log","","6+",Pd],["MatMul","","1+",Ud,Hd],["MaxPool","","1+",Nf,zf],["Mul","","7+",td],["Neg","","6+",Dd],["Not","","1+",kd],["Or","","7+",rd],["Pad","","2-10",is,Of],["Pad","","11+",Ef,Cf],["Pow","","7+",nd],["PRelu","","7+",od],["ReduceLogSum","","1+",Xf,kr],["ReduceMax","","1+",qf,kr],["ReduceMean","","1+",jf,kr],["ReduceMin","","1+",Kf,kr],["ReduceProd","","1+",Yf,kr],["ReduceSum","","1-12",Hf,kr],["ReduceSumSquare","","1+",Jf,kr],["Relu","","6+",Rd],["Reshape","","5+",Qf],["Resize","","10",cs,op],["Resize","","11+",cs,ip],["Shape","","1+",sp],["Sigmoid","","6+",Bd],["Sin","","7+",Md],["Slice","","10+",fp],["Slice","","1-9",lp,cp],["Softmax","","1-12",bp,yp],["Softmax","","13+",xp,vp],["Split","","2-12",Ip,_p],["Sqrt","","6+",Ld],["Squeeze","","1-12",fs,Ep],["Squeeze","","13+",Op],["Sub","","7+",id],["Sum","","6+",Pp],["Tan","","7+",Nd],["Tanh","","6+",zd],["Tile","","6+",kp],["Transpose","","1+",rn,tf],["Upsample","","7-8",as,rp],["Upsample","","9",as,np],["Unsqueeze","","1-12",ps,Mp],["Unsqueeze","","13+",Bp],["Xor","","7+",ad]]});function Gp(r){let e={},n;for(;(n=Fp.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=qx.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let u=n[1],a=n[2],s=n[3].split(","),l=u?`${u} ${a};`:"",c=e[t].body,f="";e[t].params.forEach((g,y)=>{g&&(f+=`${g.type} ${g.name} = ${s[y]};
`)}),c=`${f}
 ${c}`,c=c.replace("return",`${a} = `);let h=`
      ${l}
      {
        ${c}
      }
      `;r=r.replace(n[0],h)}}return r=r.replace(Fp,""),r}var Fp,qx,Vp=P(()=>{"use strict";Fp=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,qx="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function In(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:Kx(e,r).sort(),u=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[u]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[u]==null||i[u]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[u]<=a&&u++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function Kx(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),vn(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),vn(r.every(Yx),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function Yx(r){return r%1===0}function Xx(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function Wp(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var bi,hs=P(()=>{"use strict";Rt();Le();bi=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,c)=>l*c),s=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,c)=>l*c);if(a>o||s>o)ze.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,s]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,s)=>s>=i.length-2?i[s]%2===0?i[s]:i[s]+1:i[s]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=In(i).newShape);let u=Xx(i);return i.length<=1&&u<=o?[1,u]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?Wp(u/4).map(a=>a*2):Wp(u)}}});var yi,Up=P(()=>{"use strict";Le();xr();Xe();hs();nr();yi=class extends Nt{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new J(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new J(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},u="getOutputCoords";switch(t.length){case 0:i[u]=this.getOutputScalarCoords();break;case 1:i[u]=this.getOutputPacked1DCoords(t,o);break;case 2:i[u]=this.getOutputPacked2DCoords(t,o);break;case 3:i[u]=this.getOutputPacked3DCoords(t,o);break;default:i[u]=this.getOutputPackedNDCoords(t,o)}let s=`
      void setOutput(vec4 val) {
        ${ae(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new J(s),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},u="getOutputCoords";switch(t.length){case 0:i[u]=this.getOutputScalarCoords();break;case 1:i[u]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[u]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[u]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[u]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[u]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[u]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let s=`
        void setOutput(float val) {
          ${ae(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new J(s),i}getOutputScalarCoords(){return new J(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new J(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new J(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new J(i))}getOutputPacked2DCoords(n,t){let o="";if(Yr.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new J(o);let i=t,u=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${u}) * 2;
          int c = 2 * (index / ${u});

          return ivec2(r, c);
        }
      `,new J(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),u=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${u};
          index -= b * ${u};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new J(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),u=i*Math.ceil(n[n.length-2]/2),a=u,s="",l="b, r, c";for(let f=2;f<n.length-1;f++)a*=n[n.length-f-1],s=`
      int b${f} = index / ${a};
      index -= b${f} * ${a};
    `+s,l=`b${f}, `+l;let c=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${s}

        int b = index / ${u};
        index -= b * ${u};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new J(c)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new J(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new J(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d"],s=u.map((l,c)=>{let f=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${f}; ${h};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec3(r, c, d);
        }
      `,new J(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d","d2"],s=u.map((l,c)=>{let f=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${f}; ${h};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec4(r, c, d, d2);
        }
      `,new J(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d","d2","d3"],s=u.map((l,c)=>{let f=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${f}; ${h};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec5(r, c, d, d2, d3);
        }
      `,new J(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],s=u.map((l,c)=>{let f=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${f}; ${h};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${s}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new J(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new J(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new J(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new J(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new J(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=ae(this.context.glContext.version);return n[t]=new J(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let u=this.context.inputTextureLayouts[i],a=ni(o);u.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,u):n[a]=this.getUnpackedSamplerFromInput(a,o,u);let s=Cc(o);u.unpackedShape.length<=t.unpackedShape.length&&(u.isPacked?n[s]=this.getPackedSamplerAtOutputCoords(s,u,t,o):n[s]=this.getUnpackedSamplerAtOutputCoords(s,u,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let u=t.unpackedShape,a=o.unpackedShape,l=ni(i),c=u.length,f=a.length,h=Tt.getBroadcastDims(u,a),g=$t(f),y=f-c,b,w=Kt();c===0?b="":f<2&&h.length>=1?b="coords = 0;":b=h.map(Z=>`coords.${w[Z+y]} = 0;`).join(`
`);let S="";f<2&&c>0?S="coords":S=u.map((Z,me)=>`coords.${w[me+y]}`).join(", ");let A="return outputValue;",R=te.size(u)===1,B=te.size(a)===1;if(c===1&&!R&&!B)A=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(R&&!B)f===1?A=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:A=`
          return vec4(outputValue.x);
        `;else if(h.length){let Z=c-2,me=c-1;h.indexOf(Z)>-1&&h.indexOf(me)>-1?A="return vec4(outputValue.x);":h.indexOf(Z)>-1?A="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(me)>-1&&(A="return vec4(outputValue.xx, outputValue.zz);")}let G=`
        int lastDim = coords.${w[f-1]};
        coords.${w[f-1]} = coords.${w[f-2]};
        coords.${w[f-2]} = lastDim;
      `,Y=`
      vec4 ${n}() {
        ${g} coords = getOutputCoords();
        ${G}
        ${b}
        vec4 outputValue = ${l}(${S});
        ${A}
      }
    `;return new J(Y,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let u=[o.width,o.height],a=[t.width,t.height],s=t.unpackedShape.length,l=o.unpackedShape.length,c=t.unpackedShape,f=o.unpackedShape,h=ni(i);if(s===l&&Yr.arraysEqual(a,u)){let R=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new J(R,["coordinates.sampleTexture"])}let g=$t(l),y=Tt.getBroadcastDims(c,f),b=l-s,w,S=Kt();s===0?w="":l<2&&y.length>=1?w="coords = 0;":w=y.map(R=>`coords.${S[R+b]} = 0;`).join(`
`);let A="";l<2&&s>0?A="coords":A=t.unpackedShape.map((R,z)=>`coords.${S[z+b]}`).join(", ");let E=`
        float ${n}() {
          ${g} coords = getOutputCoords();
          ${w}
          return ${h}(${A});
        }
      `;return new J(E,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=ae(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new J(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],u=[i[1],i[0]],a=ae(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${u[0]}, ${u[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new J(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,u=[o.width,o.height],a=ae(this.context.glContext.version),s=u[0],l=u[1];if(u!=null&&Yr.arraysEqual(i,u)){let y=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${s}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new J(y)}let c=u,f=Math.ceil(i[1]/2),g=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c[1]}, ${c[0]}, ${f}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new J(g,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,u=[o.width,o.height],a=[u[0],u[1]],s=ae(this.context.glContext.version);if(i[0]===1){let b=i.slice(1),w=[1,2],S=xn(i,b),A=["b","row","col"],E=JSON.parse(JSON.stringify(o));E.unpackedShape=S;let R=this.getPackedSamplerFromInput(n,t,E),B=`${R.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${wn(A,w)});
      } `;return new J(B,R.dependencies)}let l=a[0],c=a[1],f=Math.ceil(i[2]/2),h=f*Math.ceil(i[1]/2),y=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${l}, ${h}, ${f}, b, row, col);
      return ${s.texture2D}(${t}, uv);}`;return new J(y,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,u=i.length,a=[o.width,o.height],s=ae(this.context.glContext.version),l=[a[0],a[1]],c=l[1],f=l[0],h=Math.ceil(i[u-1]/2),g=h*Math.ceil(i[u-2]/2),y="int b, int row, int col",b=`b * ${g} + (row / 2) * ${h} + (col / 2)`;for(let A=2;A<u-1;A++)y=`int b${A}, `+y,g*=i[u-A-1],b=`b${A} * ${g} + `+b;let S=`vec4 ${n}(${y}) {
      int index = ${b};
      int texR = index / ${f};
      int texC = index - texR * ${f};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}, ${c});
      return ${s.texture2D}(${t}, uv);
    }`;return new J(S)}getUnpackedSamplerScalar(n,t,o){let[i,u]=[o.width,o.height];if(i===1&&u===1){let s=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new J(s,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${u});
          vec2 uv = uvFromFlat(${i}, ${u}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new J(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,u=o.height;if(u===1&&i===1){let s=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new J(s,["coordinates.sampleTexture"])}if(u===1){let s=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new J(s,["coordinates.sampleTexture"])}if(i===1){let s=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${u}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new J(s,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${u}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,u=[o.height,o.width];if(u!=null&&Yr.arraysEqual(i,u)){let g=u[1],y=u[0],b=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${g}.0, ${y}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new J(b,["coordinates.sampleTexture"])}let{newShape:a,keptDims:s}=In(i),l=a;if(l.length<i.length){let g=xn(i,l),y=JSON.parse(JSON.stringify(o));y.unpackedShape=g;let b=["col","row"],w=`
          ${this.getUnpackedSamplerFromInput(n,t,y).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${wn(b,s)});
          }
        `;return new J(w,["coordinates.sampleTexture"])}let c=u[1],f=u[0];if(f===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${c}, ${f});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new J(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(c===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${c}, ${f});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${f}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new J(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let h=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${c}, ${f}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(h,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,u=i[1]*i[2],a=i[2],{newShape:s,keptDims:l}=In(i),c=s;if(c.length<i.length){let y=xn(i,c),b=["batch","col","row"],w=JSON.parse(JSON.stringify(o));w.unpackedShape=y;let S=this.getUnpackedSamplerFromInput(n,t,w),A=l.reverse(),E=`
          ${S.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${wn(b,A)});
          }
        `;return new J(E,S.dependencies)}let f=o.width,h=o.height,g=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${u} + col * ${a} + row;
            vec2 uv = uvFromFlat(${f}, ${h}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new J(g,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,u=i[3],a=i[2]*u,s=i[1]*a,l=o.width,c=o.height,f=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${s} + col * ${a} +
              depth2 * ${u} + depth;
          vec2 uv = uvFromFlat(${l}, ${c}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(f,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,u=i[4],a=i[3]*u,s=i[2]*a,l=i[1]*s,{newShape:c,keptDims:f}=In(i);if(c.length<i.length){let b=xn(i,c),w=["row","col","depth","depth2","depth3"],S=JSON.parse(JSON.stringify(o));S.unpackedShape=b;let A=`
          ${this.getUnpackedSamplerFromInput(n,t,S).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${wn(w,f)});
          }
        `;return new J(A,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let h=o.width,g=o.height,y=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${s} + depth * ${a} +
          depth3 * ${u} + depth2;
          vec2 uv = uvFromFlat(${h}, ${g}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(y,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,u=i[5],a=i[4]*u,s=i[3]*a,l=i[2]*s,c=i[1]*l,{newShape:f,keptDims:h}=In(i);if(f.length<i.length){let w=xn(i,f),S=["row","col","depth","depth2","depth3","depth4"],A=JSON.parse(JSON.stringify(o));A.unpackedShape=w;let E=`
            ${this.getUnpackedSamplerFromInput(n,t,A).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${wn(S,h)});
            }
          `;return new J(E,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let g=o.width,y=o.height,b=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${c} + col * ${l} + depth * ${s} +
            depth2 * ${a} + depth3 * ${u} + depth4;
            vec2 uv = uvFromFlat(${g}, ${y}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new J(b,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,u=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let s=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${u});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new J(s,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,s=`_${t}`;n[s]=new J(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${s}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),s=s+"_T",n[s]=new J(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${s}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,u){let a=`_${n}`;u&&(a=a+"_T");let s=ae(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${s.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,u){let a=`_${n}_Pack`;u&&(a=a+"_T");let s=ae(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${s.texture2D}(${n}, coords);
        }
        `}}});var vi,Hp=P(()=>{"use strict";xr();vi=class r extends Nt{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new J(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new J(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new J(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new J(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var xi,jp=P(()=>{"use strict";xr();Xe();xi=class extends Nt{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=ae(this.context.glContext.version);return{setFragColor:new J(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new J(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var wi,qp=P(()=>{"use strict";xr();wi=class r extends Nt{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let u=i.length,a=e-u,s=`bcastIndices_${t}`,l="";for(let f=0;f<u;++f)l+=`
          realIndices[${f}] = int( mod(float(bcastedIndices[${a+f}]), ${i[f]}.0) );
          `;let c=`
        void ${s} (int bcastedIndices[${e}], out int realIndices[${u}]) {
          ${l}
        }
        `;n[s]=new J(c)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let u=i.length,a=e-u,s=`bcastMatmulIndices_${t}`,l="";for(let f=0;f<u-2;++f)l+=`
          realIndices[${f}] = int( mod(float(bcastedIndices[${a+f}]), ${i[f]}.0) );
          `;let c=`
        void ${s}(int bcastedIndices[${e}], out int realIndices[${u}]) {
          ${l}
          realIndices[${u-1}] = bcastedIndices[${e-1}];
          realIndices[${u-2}] = bcastedIndices[${e-2}];
        }
        `;n[s]=new J(c)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,u=o.length,a=`indicesToOffset_${n}`;e[a]=new J(r.indexToOffsetSingle(a,u,i)),a=`indicesToOffset_${n}_T`,e[a]=new J(r.indexToOffsetSingle(a,u,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,u=o.length,a=`offsetToIndices_${n}`;e[a]=new J(r.offsetToIndicesSingle(a,u,i)),a=`offsetToIndices_${n}_T`,e[a]=new J(r.offsetToIndicesSingle(a,u,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,u=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let s=`
        void ${u}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[u]=new J(s)}),e}}});var Ti,Kp=P(()=>{"use strict";xr();Ti=class extends Nt{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let u=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let s=`
        void ${u}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[u]=new J(s)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new J(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new J(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new J(o)}}}});var ms,Yp=P(()=>{"use strict";Up();Hp();jp();qp();Kp();ms={encoding:vi,fragcolor:xi,vec:Ti,shapeUtils:wi,coordinates:yi}});var $i,Xp=P(()=>{"use strict";xr();Vp();Yp();Xe();$i=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new si(e,n,t,o),Object.keys(ms).forEach(u=>{let a=new ms[u](this.context);this.libs[u]=a});let i=this.glslLibRoutineDependencyGraph;for(let u in this.libs){let s=this.libs[u].getFunctions();for(let l in s){let c=u+"."+l,f;i[c]?(f=i[c],f.routineBody=s[l].routineBody):(f=new ro(c,s[l].routineBody),i[c]=f);let h=s[l].dependencies;if(h)for(let g=0;g<h.length;++g)if(i[h[g]])f.addDependency(i[h[g]]);else{let y=new ro(h[g]);i[h[g]]=y,f.addDependency(y)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${Ec(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=Gp(n),`${Oc(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),ui.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var Si,Jp=P(()=>{"use strict";kt();Rt();Xp();Xe();Si=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(u){throw ze.error("ProgramManager",e.programInfo.shaderSource),u}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new $i(this.glContext,e,n,t),i=o.preprocess(),u=this.compile(i);return{programInfo:e,program:u,uniformLocations:this.getUniformLocations(u,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(u)}})}compile(e){if(!this.vertexShader){ze.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=Ac(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}xe.debug&&ze.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;ze.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:u,type:a,location:s,arrayLength:l}of e){let c=n.find(f=>f.name===u)?.data;if(a!=="sampler2D"&&!c)throw new Error(`variable '${u}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],s,i),i++;break;case"float":l?o.uniform1fv(s,c):o.uniform1f(s,c);break;case"int":l?o.uniform1iv(s,c):o.uniform1i(s,c);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var Ii,Zp=P(()=>{"use strict";Rt();eo();Ii=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),u=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,s=n.height,l,c;if(this.config.reuseTextures){l=`${a}x${s}_${u.format}_${u.internalFormat}_${u.textureType}`,c=this.inUseTextures.get(l),c||(c=[],this.inUseTextures.set(l,c));let h=this.idleTextures.get(l);if(h&&h.length>0){let g=h.pop();return c.push(g),o===1&&this.glContext.updateTexture(g,a,s,u,this.toTextureData(e,t)),g}}ze.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let f=this.glContext.allocateTexture(a,s,u,this.toTextureData(e,t));return this.config.reuseTextures&&(c.push(f),this.textureLookup.set(f,l)),f}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((u,a)=>u*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(u=>i?.push(u))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,c)=>l*c)*t;await this.glContext.createAndWaitForFence();let u=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,u),s=this.pendingRead.get(o);return this.pendingRead.delete(o),s?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let u=this.idleTextures.get(t);u||(u=[],this.idleTextures.set(t,u)),u.push(e.texture)}}}(!t||n)&&(ze.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var _i,Qp=P(()=>{"use strict";Rt();pl();Uc();zp();Jp();hs();Zp();_i=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new bi(e.glContext.maxTextureSize),this.programManager=new Si(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new Ii(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new ai(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){ze.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=fl(e,n,Np);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function Jx(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var io,eh=P(()=>{"use strict";kt();eo();eo();nr();io=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,u=i.createTexture();i.bindTexture(i.TEXTURE_2D,u),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),u}updateTexture(e,n,t,o,i){let u=this.gl;u.bindTexture(u.TEXTURE_2D,e);let a=o.encode(i,n*t);u.texSubImage2D(u.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,u){let a=this.gl;u||(u=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let s=this.getEncoder(i,u),l=s.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,s.textureType,l),this.checkError(),s.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(xe.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new oi(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new Qn(this.gl,n):new Qn(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new ii(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,u;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),u=e.createProgram(),!u)?!1:(e.attachShader(u,o),e.attachShader(u,i),e.linkProgram(u),e.useProgram(u),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),u&&e.deleteProgram(u),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await Fa(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=Jx(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await Fa(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function gs(r){let e;if((!r||r==="webgl2")&&"webgl2"in _n?e=_n.webgl2:(!r||r==="webgl")&&"webgl"in _n&&(e=_n.webgl),!e)try{let t=Qx();e=th(t,r)}catch{let o=Zx();e=th(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return _n[r]=e,n.isContextLost()?(delete _n[r],gs(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function th(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new io(t,2)}catch(i){ze.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new io(t,1)}catch(i){ze.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function Zx(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function Qx(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var _n,rh=P(()=>{"use strict";Rt();eh();_n={}});var Ai,nh=P(()=>{"use strict";kt();Rt();Qp();rh();Ai=class{get contextId(){return xe.webgl.contextId}set contextId(e){xe.webgl.contextId=e}get matmulMaxBatchSize(){return xe.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){xe.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return xe.webgl.textureCacheMode}set textureCacheMode(e){xe.webgl.textureCacheMode=e}get pack(){return xe.webgl.pack}set pack(e){xe.webgl.pack=e}get async(){return xe.webgl.async}set async(e){xe.webgl.async=e}initialize(){try{return this.glContext=gs(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),ze.setWithEnv(xe),xe.webgl.context||Object.defineProperty(xe.webgl,"context",{value:this.glContext.gl}),ze.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return ze.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new _i(this,e)}dispose(){this.glContext.dispose()}}});async function bs(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=oh.get(n);if(t)return t;let o=await tw(n);if(o)return o}}else return bs(["webgl"]);throw new Error("no available backend to use")}async function tw(r){let e=ew;if(typeof e[r]<"u"&&rw(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return oh.set(r,n),n}}function rw(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var oh,ew,ih=P(()=>{"use strict";nh();oh=new Map,ew={webgl:new Ai}});var ys,Oi,ah=P(()=>{"use strict";Rt();ys=class{constructor(e,n){this.op=e;this.node=n}},Oi=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new ys(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let u of t.node.inputs)if(!this._values[u]&&this.graph.getInputIndices().indexOf(u)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((c,f)=>{let h=o[f];this._values[h]=c});let i=this._starter.slice(0),u=this.graph.getValues(),a=this.graph.getNodes(),s=0;for(;s<i.length;){let c=i[s++],f=this._ops[c],h=f.node.inputs.map(w=>this._values[w]);if(h.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${f.node}`);let g=h;ze.verbose("ExecPlan",`Runing op:${f.node.name} (${g.map((w,S)=>`'${f.node.inputs[S]}': ${w.type}[${w.dims.join(",")}]`).join(", ")})`);let y=await this.profiler.event("node",f.node.name,async()=>f.op.impl(t,g,f.op.context));if(y.length!==f.node.outputs.length)throw new Error("the size of output does not match model definition.");y.forEach((w,S)=>{let A=f.node.outputs[S];if(this._values[A])throw new Error(`output [${A}] already has value: op:${f.node.name}`);this._values[A]=w});let b=new Set;y.forEach((w,S)=>{let A=f.node.outputs[S];for(let E of u[A].to){let R=a[E],z=!0;for(let B of R.inputs)if(!this._values[B]){z=!1;break}z&&b.add(E)}}),i.push(...b)}let l=[];for(let c=0;c<this.graph.getOutputIndices().length;c++){let f=this.graph.getOutputIndices()[c],h=this._values[f];if(h===void 0)throw new Error(`required output [${f}] does not have value`);f===0?await h.getData():h.data,l.push(h)}return ze.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var _e,Gt,ao,sh=P(()=>{"use strict";qn();_e=hn(yn());Qr();Le();Gt=re.experimental.fbs,ao=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof _e.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof Gt.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof _e.onnx.AttributeProto?e.type:e.type();switch(n){case _e.onnx.AttributeProto.AttributeType.FLOAT:return"float";case _e.onnx.AttributeProto.AttributeType.INT:return"int";case _e.onnx.AttributeProto.AttributeType.STRING:return"string";case _e.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case _e.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case _e.onnx.AttributeProto.AttributeType.INTS:return"ints";case _e.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case _e.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${_e.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof _e.onnx.AttributeProto?e.type:e.type();if(n===_e.onnx.AttributeProto.AttributeType.GRAPH||n===_e.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===_e.onnx.AttributeProto.AttributeType.INT&&Ot.isLong(t))return Ot.longToNumber(t);if(n===_e.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let u=0;u<o.length;u++){let a=o[u];i[u]=Ot.longToNumber(a)}return i}if(n===_e.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof _e.onnx.AttributeProto?ut.fromProto(t):ut.fromOrtTensor(t);if(n===_e.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof _e.onnx.AttributeProto)return t.map(i=>ut.fromProto(i));if(e instanceof Gt.Attribute)return t.map(i=>ut.fromOrtTensor(i))}return n===_e.onnx.AttributeProto.AttributeType.STRING&&e instanceof _e.onnx.AttributeProto?Zn(t):n===_e.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof _e.onnx.AttributeProto?t.map(Zn):t}static getValueNoCheck(e){return e instanceof _e.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case _e.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case _e.onnx.AttributeProto.AttributeType.INT:return e.i;case _e.onnx.AttributeProto.AttributeType.STRING:return e.s;case _e.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case _e.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case _e.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case _e.onnx.AttributeProto.AttributeType.INTS:return e.ints;case _e.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case _e.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case _e.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${_e.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case Gt.AttributeType.FLOAT:return e.f();case Gt.AttributeType.INT:return e.i();case Gt.AttributeType.STRING:return e.s();case Gt.AttributeType.TENSOR:return e.t();case Gt.AttributeType.GRAPH:return e.g();case Gt.AttributeType.FLOATS:return e.floatsArray();case Gt.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case Gt.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case Gt.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${Gt.AttributeType[e.type()]}`)}}}});var xs,Ei,ws,ar,Ci,vs,uh=P(()=>{"use strict";sh();qn();xs=hn(yn());Qr();Le();Ei=re.experimental.fbs,ws={from:(r,e)=>new vs(r,e)},ar=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=yt.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},Ci=class{constructor(e,n){e instanceof xs.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new ao(e.attribute)):e instanceof Ei.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new ao(yt.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},vs=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof xs.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof Ei.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let u=this._allData.push(new ar(i))-1;n.set(i.name,u),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let u=n.get(i.name);if(u===void 0){let a=new ar;a.type={shape:{dims:yt.tensorDimsFromProto(i.dims)},tensorType:yt.tensorDataTypeFromProto(i.dataType)},u=this._allData.push(a)-1,n.set(i.name,u)}this._allData[u]._from=-1,this._allData[u].tensor=ut.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let u=this._allData.push(new ar(i))-1;n.set(i.name,u),this._allOutputIndices.push(u),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let s=`unnamed_${i.opType}_${a}`;if(!t.has(s)){i.name=s;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let u=this._nodes.push(new Ci(i))-1;t.set(i.name,u)}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let s of a.output){let l=n.get(s);if(typeof l>"u"&&(l=this._allData.push(new ar)-1,n.set(s,l)),u.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");u.outputs.pop(),u.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=ut.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let s of a.input){let l=n.get(s);if(typeof l>"u"){if(s===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${s}' for node: ${a.name}`)}u.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let u=e.inputs(i);if(n.has(u))throw new Error(`duplicated input name: ${u}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===u){let s=new ar;if(e.nodeArgs(a)?.type()?.valueType()!==Ei.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let c=e.nodeArgs(a).type().value(new Ei.TensorTypeAndShape),f=yt.tensorDataTypeFromProto(c.elemType()),h=c.shape(),g=[];for(let b=0;b<h.dimLength();b++)g.push(Ot.longToNumber(h.dim(b).value().dimValue()));s.type={shape:{dims:g},tensorType:f};let y=this._allData.push(s)-1;n.set(u,y),o.push(u)}}for(let i=0;i<e.initializersLength();i++){let u=e.initializers(i),a=n.get(u.name());if(a===void 0){let s=new ar,l=yt.tensorDimsFromORTFormat(u),c=yt.tensorDataTypeFromProto(u.dataType());s.type={shape:{dims:l},tensorType:c},a=this._allData.push(s)-1,n.set(u.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=ut.fromOrtTensor(u)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let u=e.outputs(i);if(n.has(u))throw new Error(`duplicated output name: ${u}`);let a=this._allData.push(new ar)-1;n.set(u,a),this._allOutputIndices.push(a),this._allOutputNames.push(u)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let u=e.nodes(i),a=u.name();if(!a)for(let l=0;a=`unnamed_${u.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let s=this._nodes.push(new Ci(u,a))-1;t.set(a,s)}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let s=0;s<a?.outputsLength();s++){let l=a?.outputs(s),c=n.get(l);if(typeof c>"u"&&(c=this._allData.push(new ar)-1,n.set(l,c)),u.outputs.push(c),this._allData[c]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${c}`);if(this._allData[c]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");u.outputs.pop(),u.executeNode=!1,this._allData[c]._from=-1,this._allData[c].tensor=ut.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let s=0;s<a.inputsLength();s++){let l=a.inputs(s),c=n.get(l);if(typeof c>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);u.inputs.push(c),this._allData[c]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(u=>{e.add(u)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let u=this._allData[i];if(typeof u.tensor<"u")throw new Error("node outputs should not be initialized");if(u._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");u._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let u=0;u<i._to.length;u++)if(i._to[u]>=0)i._to[u]=n[i._to[u]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(u=>{i=this._nodes[u].inputs.indexOf(o+e),i!==-1&&(this._nodes[u].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let s=this._allData[n.inputs[a]].to.indexOf(e);if(s===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(s,1)}this._allData[o]._to=[];let u=this._allOutputIndices.indexOf(o);if(u!==-1&&(this._allOutputIndices[u]=t),i&&i.length>0)for(let a of i){let s=this._nodes[a].inputs.indexOf(o);if(s===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[s]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[Jr,Zr])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var lh,nw,Pi,ch=P(()=>{"use strict";Jo();uh();qn();lh=hn(yn());Le();nw=re.experimental.fbs,Pi=class{constructor(){}load(e,n,t){if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(o){if(t!==void 0)throw o}this.loadFromOrtFormat(e,n)}loadFromOnnxFormat(e,n){let t=lh.onnx.ModelProto.decode(e);if(Ot.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:Ot.longToNumber(i.version)})),this._graph=ws.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new C.ByteBuffer(e),o=nw.InferenceSession.getRootAsInferenceSession(t).model();if(Ot.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let u=0;u<o.opsetImportLength();u++){let a=o.opsetImport(u);this._opsets.push({domain:a?.domain(),version:Ot.longToNumber(a.version())})}this._graph=ws.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var Di,dh=P(()=>{"use strict";ih();ah();Rt();ch();Di=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=Yo.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await bs(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new Pi,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let u=await(void 0)(e);this.initialize(u,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new Oi(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let u=e.get(n[i]);if(!u)throw new Error(`missing input tensor for: '${name}'`);t[o++]=u}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let u=0;u<t.length;++u){let a=o[t[u]];i[u]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[u].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],u=n[o].dims;if(!this.compareTensorDims(i,u,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${u.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0))return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var ki,fh=P(()=>{"use strict";kt();Qr();ki=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let s=e[a];o.set(a,new ut(s.dims,s.type,void 0,void 0,s.data))}let i=await this.session.run(o),u={};return i.forEach((a,s)=>{u[s]=new lt(a.type,a.data,a.dims)}),u}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var ph={};Ar(ph,{onnxjsBackend:()=>iw});var Ts,iw,hh=P(()=>{"use strict";dh();fh();Ts=class{async init(){}async createInferenceSessionHandler(e,n){let t=new Di(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new ki(t)}},iw=new Ts});var $s={};Ar($s,{readFile:()=>aw});var aw,Ss=P(()=>{aw=void 0});var Is={};Ar(Is,{join:()=>sw});var sw,_s=P(()=>{sw=void 0});var bh=He((gh,As)=>{"use strict";var mh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((p,v)=>{t=p,o=v}),n.jsepInit=(p,v,$,O,L,K,U,ve)=>{n.Za=p,n.Oa=v,n.Qa=$,n.Ja=O,n.Pa=L,n.ra=K,n.Ra=U,n.Sa=ve,v=(ne,le,se)=>(...Se)=>{let Oe=Dt,M=le?.();Se=ne(...Se);let de=le?.();return M!==de&&(ne=de,se(M),le=se=null),Dt!=Oe?_o():Se},$=ne=>async(...le)=>{try{if(n.Da)throw Error("Session already started");let se=n.Da={Ta:le[0],errors:[]},Se=await ne(...le);if(n.Da!==se)throw Error("Session mismatch");p.flush();let Oe=se.errors;if(0<Oe.length){let M=await Promise.all(Oe);if(M=M.filter(de=>de),0<M.length)throw Error(M.join(`
`))}return Se}finally{n.Da=null}},n._OrtRun=$(v(n._OrtRun,()=>n._OrtRun,ne=>n._OrtRun=ne)),n._OrtRunWithBinding=$(v(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,ne=>n._OrtRunWithBinding=ne)),n._OrtBindInput=v(n._OrtBindInput,()=>n._OrtBindInput,ne=>n._OrtBindInput=ne),n.jsepRegisterBuffer=(ne,le,se,Se)=>p.registerBuffer(ne,le,se,Se),n.jsepUnregisterBuffers=ne=>{p.unregisterBuffers(ne)},n.jsepGetBuffer=ne=>p.getBuffer(ne),n.jsepCreateDownloader=(ne,le,se)=>p.createDownloader(ne,le,se)};var i=Object.assign({},n),u="./this.program",a=(p,v)=>{throw v},s=typeof window=="object",l=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",f="",h,g,y;if(c){var b=(Ss(),br($s)),w=(_s(),br(Is));f=l?w.dirname(f)+"/":__dirname+"/",h=(p,v)=>(p=p.startsWith("file://")?new URL(p):w.normalize(p),b.readFileSync(p,v?void 0:"utf8")),y=p=>(p=h(p,!0),p.buffer||(p=new Uint8Array(p)),p),g=(p,v,$,O=!0)=>{p=p.startsWith("file://")?new URL(p):w.normalize(p),b.readFile(p,O?void 0:"utf8",(L,K)=>{L?$(L):v(O?K.buffer:K)})},!n.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),a=(p,v)=>{throw process.exitCode=p,v},n.inspect=()=>"[Emscripten Module object]"}else(s||l)&&(l?f=self.location.href:typeof document<"u"&&document.currentScript&&(f=document.currentScript.src),r&&(f=r),f.indexOf("blob:")!==0?f=f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):f="",h=p=>{var v=new XMLHttpRequest;return v.open("GET",p,!1),v.send(null),v.responseText},l&&(y=p=>{var v=new XMLHttpRequest;return v.open("GET",p,!1),v.responseType="arraybuffer",v.send(null),new Uint8Array(v.response)}),g=(p,v,$)=>{var O=new XMLHttpRequest;O.open("GET",p,!0),O.responseType="arraybuffer",O.onload=()=>{O.status==200||O.status==0&&O.response?v(O.response):$()},O.onerror=$,O.send(null)});var S=n.print||console.log.bind(console),A=n.printErr||console.error.bind(console);Object.assign(n,i),i=null,n.thisProgram&&(u=n.thisProgram),n.quit&&(a=n.quit);var E;n.wasmBinary&&(E=n.wasmBinary);var R=n.noExitRuntime||!0;typeof WebAssembly!="object"&&Ct("no native wasm support detected");var z,B,G=!1,Y,Z,me,k,ee,Ve,ge;function Ne(){var p=z.buffer;n.HEAP8=Z=new Int8Array(p),n.HEAP16=new Int16Array(p),n.HEAP32=k=new Int32Array(p),n.HEAPU8=me=new Uint8Array(p),n.HEAPU16=new Uint16Array(p),n.HEAPU32=ee=new Uint32Array(p),n.HEAPF32=Ve=new Float32Array(p),n.HEAPF64=ge=new Float64Array(p)}var Q=[],We=[],et=[];function Je(){var p=n.preRun.shift();Q.unshift(p)}var Ue=0,$r=null,St=null;function Ct(p){throw n.onAbort&&n.onAbort(p),p="Aborted("+p+")",A(p),G=!0,Y=1,p=new WebAssembly.RuntimeError(p+". Build with -sASSERTIONS for more info."),o(p),p}function j(p){return p.startsWith("data:application/octet-stream;base64,")}var we;if(we="ort-wasm-simd.wasm",!j(we)){var Ie=we;we=n.locateFile?n.locateFile(Ie,f):f+Ie}function gt(p){if(p==we&&E)return new Uint8Array(E);if(y)return y(p);throw"both async and sync fetching of the wasm failed"}function It(p){if(!E&&(s||l)){if(typeof fetch=="function"&&!p.startsWith("file://"))return fetch(p,{credentials:"same-origin"}).then(v=>{if(!v.ok)throw"failed to load wasm binary file at '"+p+"'";return v.arrayBuffer()}).catch(()=>gt(p));if(g)return new Promise((v,$)=>{g(p,O=>v(new Uint8Array(O)),$)})}return Promise.resolve().then(()=>gt(p))}function Qe(p,v,$){return It(p).then(O=>WebAssembly.instantiate(O,v)).then(O=>O).then($,O=>{A("failed to asynchronously prepare wasm: "+O),Ct(O)})}function ft(p,v){var $=we;return E||typeof WebAssembly.instantiateStreaming!="function"||j($)||$.startsWith("file://")||c||typeof fetch!="function"?Qe($,p,v):fetch($,{credentials:"same-origin"}).then(O=>WebAssembly.instantiateStreaming(O,p).then(v,function(L){return A("wasm streaming compile failed: "+L),A("falling back to ArrayBuffer instantiation"),Qe($,p,v)}))}var xt,Jt={913792:p=>{n.ra("Abs",p,void 0)},913843:p=>{n.ra("Neg",p,void 0)},913894:p=>{n.ra("Floor",p,void 0)},913947:p=>{n.ra("Ceil",p,void 0)},913999:p=>{n.ra("Reciprocal",p,void 0)},914057:p=>{n.ra("Sqrt",p,void 0)},914109:p=>{n.ra("Exp",p,void 0)},914160:p=>{n.ra("Erf",p,void 0)},914211:p=>{n.ra("Sigmoid",p,void 0)},914266:p=>{n.ra("Log",p,void 0)},914317:p=>{n.ra("Sin",p,void 0)},914368:p=>{n.ra("Cos",p,void 0)},914419:p=>{n.ra("Tan",p,void 0)},914470:p=>{n.ra("Asin",p,void 0)},914522:p=>{n.ra("Acos",p,void 0)},914574:p=>{n.ra("Atan",p,void 0)},914626:p=>{n.ra("Sinh",p,void 0)},914678:p=>{n.ra("Cosh",p,void 0)},914730:p=>{n.ra("Asinh",p,void 0)},914783:p=>{n.ra("Acosh",p,void 0)},914836:p=>{n.ra("Atanh",p,void 0)},914889:p=>{n.ra("Tanh",p,void 0)},914941:p=>{n.ra("Not",p,void 0)},914992:(p,v,$)=>{n.ra("ClipV10",p,{min:v,max:$})},915064:p=>{n.ra("Clip",p,void 0)},915116:(p,v)=>{n.ra("Elu",p,{alpha:v})},915174:p=>{n.ra("Relu",p,void 0)},915226:(p,v)=>{n.ra("LeakyRelu",p,{alpha:v})},915290:(p,v)=>{n.ra("ThresholdedRelu",p,{alpha:v})},915360:(p,v)=>{n.ra("Cast",p,{to:v})},915418:p=>{n.ra("Add",p,void 0)},915469:p=>{n.ra("Sub",p,void 0)},915520:p=>{n.ra("Mul",p,void 0)},915571:p=>{n.ra("Div",p,void 0)},915622:p=>{n.ra("Pow",p,void 0)},915673:p=>{n.ra("Equal",p,void 0)},915726:p=>{n.ra("Greater",p,void 0)},915781:p=>{n.ra("GreaterOrEqual",p,void 0)},915843:p=>{n.ra("Less",p,void 0)},915895:p=>{n.ra("LessOrEqual",p,void 0)},915954:(p,v,$,O,L)=>{n.ra("ReduceMean",p,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},916118:(p,v,$,O,L)=>{n.ra("ReduceMax",p,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},916281:(p,v,$,O,L)=>{n.ra("ReduceMin",p,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},916444:(p,v,$,O,L)=>{n.ra("ReduceProd",p,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},916608:(p,v,$,O,L)=>{n.ra("ReduceSum",p,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},916771:(p,v,$,O,L)=>{n.ra("ReduceL1",p,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},916933:(p,v,$,O,L)=>{n.ra("ReduceL2",p,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},917095:(p,v,$,O,L)=>{n.ra("ReduceLogSum",p,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},917261:(p,v,$,O,L)=>{n.ra("ReduceSumSquare",p,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},917430:(p,v,$,O,L)=>{n.ra("ReduceLogSumExp",p,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},917599:p=>{n.ra("Where",p,void 0)},917652:(p,v,$)=>{n.ra("Transpose",p,{perm:v?Array.from(k.subarray($>>>0,$+v>>>0)):[]})},917765:(p,v,$,O,L,K,U,ve,ne,le,se,Se,Oe,M,de)=>{n.ra("ConvTranspose",p,{format:ne?"NHWC":"NCHW",autoPad:v,dilations:[$],group:O,kernel_shape:[L],pads:[K,U],strides:[ve],wIsConst:()=>!!Z[le>>>0],outputPadding:se?Array.from(k.subarray(Se>>>0,Se+se>>>0)):[],outputShape:Oe?Array.from(k.subarray(M>>>0,M+Oe>>>0)):[],activation:tt(de)})},918179:(p,v,$,O,L,K,U,ve,ne,le,se,Se,Oe,M)=>{n.ra("ConvTranspose",p,{format:ve?"NHWC":"NCHW",autoPad:v,dilations:Array.from(k.subarray($>>>0,$+2>>>0)),group:O,kernelShape:Array.from(k.subarray(L>>>0,L+2>>>0)),pads:Array.from(k.subarray(K>>>0,K+4>>>0)),strides:Array.from(k.subarray(U>>>0,U+2>>>0)),wIsConst:()=>!!Z[ne>>>0],outputPadding:0<le?Array.from(k.subarray(se>>>0,se+le>>>0)):[],outputShape:0<Se?Array.from(k.subarray(Oe>>>0,Oe+Se>>>0)):[],activation:tt(M)})},918736:(p,v,$,O,L,K,U,ve,ne,le,se,Se,Oe,M,de)=>{n.ra("ConvTranspose",p,{format:ne?"NHWC":"NCHW",autoPad:v,dilations:[$],group:O,kernel_shape:[L],pads:[K,U],strides:[ve],wIsConst:()=>!!Z[le>>>0],outputPadding:se?Array.from(k.subarray(Se>>>0,Se+se>>>0)):[],outputShape:Oe?Array.from(k.subarray(M>>>0,M+Oe>>>0)):[],activation:tt(de)})},919150:(p,v,$,O,L,K,U,ve,ne,le,se,Se,Oe,M)=>{n.ra("ConvTranspose",p,{format:ve?"NHWC":"NCHW",autoPad:v,dilations:Array.from(k.subarray($>>>0,$+2>>>0)),group:O,kernelShape:Array.from(k.subarray(L>>>0,L+2>>>0)),pads:Array.from(k.subarray(K>>>0,K+4>>>0)),strides:Array.from(k.subarray(U>>>0,U+2>>>0)),wIsConst:()=>!!Z[ne>>>0],outputPadding:0<le?Array.from(k.subarray(se>>>0,se+le>>>0)):[],outputShape:0<Se?Array.from(k.subarray(Oe>>>0,Oe+Se>>>0)):[],activation:tt(M)})},919707:(p,v)=>{n.ra("GlobalAveragePool",p,{format:v?"NHWC":"NCHW"})},919798:(p,v,$,O,L,K,U,ve,ne,le,se,Se,Oe,M,de,Ae)=>{n.ra("AveragePool",p,{format:Ae?"NHWC":"NCHW",auto_pad:v,ceil_mode:$,count_include_pad:O,storage_order:L,dilations:[K,U],kernel_shape:[ve,ne],pads:[le,se,Se,Oe],strides:[M,de]})},920082:(p,v)=>{n.ra("GlobalAveragePool",p,{format:v?"NHWC":"NCHW"})},920173:(p,v,$,O,L,K,U,ve,ne,le,se,Se,Oe,M,de,Ae)=>{n.ra("AveragePool",p,{format:Ae?"NHWC":"NCHW",auto_pad:v,ceil_mode:$,count_include_pad:O,storage_order:L,dilations:[K,U],kernel_shape:[ve,ne],pads:[le,se,Se,Oe],strides:[M,de]})},920457:(p,v)=>{n.ra("GlobalMaxPool",p,{format:v?"NHWC":"NCHW"})},920544:(p,v,$,O,L,K,U,ve,ne,le,se,Se,Oe,M,de,Ae)=>{n.ra("MaxPool",p,{format:Ae?"NHWC":"NCHW",auto_pad:v,ceil_mode:$,count_include_pad:O,storage_order:L,dilations:[K,U],kernel_shape:[ve,ne],pads:[le,se,Se,Oe],strides:[M,de]})},920824:(p,v)=>{n.ra("GlobalMaxPool",p,{format:v?"NHWC":"NCHW"})},920911:(p,v,$,O,L,K,U,ve,ne,le,se,Se,Oe,M,de,Ae)=>{n.ra("MaxPool",p,{format:Ae?"NHWC":"NCHW",auto_pad:v,ceil_mode:$,count_include_pad:O,storage_order:L,dilations:[K,U],kernel_shape:[ve,ne],pads:[le,se,Se,Oe],strides:[M,de]})},921191:(p,v,$,O,L)=>{n.ra("Gemm",p,{alpha:v,beta:$,transA:O,transB:L})},921295:p=>{n.ra("MatMul",p,void 0)},921349:(p,v,$,O)=>{n.ra("ArgMax",p,{keepDims:!!v,selectLastIndex:!!$,axis:O})},921457:(p,v,$,O)=>{n.ra("ArgMin",p,{keepDims:!!v,selectLastIndex:!!$,axis:O})},921565:(p,v)=>{n.ra("Softmax",p,{axis:v})},921628:(p,v)=>{n.ra("Concat",p,{axis:v})},921688:(p,v,$,O,L)=>{n.ra("Split",p,{axis:v,numOutputs:$,splitSizes:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},921833:p=>{n.ra("Expand",p,void 0)},921887:(p,v)=>{n.ra("Gather",p,{axis:Number(v)})},921958:(p,v)=>{n.ra("GatherElements",p,{axis:Number(v)})},922037:(p,v,$,O,L,K,U,ve,ne,le,se)=>{n.ra("Resize",p,{antialias:v,axes:$?Array.from(k.subarray(O>>>0,O+$>>>0)):[],coordinateTransformMode:tt(L),cubicCoeffA:K,excludeOutside:U,extrapolationValue:ve,keepAspectRatioPolicy:tt(ne),mode:tt(le),nearestMode:tt(se)})},922388:(p,v,$,O,L,K,U)=>{n.ra("Slice",p,{starts:v?Array.from(k.subarray($>>>0,$+v>>>0)):[],ends:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[],axes:K?Array.from(k.subarray(U>>>0,U+K>>>0)):[]})},922619:p=>{n.ra("Tile",p,void 0)},922671:(p,v,$)=>{n.ra("LayerNormalization",p,{axis:Number(v),epsilon:Number($)})},922778:(p,v,$)=>{n.ra("InstanceNormalization",p,{epsilon:v,format:$?"NHWC":"NCHW"})},922892:(p,v,$)=>{n.ra("InstanceNormalization",p,{epsilon:v,format:$?"NHWC":"NCHW"})},923006:p=>{n.ra("Range",p,void 0)},923059:(p,v)=>{n.ra("Einsum",p,{equation:tt(v)})},923140:(p,v,$,O,L)=>{n.ra("Pad",p,{mode:v,value:$,pads:O?Array.from(k.subarray(L>>>0,L+O>>>0)):[]})},923272:p=>{n.ra("Gelu",p,void 0)},923324:p=>{n.ra("BiasAdd",p,void 0)},923379:p=>{n.ra("BiasSplitGelu",p,void 0)},923440:(p,v)=>{n.ra("SkipLayerNormalization",p,{epsilon:v})},923521:(p,v,$,O,L,K,U,ve,ne,le,se,Se,Oe)=>{n.ra("Conv",p,{format:ne?"NHWC":"NCHW",auto_pad:v,dilations:[$],group:O,kernel_shape:[L],pads:K?Array.from(k.subarray(U>>>0,U+K>>>0)):[],strides:[ve],w_is_const:()=>!!Z[le>>>0],activation:tt(se),activation_params:Se?Array.from(Ve.subarray(Oe>>>0,Oe+Se>>>0)):[]})},923902:(p,v,$,O,L,K,U,ve,ne,le,se,Se,Oe,M,de,Ae)=>{n.ra("Conv",p,{format:Se?"NHWC":"NCHW",auto_pad:v,dilations:[$,O],group:L,kernel_shape:[K,U],pads:ve?Array.from(k.subarray(ne>>>0,ne+ve>>>0)):[],strides:[le,se],w_is_const:()=>!!Z[Oe>>>0],activation:tt(M),activation_params:de?Array.from(Ve.subarray(Ae>>>0,Ae+de>>>0)):[]})},924304:p=>{n.Ra(p)},924338:(p,v)=>n.Sa(p,v,n.Da.Ta,n.Da.errors),924450:p=>n.Oa(p),924483:p=>n.Qa(p),924515:(p,v,$)=>{n.Ja(p,v,$,!0)},924554:(p,v,$)=>{n.Ja(p,v,$)}};function Pt(p){this.name="ExitStatus",this.message=`Program terminated with exit(${p})`,this.status=p}var Nr=p=>{for(;0<p.length;)p.shift()(n)};function zr(p){this.Ha=p-24,this.Ma=function(v){ee[this.Ha+4>>2>>>0]=v},this.La=function(v){ee[this.Ha+8>>2>>>0]=v},this.Ya=function(v,$){this.Ka(),this.Ma(v),this.La($)},this.Ka=function(){ee[this.Ha+16>>2>>>0]=0}}var On=0,vo=0,Wt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,En=(p,v,$)=>{v>>>=0;var O=v+$;for($=v;p[$]&&!($>=O);)++$;if(16<$-v&&p.buffer&&Wt)return Wt.decode(p.subarray(v,$));for(O="";v<$;){var L=p[v++];if(L&128){var K=p[v++]&63;if((L&224)==192)O+=String.fromCharCode((L&31)<<6|K);else{var U=p[v++]&63;L=(L&240)==224?(L&15)<<12|K<<6|U:(L&7)<<18|K<<12|U<<6|p[v++]&63,65536>L?O+=String.fromCharCode(L):(L-=65536,O+=String.fromCharCode(55296|L>>10,56320|L&1023))}}else O+=String.fromCharCode(L)}return O},tt=(p,v)=>(p>>>=0)?En(me,p,v):"",sn=p=>{for(var v=0,$=0;$<p.length;++$){var O=p.charCodeAt($);127>=O?v++:2047>=O?v+=2:55296<=O&&57343>=O?(v+=4,++$):v+=3}return v},Cn=(p,v,$,O)=>{if($>>>=0,!(0<O))return 0;var L=$;O=$+O-1;for(var K=0;K<p.length;++K){var U=p.charCodeAt(K);if(55296<=U&&57343>=U){var ve=p.charCodeAt(++K);U=65536+((U&1023)<<10)|ve&1023}if(127>=U){if($>=O)break;v[$++>>>0]=U}else{if(2047>=U){if($+1>=O)break;v[$++>>>0]=192|U>>6}else{if(65535>=U){if($+2>=O)break;v[$++>>>0]=224|U>>12}else{if($+3>=O)break;v[$++>>>0]=240|U>>18,v[$++>>>0]=128|U>>12&63}v[$++>>>0]=128|U>>6&63}v[$++>>>0]=128|U&63}}return v[$>>>0]=0,$-L},pr=p=>p%4===0&&(p%100!==0||p%400===0),xo=[0,31,60,91,121,152,182,213,244,274,305,335],hr=[0,31,59,90,120,151,181,212,243,273,304,334],un=p=>{var v=sn(p)+1,$=fn(v);return $&&Cn(p,me,$,v),$},Sr=[],ln=(p,v)=>{Sr.length=0;var $;for(v>>=2;$=me[p++>>>0];)v+=$!=105&v,Sr.push($==105?k[v>>>0]:ge[v++>>>1]),++v;return Sr},cn={},Pn=()=>{if(!dn){var p={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},v;for(v in cn)cn[v]===void 0?delete p[v]:p[v]=cn[v];var $=[];for(v in p)$.push(`${v}=${p[v]}`);dn=$}return dn},dn,wo=[null,[],[]],bt=[31,29,31,30,31,30,31,31,30,31,30,31],Dn=[31,28,31,30,31,30,31,31,30,31,30,31];function kn(p){var v=Array(sn(p)+1);return Cn(p,v,0,v.length),v}function pe(p,v,$,O){function L(M,de,Ae){for(M=typeof M=="number"?M.toString():M||"";M.length<de;)M=Ae[0]+M;return M}function K(M,de){return L(M,de,"0")}function U(M,de){function Ae(Un){return 0>Un?-1:0<Un?1:0}var gr;return(gr=Ae(M.getFullYear()-de.getFullYear()))===0&&(gr=Ae(M.getMonth()-de.getMonth()))===0&&(gr=Ae(M.getDate()-de.getDate())),gr}function ve(M){switch(M.getDay()){case 0:return new Date(M.getFullYear()-1,11,29);case 1:return M;case 2:return new Date(M.getFullYear(),0,3);case 3:return new Date(M.getFullYear(),0,2);case 4:return new Date(M.getFullYear(),0,1);case 5:return new Date(M.getFullYear()-1,11,31);case 6:return new Date(M.getFullYear()-1,11,30)}}function ne(M){var de=M.Ba;for(M=new Date(new Date(M.Ca+1900,0,1).getTime());0<de;){var Ae=M.getMonth(),gr=(pr(M.getFullYear())?bt:Dn)[Ae];if(de>gr-M.getDate())de-=gr-M.getDate()+1,M.setDate(1),11>Ae?M.setMonth(Ae+1):(M.setMonth(0),M.setFullYear(M.getFullYear()+1));else{M.setDate(M.getDate()+de);break}}return Ae=new Date(M.getFullYear()+1,0,4),de=ve(new Date(M.getFullYear(),0,4)),Ae=ve(Ae),0>=U(de,M)?0>=U(Ae,M)?M.getFullYear()+1:M.getFullYear():M.getFullYear()-1}p>>>=0,v>>>=0,$>>>=0,O>>>=0;var le=k[O+40>>2>>>0];O={Wa:k[O>>2>>>0],Va:k[O+4>>2>>>0],Ea:k[O+8>>2>>>0],Ia:k[O+12>>2>>>0],Fa:k[O+16>>2>>>0],Ca:k[O+20>>2>>>0],wa:k[O+24>>2>>>0],Ba:k[O+28>>2>>>0],$a:k[O+32>>2>>>0],Ua:k[O+36>>2>>>0],Xa:le?tt(le):""},$=tt($),le={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var se in le)$=$.replace(new RegExp(se,"g"),le[se]);var Se="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Oe="January February March April May June July August September October November December".split(" ");le={"%a":M=>Se[M.wa].substring(0,3),"%A":M=>Se[M.wa],"%b":M=>Oe[M.Fa].substring(0,3),"%B":M=>Oe[M.Fa],"%C":M=>K((M.Ca+1900)/100|0,2),"%d":M=>K(M.Ia,2),"%e":M=>L(M.Ia,2," "),"%g":M=>ne(M).toString().substring(2),"%G":M=>ne(M),"%H":M=>K(M.Ea,2),"%I":M=>(M=M.Ea,M==0?M=12:12<M&&(M-=12),K(M,2)),"%j":M=>{for(var de=0,Ae=0;Ae<=M.Fa-1;de+=(pr(M.Ca+1900)?bt:Dn)[Ae++]);return K(M.Ia+de,3)},"%m":M=>K(M.Fa+1,2),"%M":M=>K(M.Va,2),"%n":()=>`
`,"%p":M=>0<=M.Ea&&12>M.Ea?"AM":"PM","%S":M=>K(M.Wa,2),"%t":()=>"	","%u":M=>M.wa||7,"%U":M=>K(Math.floor((M.Ba+7-M.wa)/7),2),"%V":M=>{var de=Math.floor((M.Ba+7-(M.wa+6)%7)/7);if(2>=(M.wa+371-M.Ba-2)%7&&de++,de)de==53&&(Ae=(M.wa+371-M.Ba)%7,Ae==4||Ae==3&&pr(M.Ca)||(de=1));else{de=52;var Ae=(M.wa+7-M.Ba-1)%7;(Ae==4||Ae==5&&pr(M.Ca%400-1))&&de++}return K(de,2)},"%w":M=>M.wa,"%W":M=>K(Math.floor((M.Ba+7-(M.wa+6)%7)/7),2),"%y":M=>(M.Ca+1900).toString().substring(2),"%Y":M=>M.Ca+1900,"%z":M=>{M=M.Ua;var de=0<=M;return M=Math.abs(M)/60,(de?"+":"-")+("0000"+(M/60*100+M%60)).slice(-4)},"%Z":M=>M.Xa,"%%":()=>"%"},$=$.replace(/%%/g,"\0\0");for(se in le)$.includes(se)&&($=$.replace(new RegExp(se,"g"),le[se](O)));return $=$.replace(/\0\0/g,"%"),se=kn($),se.length>v?0:(Z.set(se,p>>>0),se.length-1)}function mr(p){try{p()}catch(v){Ct(v)}}function To(p){var v={},$;for($ in p)(function(O){var L=p[O];v[O]=typeof L=="function"?function(){Fr.push(O);try{return L.apply(null,arguments)}finally{G||(Fr.pop()===O||Ct(),Dt&&Zt===1&&Fr.length===0&&(Zt=0,mr(Vn),typeof Fibers<"u"&&Fibers.ab()))}}:L})($);return v}var Zt=0,Dt=null,$o=0,Fr=[],Rn={},Bn={},So=0,Gr=null,Io=[];function _o(){return new Promise((p,v)=>{Gr={resolve:p,reject:v}})}function Ao(){var p=fn(65548),v=p+12;ee[p>>2>>>0]=v,ee[p+4>>2>>>0]=v+65536,v=Fr[0];var $=Rn[v];return $===void 0&&($=So++,Rn[v]=$,Bn[$]=v),k[p+8>>2>>>0]=$,p}function Oo(p){if(!G){if(Zt===0){var v=!1,$=!1;p((O=0)=>{if(!G&&($o=O,v=!0,$)){Zt=2,mr(()=>pn(Dt)),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.resume(),O=!1;try{var L=(0,B[Bn[k[Dt+8>>2>>>0]]])()}catch(ve){L=ve,O=!0}var K=!1;if(!Dt){var U=Gr;U&&(Gr=null,(O?U.reject:U.resolve)(L),K=!0)}if(O&&!K)throw L}}),$=!0,v||(Zt=1,Dt=Ao(),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.pause(),mr(()=>Gn(Dt)))}else Zt===2?(Zt=0,mr(Vr),Mn(Dt),Dt=null,Io.forEach(O=>{if(!G)try{if(O(),!R)try{Y=Y=O=Y,R||(n.onExit&&n.onExit(O),G=!0),a(O,new Pt(O))}catch(L){L instanceof Pt||L=="unwind"||a(1,L)}}catch(L){L instanceof Pt||L=="unwind"||a(1,L)}})):Ct(`invalid state: ${Zt}`);return $o}}function Eo(p){return Oo(v=>{p().then(v)})}var Co={n:function(p,v,$){return Eo(async()=>{await n.Pa(p,v,$)})},a:function(p,v,$){throw p>>>=0,new zr(p).Ya(v>>>0,$>>>0),On=p,vo++,On},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},G:function(){},l:function(){},A:function(){},x:function(){},I:function(){},y:function(){},m:()=>!0,q:function(p,v,$){p=v+2097152>>>0<4194305-!!p?(p>>>0)+4294967296*v:NaN,$>>>=0,p=new Date(1e3*p),k[$>>2>>>0]=p.getUTCSeconds(),k[$+4>>2>>>0]=p.getUTCMinutes(),k[$+8>>2>>>0]=p.getUTCHours(),k[$+12>>2>>>0]=p.getUTCDate(),k[$+16>>2>>>0]=p.getUTCMonth(),k[$+20>>2>>>0]=p.getUTCFullYear()-1900,k[$+24>>2>>>0]=p.getUTCDay(),k[$+28>>2>>>0]=(p.getTime()-Date.UTC(p.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(p,v,$){p=v+2097152>>>0<4194305-!!p?(p>>>0)+4294967296*v:NaN,$>>>=0,p=new Date(1e3*p),k[$>>2>>>0]=p.getSeconds(),k[$+4>>2>>>0]=p.getMinutes(),k[$+8>>2>>>0]=p.getHours(),k[$+12>>2>>>0]=p.getDate(),k[$+16>>2>>>0]=p.getMonth(),k[$+20>>2>>>0]=p.getFullYear()-1900,k[$+24>>2>>>0]=p.getDay(),k[$+28>>2>>>0]=(pr(p.getFullYear())?xo:hr)[p.getMonth()]+p.getDate()-1|0,k[$+36>>2>>>0]=-(60*p.getTimezoneOffset()),v=new Date(p.getFullYear(),6,1).getTimezoneOffset();var O=new Date(p.getFullYear(),0,1).getTimezoneOffset();k[$+32>>2>>>0]=(v!=O&&p.getTimezoneOffset()==Math.min(O,v))|0},s:function(p){p>>>=0;var v=new Date(k[p+20>>2>>>0]+1900,k[p+16>>2>>>0],k[p+12>>2>>>0],k[p+8>>2>>>0],k[p+4>>2>>>0],k[p>>2>>>0],0),$=k[p+32>>2>>>0],O=v.getTimezoneOffset(),L=new Date(v.getFullYear(),6,1).getTimezoneOffset(),K=new Date(v.getFullYear(),0,1).getTimezoneOffset(),U=Math.min(K,L);return 0>$?k[p+32>>2>>>0]=+(L!=K&&U==O):0<$!=(U==O)&&(L=Math.max(K,L),v.setTime(v.getTime()+6e4*((0<$?U:L)-O))),k[p+24>>2>>>0]=v.getDay(),k[p+28>>2>>>0]=(pr(v.getFullYear())?xo:hr)[v.getMonth()]+v.getDate()-1|0,k[p>>2>>>0]=v.getSeconds(),k[p+4>>2>>>0]=v.getMinutes(),k[p+8>>2>>>0]=v.getHours(),k[p+12>>2>>>0]=v.getDate(),k[p+16>>2>>>0]=v.getMonth(),k[p+20>>2>>>0]=v.getYear(),p=v.getTime()/1e3,Ln((xt=p,1<=+Math.abs(xt)?0<xt?+Math.floor(xt/4294967296)>>>0:~~+Math.ceil((xt-+(~~xt>>>0))/4294967296)>>>0:0)),p>>>0},o:function(){return-52},p:function(){},v:function(p,v,$){function O(ne){return(ne=ne.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ne[1]:"GMT"}$>>>=0;var L=new Date().getFullYear(),K=new Date(L,0,1),U=new Date(L,6,1);L=K.getTimezoneOffset();var ve=U.getTimezoneOffset();ee[p>>>0>>2>>>0]=60*Math.max(L,ve),k[v>>>0>>2>>>0]=+(L!=ve),p=O(K),v=O(U),p=un(p),v=un(v),ve<L?(ee[$>>2>>>0]=p,ee[$+4>>2>>>0]=v):(ee[$>>2>>>0]=v,ee[$+4>>2>>>0]=p)},e:()=>{Ct("")},b:function(p,v,$){return p>>>=0,v=ln(v>>>0,$>>>0),Jt[p].apply(null,v)},i:function(p,v,$){return p>>>=0,v=ln(v>>>0,$>>>0),Jt[p].apply(null,v)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(p,v,$){return v>>>=0,me.copyWithin(p>>>0>>>0,v>>>0,v+($>>>0)>>>0)},u:function(p){p>>>=0;var v=me.length;if(4294901760<p)return!1;for(var $=1;4>=$;$*=2){var O=v*(1+.2/$);O=Math.min(O,p+100663296);var L=Math;O=Math.max(p,O);e:{L=L.min.call(L,4294901760,O+(65536-O%65536)%65536)-z.buffer.byteLength+65535>>>16;try{z.grow(L),Ne();var K=1;break e}catch{}K=void 0}if(K)return!0}return!1},D:function(p,v){p>>>=0,v>>>=0;var $=0;return Pn().forEach(function(O,L){var K=v+$;for(L=ee[p+4*L>>2>>>0]=K,K=0;K<O.length;++K)Z[L++>>0>>>0]=O.charCodeAt(K);Z[L>>0>>>0]=0,$+=O.length+1}),0},E:function(p,v){p>>>=0,v>>>=0;var $=Pn();ee[p>>2>>>0]=$.length;var O=0;return $.forEach(function(L){O+=L.length+1}),ee[v>>2>>>0]=O,0},f:()=>52,k:function(){return 52},t:function(){return 70},j:function(p,v,$,O){v>>>=0,$>>>=0,O>>>=0;for(var L=0,K=0;K<$;K++){var U=ee[v>>2>>>0],ve=ee[v+4>>2>>>0];v+=8;for(var ne=0;ne<ve;ne++){var le=me[U+ne>>>0],se=wo[p];le===0||le===10?((p===1?S:A)(En(se,0)),se.length=0):se.push(le)}L+=ve}return ee[O>>2>>>0]=L,0},F:pe,d:function(p,v,$,O){return pe(p>>>0,v>>>0,$>>>0,O>>>0)}};(function(){function p($){if($=$.exports,$=To($),B=$=Ir($),z=B.M,Ne(),We.unshift(B.N),Ue--,n.monitorRunDependencies&&n.monitorRunDependencies(Ue),Ue==0&&($r!==null&&(clearInterval($r),$r=null),St)){var O=St;St=null,O()}return $}var v={a:Co};if(Ue++,n.monitorRunDependencies&&n.monitorRunDependencies(Ue),n.instantiateWasm)try{return n.instantiateWasm(v,p)}catch($){A("Module.instantiateWasm callback failed with error: "+$),o($)}return ft(v,function($){p($.instance)}).catch(o),{}})(),n._OrtInit=(p,v)=>(n._OrtInit=B.O)(p,v),n._OrtGetLastError=(p,v)=>(n._OrtGetLastError=B.P)(p,v),n._OrtCreateSessionOptions=(p,v,$,O,L,K,U,ve,ne,le)=>(n._OrtCreateSessionOptions=B.Q)(p,v,$,O,L,K,U,ve,ne,le),n._OrtAppendExecutionProvider=(p,v)=>(n._OrtAppendExecutionProvider=B.R)(p,v),n._OrtAddFreeDimensionOverride=(p,v,$)=>(n._OrtAddFreeDimensionOverride=B.S)(p,v,$),n._OrtAddSessionConfigEntry=(p,v,$)=>(n._OrtAddSessionConfigEntry=B.T)(p,v,$),n._OrtReleaseSessionOptions=p=>(n._OrtReleaseSessionOptions=B.U)(p),n._OrtCreateSession=(p,v,$)=>(n._OrtCreateSession=B.V)(p,v,$),n._OrtReleaseSession=p=>(n._OrtReleaseSession=B.W)(p),n._OrtGetInputOutputCount=(p,v,$)=>(n._OrtGetInputOutputCount=B.X)(p,v,$),n._OrtGetInputName=(p,v)=>(n._OrtGetInputName=B.Y)(p,v),n._OrtGetOutputName=(p,v)=>(n._OrtGetOutputName=B.Z)(p,v),n._OrtFree=p=>(n._OrtFree=B._)(p),n._OrtCreateTensor=(p,v,$,O,L,K)=>(n._OrtCreateTensor=B.$)(p,v,$,O,L,K),n._OrtGetTensorData=(p,v,$,O,L)=>(n._OrtGetTensorData=B.aa)(p,v,$,O,L),n._OrtReleaseTensor=p=>(n._OrtReleaseTensor=B.ba)(p),n._OrtCreateRunOptions=(p,v,$,O)=>(n._OrtCreateRunOptions=B.ca)(p,v,$,O),n._OrtAddRunConfigEntry=(p,v,$)=>(n._OrtAddRunConfigEntry=B.da)(p,v,$),n._OrtReleaseRunOptions=p=>(n._OrtReleaseRunOptions=B.ea)(p),n._OrtCreateBinding=p=>(n._OrtCreateBinding=B.fa)(p),n._OrtBindInput=(p,v,$)=>(n._OrtBindInput=B.ga)(p,v,$),n._OrtBindOutput=(p,v,$,O)=>(n._OrtBindOutput=B.ha)(p,v,$,O),n._OrtClearBoundOutputs=p=>(n._OrtClearBoundOutputs=B.ia)(p),n._OrtReleaseBinding=p=>(n._OrtReleaseBinding=B.ja)(p),n._OrtRunWithBinding=(p,v,$,O,L)=>(n._OrtRunWithBinding=B.ka)(p,v,$,O,L),n._OrtRun=(p,v,$,O,L,K,U,ve)=>(n._OrtRun=B.la)(p,v,$,O,L,K,U,ve),n._OrtEndProfiling=p=>(n._OrtEndProfiling=B.ma)(p),n._JsepOutput=(p,v,$)=>(n._JsepOutput=B.na)(p,v,$),n._JsepGetNodeName=p=>(n._JsepGetNodeName=B.oa)(p);var fn=n._malloc=p=>(fn=n._malloc=B.pa)(p),Mn=n._free=p=>(Mn=n._free=B.qa)(p),Ln=p=>(Ln=B.sa)(p),Nn=()=>(Nn=B.ta)(),zn=p=>(zn=B.ua)(p),Fn=p=>(Fn=B.va)(p),Gn=p=>(Gn=B.xa)(p),Vn=()=>(Vn=B.ya)(),pn=p=>(pn=B.za)(p),Vr=()=>(Vr=B.Aa)();n.___start_em_js=924587,n.___stop_em_js=924748;function Ir(p){p=Object.assign({},p);var v=O=>()=>O()>>>0,$=O=>L=>O(L)>>>0;return p.__errno_location=v(p.__errno_location),p.malloc=$(p.malloc),p.stackSave=v(p.stackSave),p.stackAlloc=$(p.stackAlloc),p}n.stackAlloc=Fn,n.stackSave=Nn,n.stackRestore=zn,n.UTF8ToString=tt,n.stringToUTF8=(p,v,$)=>Cn(p,me,v,$),n.lengthBytesUTF8=sn;var Wr;St=function p(){Wr||Wn(),Wr||(St=p)};function Wn(){function p(){if(!Wr&&(Wr=!0,n.calledRun=!0,!G)){if(Nr(We),t(n),n.onRuntimeInitialized&&n.onRuntimeInitialized(),n.postRun)for(typeof n.postRun=="function"&&(n.postRun=[n.postRun]);n.postRun.length;){var v=n.postRun.shift();et.unshift(v)}Nr(et)}}if(!(0<Ue)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;)Je();Nr(Q),0<Ue||(n.setStatus?(n.setStatus("Running..."),setTimeout(function(){setTimeout(function(){n.setStatus("")},1),p()},1)):p())}}if(n.preInit)for(typeof n.preInit=="function"&&(n.preInit=[n.preInit]);0<n.preInit.length;)n.preInit.pop()();return Wn(),e.ready}})();typeof gh=="object"&&typeof As=="object"?As.exports=mh:typeof define=="function"&&define.amd&&define([],()=>mh)});var yh=He(()=>{});var vh=He(()=>{});var xh={};Ar(xh,{cpus:()=>uw});var uw,wh=P(()=>{uw=void 0});var Sh=He(($h,Os)=>{"use strict";var Th=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return Ne.buffer!=Ue.buffer&&Ie(),Ue}function t(){return Ne.buffer!=Ue.buffer&&Ie(),$r}function o(){return Ne.buffer!=Ue.buffer&&Ie(),St}function i(){return Ne.buffer!=Ue.buffer&&Ie(),Ct}function u(){return Ne.buffer!=Ue.buffer&&Ie(),j}function a(){return Ne.buffer!=Ue.buffer&&Ie(),we}var s=e,l,c;s.ready=new Promise((d,m)=>{l=d,c=m}),s.jsepInit=(d,m,x,I,D,F,W,he)=>{s.Qb=d,s.wb=m,s.yb=x,s.jb=I,s.xb=D,s.Ea=F,s.zb=W,s.Ab=he,m=(ce,ue,fe)=>(...Ee)=>{let Be=Qt,N=ue?.();Ee=ce(...Ee);let ye=ue?.();return N!==ye&&(ce=ye,fe(N),ue=fe=null),Qt!=Be?wy():Ee},x=ce=>async(...ue)=>{try{if(s.bb)throw Error("Session already started");let fe=s.bb={Fb:ue[0],errors:[]},Ee=await ce(...ue);if(s.bb!==fe)throw Error("Session mismatch");d.flush();let Be=fe.errors;if(0<Be.length){let N=await Promise.all(Be);if(N=N.filter(ye=>ye),0<N.length)throw Error(N.join(`
`))}return Ee}finally{s.bb=null}},s._OrtRun=x(m(s._OrtRun,()=>s._OrtRun,ce=>s._OrtRun=ce)),s._OrtRunWithBinding=x(m(s._OrtRunWithBinding,()=>s._OrtRunWithBinding,ce=>s._OrtRunWithBinding=ce)),s._OrtBindInput=m(s._OrtBindInput,()=>s._OrtBindInput,ce=>s._OrtBindInput=ce),s.jsepRegisterBuffer=(ce,ue,fe,Ee)=>d.registerBuffer(ce,ue,fe,Ee),s.jsepUnregisterBuffers=ce=>{d.unregisterBuffers(ce)},s.jsepGetBuffer=ce=>d.getBuffer(ce),s.jsepCreateDownloader=(ce,ue,fe)=>d.createDownloader(ce,ue,fe)};var f=Object.assign({},s),h="./this.program",g=(d,m)=>{throw m},y=typeof window=="object",b=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S=s.ENVIRONMENT_IS_PTHREAD||!1,A="";function E(d){return s.locateFile?s.locateFile(d,A):A+d}var R,z,B;if(w){var G=(Ss(),br($s)),Y=(_s(),br(Is));A=b?Y.dirname(A)+"/":__dirname+"/",R=(m,x)=>(m=m.startsWith("file://")?new URL(m):Y.normalize(m),G.readFileSync(m,x?void 0:"utf8")),B=m=>(m=R(m,!0),m.buffer||(m=new Uint8Array(m)),m),z=(m,x,I,D=!0)=>{m=m.startsWith("file://")?new URL(m):Y.normalize(m),G.readFile(m,D?void 0:"utf8",(F,W)=>{F?I(F):x(D?W.buffer:W)})},!s.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(m,x)=>{throw process.exitCode=m,x},s.inspect=()=>"[Emscripten Module object]";let d;try{d=yh()}catch(m){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),m}global.Worker=d.Worker}else(y||b)&&(b?A=self.location.href:typeof document<"u"&&document.currentScript&&(A=document.currentScript.src),typeof r<"u"&&r&&(A=r),A.indexOf("blob:")!==0?A=A.substr(0,A.replace(/[?#].*/,"").lastIndexOf("/")+1):A="",w||(R=d=>{var m=new XMLHttpRequest;return m.open("GET",d,!1),m.send(null),m.responseText},b&&(B=d=>{var m=new XMLHttpRequest;return m.open("GET",d,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),z=(d,m,x)=>{var I=new XMLHttpRequest;I.open("GET",d,!0),I.responseType="arraybuffer",I.onload=()=>{I.status==200||I.status==0&&I.response?m(I.response):x()},I.onerror=x,I.send(null)}));w&&typeof performance>"u"&&(global.performance=vh().performance);var Z=console.log.bind(console),me=console.error.bind(console);w&&(Z=(...d)=>G.writeSync(1,d.join(" ")+`
`),me=(...d)=>G.writeSync(2,d.join(" ")+`
`));var k=s.print||Z,ee=s.printErr||me;Object.assign(s,f),f=null,s.thisProgram&&(h=s.thisProgram),s.quit&&(g=s.quit);var Ve;s.wasmBinary&&(Ve=s.wasmBinary);var ge=s.noExitRuntime||!0;typeof WebAssembly!="object"&&Wt("no native wasm support detected");var Ne,Q,We,et=!1,Je,Ue,$r,St,Ct,j,we;function Ie(){var d=Ne.buffer;s.HEAP8=Ue=new Int8Array(d),s.HEAP16=new Int16Array(d),s.HEAP32=St=new Int32Array(d),s.HEAPU8=$r=new Uint8Array(d),s.HEAPU16=new Uint16Array(d),s.HEAPU32=Ct=new Uint32Array(d),s.HEAPF32=j=new Float32Array(d),s.HEAPF64=we=new Float64Array(d)}var gt=s.INITIAL_MEMORY||16777216;if(5242880<=gt||Wt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+gt+"! (STACK_SIZE=5242880)"),S)Ne=s.wasmMemory;else if(s.wasmMemory)Ne=s.wasmMemory;else if(Ne=new WebAssembly.Memory({initial:gt/65536,maximum:65536,shared:!0}),!(Ne.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ie(),gt=Ne.buffer.byteLength;var It=[],Qe=[],ft=[],xt=0;function Jt(){return ge||0<xt}var Pt=0,Nr=null,zr=null;function On(){Pt++,s.monitorRunDependencies&&s.monitorRunDependencies(Pt)}function vo(){if(Pt--,s.monitorRunDependencies&&s.monitorRunDependencies(Pt),Pt==0&&(Nr!==null&&(clearInterval(Nr),Nr=null),zr)){var d=zr;zr=null,d()}}function Wt(d){throw s.onAbort&&s.onAbort(d),d="Aborted("+d+")",ee(d),et=!0,Je=1,d=new WebAssembly.RuntimeError(d+". Build with -sASSERTIONS for more info."),c(d),d}function En(d){return d.startsWith("data:application/octet-stream;base64,")}var tt;tt="ort-wasm-simd-threaded.wasm",En(tt)||(tt=E(tt));function sn(d){if(d==tt&&Ve)return new Uint8Array(Ve);if(B)return B(d);throw"both async and sync fetching of the wasm failed"}function Cn(d){if(!Ve&&(y||b)){if(typeof fetch=="function"&&!d.startsWith("file://"))return fetch(d,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at '"+d+"'";return m.arrayBuffer()}).catch(()=>sn(d));if(z)return new Promise((m,x)=>{z(d,I=>m(new Uint8Array(I)),x)})}return Promise.resolve().then(()=>sn(d))}function pr(d,m,x){return Cn(d).then(I=>WebAssembly.instantiate(I,m)).then(I=>I).then(x,I=>{ee("failed to asynchronously prepare wasm: "+I),Wt(I)})}function xo(d,m){var x=tt;return Ve||typeof WebAssembly.instantiateStreaming!="function"||En(x)||x.startsWith("file://")||w||typeof fetch!="function"?pr(x,d,m):fetch(x,{credentials:"same-origin"}).then(I=>WebAssembly.instantiateStreaming(I,d).then(m,function(D){return ee("wasm streaming compile failed: "+D),ee("falling back to ArrayBuffer instantiation"),pr(x,d,m)}))}var hr,un={914988:d=>{s.Ea("Abs",d,void 0)},915039:d=>{s.Ea("Neg",d,void 0)},915090:d=>{s.Ea("Floor",d,void 0)},915143:d=>{s.Ea("Ceil",d,void 0)},915195:d=>{s.Ea("Reciprocal",d,void 0)},915253:d=>{s.Ea("Sqrt",d,void 0)},915305:d=>{s.Ea("Exp",d,void 0)},915356:d=>{s.Ea("Erf",d,void 0)},915407:d=>{s.Ea("Sigmoid",d,void 0)},915462:d=>{s.Ea("Log",d,void 0)},915513:d=>{s.Ea("Sin",d,void 0)},915564:d=>{s.Ea("Cos",d,void 0)},915615:d=>{s.Ea("Tan",d,void 0)},915666:d=>{s.Ea("Asin",d,void 0)},915718:d=>{s.Ea("Acos",d,void 0)},915770:d=>{s.Ea("Atan",d,void 0)},915822:d=>{s.Ea("Sinh",d,void 0)},915874:d=>{s.Ea("Cosh",d,void 0)},915926:d=>{s.Ea("Asinh",d,void 0)},915979:d=>{s.Ea("Acosh",d,void 0)},916032:d=>{s.Ea("Atanh",d,void 0)},916085:d=>{s.Ea("Tanh",d,void 0)},916137:d=>{s.Ea("Not",d,void 0)},916188:(d,m,x)=>{s.Ea("ClipV10",d,{min:m,max:x})},916260:d=>{s.Ea("Clip",d,void 0)},916312:(d,m)=>{s.Ea("Elu",d,{alpha:m})},916370:d=>{s.Ea("Relu",d,void 0)},916422:(d,m)=>{s.Ea("LeakyRelu",d,{alpha:m})},916486:(d,m)=>{s.Ea("ThresholdedRelu",d,{alpha:m})},916556:(d,m)=>{s.Ea("Cast",d,{to:m})},916614:d=>{s.Ea("Add",d,void 0)},916665:d=>{s.Ea("Sub",d,void 0)},916716:d=>{s.Ea("Mul",d,void 0)},916767:d=>{s.Ea("Div",d,void 0)},916818:d=>{s.Ea("Pow",d,void 0)},916869:d=>{s.Ea("Equal",d,void 0)},916922:d=>{s.Ea("Greater",d,void 0)},916977:d=>{s.Ea("GreaterOrEqual",d,void 0)},917039:d=>{s.Ea("Less",d,void 0)},917091:d=>{s.Ea("LessOrEqual",d,void 0)},917150:(d,m,x,I,D)=>{s.Ea("ReduceMean",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},917314:(d,m,x,I,D)=>{s.Ea("ReduceMax",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},917477:(d,m,x,I,D)=>{s.Ea("ReduceMin",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},917640:(d,m,x,I,D)=>{s.Ea("ReduceProd",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},917804:(d,m,x,I,D)=>{s.Ea("ReduceSum",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},917967:(d,m,x,I,D)=>{s.Ea("ReduceL1",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},918129:(d,m,x,I,D)=>{s.Ea("ReduceL2",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},918291:(d,m,x,I,D)=>{s.Ea("ReduceLogSum",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},918457:(d,m,x,I,D)=>{s.Ea("ReduceSumSquare",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},918626:(d,m,x,I,D)=>{s.Ea("ReduceLogSumExp",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},918795:d=>{s.Ea("Where",d,void 0)},918848:(d,m,x)=>{s.Ea("Transpose",d,{perm:m?Array.from(o().subarray(x>>>0,x+m>>>0)):[]})},918961:(d,m,x,I,D,F,W,he,ce,ue,fe,Ee,Be,N,ye)=>{s.Ea("ConvTranspose",d,{format:ce?"NHWC":"NCHW",autoPad:m,dilations:[x],group:I,kernel_shape:[D],pads:[F,W],strides:[he],wIsConst:()=>!!n()[ue>>>0],outputPadding:fe?Array.from(o().subarray(Ee>>>0,Ee+fe>>>0)):[],outputShape:Be?Array.from(o().subarray(N>>>0,N+Be>>>0)):[],activation:bt(ye)})},919375:(d,m,x,I,D,F,W,he,ce,ue,fe,Ee,Be,N)=>{s.Ea("ConvTranspose",d,{format:he?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(x>>>0,x+2>>>0)),group:I,kernelShape:Array.from(o().subarray(D>>>0,D+2>>>0)),pads:Array.from(o().subarray(F>>>0,F+4>>>0)),strides:Array.from(o().subarray(W>>>0,W+2>>>0)),wIsConst:()=>!!n()[ce>>>0],outputPadding:0<ue?Array.from(o().subarray(fe>>>0,fe+ue>>>0)):[],outputShape:0<Ee?Array.from(o().subarray(Be>>>0,Be+Ee>>>0)):[],activation:bt(N)})},919932:(d,m,x,I,D,F,W,he,ce,ue,fe,Ee,Be,N,ye)=>{s.Ea("ConvTranspose",d,{format:ce?"NHWC":"NCHW",autoPad:m,dilations:[x],group:I,kernel_shape:[D],pads:[F,W],strides:[he],wIsConst:()=>!!n()[ue>>>0],outputPadding:fe?Array.from(o().subarray(Ee>>>0,Ee+fe>>>0)):[],outputShape:Be?Array.from(o().subarray(N>>>0,N+Be>>>0)):[],activation:bt(ye)})},920346:(d,m,x,I,D,F,W,he,ce,ue,fe,Ee,Be,N)=>{s.Ea("ConvTranspose",d,{format:he?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(x>>>0,x+2>>>0)),group:I,kernelShape:Array.from(o().subarray(D>>>0,D+2>>>0)),pads:Array.from(o().subarray(F>>>0,F+4>>>0)),strides:Array.from(o().subarray(W>>>0,W+2>>>0)),wIsConst:()=>!!n()[ce>>>0],outputPadding:0<ue?Array.from(o().subarray(fe>>>0,fe+ue>>>0)):[],outputShape:0<Ee?Array.from(o().subarray(Be>>>0,Be+Ee>>>0)):[],activation:bt(N)})},920903:(d,m)=>{s.Ea("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},920994:(d,m,x,I,D,F,W,he,ce,ue,fe,Ee,Be,N,ye,De)=>{s.Ea("AveragePool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:D,dilations:[F,W],kernel_shape:[he,ce],pads:[ue,fe,Ee,Be],strides:[N,ye]})},921278:(d,m)=>{s.Ea("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},921369:(d,m,x,I,D,F,W,he,ce,ue,fe,Ee,Be,N,ye,De)=>{s.Ea("AveragePool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:D,dilations:[F,W],kernel_shape:[he,ce],pads:[ue,fe,Ee,Be],strides:[N,ye]})},921653:(d,m)=>{s.Ea("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},921740:(d,m,x,I,D,F,W,he,ce,ue,fe,Ee,Be,N,ye,De)=>{s.Ea("MaxPool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:D,dilations:[F,W],kernel_shape:[he,ce],pads:[ue,fe,Ee,Be],strides:[N,ye]})},922020:(d,m)=>{s.Ea("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},922107:(d,m,x,I,D,F,W,he,ce,ue,fe,Ee,Be,N,ye,De)=>{s.Ea("MaxPool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:D,dilations:[F,W],kernel_shape:[he,ce],pads:[ue,fe,Ee,Be],strides:[N,ye]})},922387:(d,m,x,I,D)=>{s.Ea("Gemm",d,{alpha:m,beta:x,transA:I,transB:D})},922491:d=>{s.Ea("MatMul",d,void 0)},922545:(d,m,x,I)=>{s.Ea("ArgMax",d,{keepDims:!!m,selectLastIndex:!!x,axis:I})},922653:(d,m,x,I)=>{s.Ea("ArgMin",d,{keepDims:!!m,selectLastIndex:!!x,axis:I})},922761:(d,m)=>{s.Ea("Softmax",d,{axis:m})},922824:(d,m)=>{s.Ea("Concat",d,{axis:m})},922884:(d,m,x,I,D)=>{s.Ea("Split",d,{axis:m,numOutputs:x,splitSizes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},923029:d=>{s.Ea("Expand",d,void 0)},923083:(d,m)=>{s.Ea("Gather",d,{axis:Number(m)})},923154:(d,m)=>{s.Ea("GatherElements",d,{axis:Number(m)})},923233:(d,m,x,I,D,F,W,he,ce,ue,fe)=>{s.Ea("Resize",d,{antialias:m,axes:x?Array.from(o().subarray(I>>>0,I+x>>>0)):[],coordinateTransformMode:bt(D),cubicCoeffA:F,excludeOutside:W,extrapolationValue:he,keepAspectRatioPolicy:bt(ce),mode:bt(ue),nearestMode:bt(fe)})},923584:(d,m,x,I,D,F,W)=>{s.Ea("Slice",d,{starts:m?Array.from(o().subarray(x>>>0,x+m>>>0)):[],ends:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[],axes:F?Array.from(o().subarray(W>>>0,W+F>>>0)):[]})},923815:d=>{s.Ea("Tile",d,void 0)},923867:(d,m,x)=>{s.Ea("LayerNormalization",d,{axis:Number(m),epsilon:Number(x)})},923974:(d,m,x)=>{s.Ea("InstanceNormalization",d,{epsilon:m,format:x?"NHWC":"NCHW"})},924088:(d,m,x)=>{s.Ea("InstanceNormalization",d,{epsilon:m,format:x?"NHWC":"NCHW"})},924202:d=>{s.Ea("Range",d,void 0)},924255:(d,m)=>{s.Ea("Einsum",d,{equation:bt(m)})},924336:(d,m,x,I,D)=>{s.Ea("Pad",d,{mode:m,value:x,pads:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},924468:d=>{s.Ea("Gelu",d,void 0)},924520:d=>{s.Ea("BiasAdd",d,void 0)},924575:d=>{s.Ea("BiasSplitGelu",d,void 0)},924636:(d,m)=>{s.Ea("SkipLayerNormalization",d,{epsilon:m})},924717:(d,m,x,I,D,F,W,he,ce,ue,fe,Ee,Be)=>{s.Ea("Conv",d,{format:ce?"NHWC":"NCHW",auto_pad:m,dilations:[x],group:I,kernel_shape:[D],pads:F?Array.from(o().subarray(W>>>0,W+F>>>0)):[],strides:[he],w_is_const:()=>!!n()[ue>>>0],activation:bt(fe),activation_params:Ee?Array.from(u().subarray(Be>>>0,Be+Ee>>>0)):[]})},925098:(d,m,x,I,D,F,W,he,ce,ue,fe,Ee,Be,N,ye,De)=>{s.Ea("Conv",d,{format:Ee?"NHWC":"NCHW",auto_pad:m,dilations:[x,I],group:D,kernel_shape:[F,W],pads:he?Array.from(o().subarray(ce>>>0,ce+he>>>0)):[],strides:[ue,fe],w_is_const:()=>!!n()[Be>>>0],activation:bt(N),activation_params:ye?Array.from(u().subarray(De>>>0,De+ye>>>0)):[]})},925500:d=>{s.zb(d)},925534:(d,m)=>s.Ab(d,m,s.bb.Fb,s.bb.errors),925646:d=>s.wb(d),925679:d=>s.yb(d),925711:(d,m,x)=>{s.jb(d,m,x,!0)},925750:(d,m,x)=>{s.jb(d,m,x)}};function Sr(d){this.name="ExitStatus",this.message=`Program terminated with exit(${d})`,this.status=d}function ln(d){d.terminate(),d.onmessage=()=>{}}function cn(d){(d=pe.Qa[d])||Wt(),pe.Eb(d)}function Pn(d){var m=pe.tb();if(!m)return 6;pe.Ya.push(m),pe.Qa[d.Xa]=m,m.Xa=d.Xa;var x={cmd:"run",start_routine:d.Gb,arg:d.rb,pthread_ptr:d.Xa};return w&&m.unref(),m.postMessage(x,d.Mb),0}var dn=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,wo=(d,m,x)=>{m>>>=0;var I=m+x;for(x=m;d[x]&&!(x>=I);)++x;if(16<x-m&&d.buffer&&dn)return dn.decode(d.buffer instanceof SharedArrayBuffer?d.slice(m,x):d.subarray(m,x));for(I="";m<x;){var D=d[m++];if(D&128){var F=d[m++]&63;if((D&224)==192)I+=String.fromCharCode((D&31)<<6|F);else{var W=d[m++]&63;D=(D&240)==224?(D&15)<<12|F<<6|W:(D&7)<<18|F<<12|W<<6|d[m++]&63,65536>D?I+=String.fromCharCode(D):(D-=65536,I+=String.fromCharCode(55296|D>>10,56320|D&1023))}}else I+=String.fromCharCode(D)}return I},bt=(d,m)=>(d>>>=0)?wo(t(),d,m):"";function Dn(d){if(S)return U(1,1,d);Je=d,Jt()||(pe.Hb(),s.onExit&&s.onExit(d),et=!0),g(d,new Sr(d))}var kn=d=>{if(Je=d,S)throw To(d),"unwind";Dn(d)},pe={ab:[],Ya:[],mb:[],Qa:{},gb:function(){S?pe.vb():pe.ub()},ub:function(){It.unshift(()=>{On(),pe.Bb(()=>vo())})},vb:function(){pe.receiveObjectTransfer=pe.Db,pe.threadInitTLS=pe.lb,pe.setExitStatus=pe.kb,ge=!1},kb:function(d){Je=d},Sb:["$terminateWorker"],Hb:function(){for(var d of pe.Ya)ln(d);for(d of pe.ab)ln(d);pe.ab=[],pe.Ya=[],pe.Qa=[]},Eb:function(d){var m=d.Xa;delete pe.Qa[m],pe.ab.push(d),pe.Ya.splice(pe.Ya.indexOf(d),1),d.Xa=0,da(m)},Db:function(){},lb:function(){pe.mb.forEach(d=>d())},Cb:d=>new Promise(m=>{d.onmessage=F=>{F=F.data;var W=F.cmd;if(F.targetThread&&F.targetThread!=ko()){var he=pe.Qa[F.Rb];he?he.postMessage(F,F.transferList):ee('Internal error! Worker sent a message "'+W+'" to target pthread '+F.targetThread+", but that thread no longer exists!")}else W==="checkMailbox"?Vr():W==="spawnThread"?Pn(F):W==="cleanupThread"?cn(F.thread):W==="killThread"?(F=F.thread,W=pe.Qa[F],delete pe.Qa[F],ln(W),da(F),pe.Ya.splice(pe.Ya.indexOf(W),1),W.Xa=0):W==="cancelThread"?pe.Qa[F.thread].postMessage({cmd:"cancel"}):W==="loaded"?(d.loaded=!0,m(d)):W==="alert"?alert("Thread "+F.threadId+": "+F.text):F.target==="setimmediate"?d.postMessage(F):W==="callHandler"?s[F.handler](...F.args):W&&ee("worker sent an unknown command "+W)},d.onerror=F=>{throw ee("worker sent an error! "+F.filename+":"+F.lineno+": "+F.message),F},w&&(d.on("message",function(F){d.onmessage({data:F})}),d.on("error",function(F){d.onerror(F)}));var x=[],I=["onExit","onAbort","print","printErr"],D;for(D of I)s.hasOwnProperty(D)&&x.push(D);d.postMessage({cmd:"load",handlers:x,urlOrBlob:s.mainScriptUrlOrBlob||r,wasmMemory:Ne,wasmModule:We})}),Bb:function(d){d()},qb:function(){var d=E("ort-wasm-simd-threaded.worker.js");d=new Worker(d),pe.ab.push(d)},tb:function(){return pe.ab.length==0&&(pe.qb(),pe.Cb(pe.ab[0])),pe.ab.pop()}};s.PThread=pe;var mr=d=>{for(;0<d.length;)d.shift()(s)};s.establishStackSpace=function(){var d=ko(),m=o()[d+52>>2>>>0];d=o()[d+56>>2>>>0],Au(m,m-d),Ro(m)};function To(d){if(S)return U(2,0,d);kn(d)}s.invokeEntryPoint=function(d,m){d=Ou.apply(null,[d,m]),Jt()?pe.kb(d):fa(d)};function Zt(d){this.fb=d-24,this.pb=function(m){i()[this.fb+4>>2>>>0]=m},this.ob=function(m){i()[this.fb+8>>2>>>0]=m},this.gb=function(m,x){this.nb(),this.pb(m),this.ob(x)},this.nb=function(){i()[this.fb+16>>2>>>0]=0}}var Dt=0,$o=0;function Fr(d,m,x,I){return S?U(3,1,d,m,x,I):Rn(d,m,x,I)}function Rn(d,m,x,I){if(d>>>=0,m>>>=0,x>>>=0,I>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var D=[];return S&&D.length===0?Fr(d,m,x,I):(d={Gb:x,Xa:d,rb:I,Mb:D},S?(d.Ob="spawnThread",postMessage(d,D),0):Pn(d))}function Bn(d,m,x){return S?U(4,1,d,m,x):0}function So(d,m){if(S)return U(5,1,d,m)}var Gr=d=>{for(var m=0,x=0;x<d.length;++x){var I=d.charCodeAt(x);127>=I?m++:2047>=I?m+=2:55296<=I&&57343>=I?(m+=4,++x):m+=3}return m},Io=(d,m,x,I)=>{if(x>>>=0,!(0<I))return 0;var D=x;I=x+I-1;for(var F=0;F<d.length;++F){var W=d.charCodeAt(F);if(55296<=W&&57343>=W){var he=d.charCodeAt(++F);W=65536+((W&1023)<<10)|he&1023}if(127>=W){if(x>=I)break;m[x++>>>0]=W}else{if(2047>=W){if(x+1>=I)break;m[x++>>>0]=192|W>>6}else{if(65535>=W){if(x+2>=I)break;m[x++>>>0]=224|W>>12}else{if(x+3>=I)break;m[x++>>>0]=240|W>>18,m[x++>>>0]=128|W>>12&63}m[x++>>>0]=128|W>>6&63}m[x++>>>0]=128|W&63}}return m[x>>>0]=0,x-D},_o=(d,m,x)=>Io(d,t(),m,x);function Ao(d,m){if(S)return U(6,1,d,m)}function Oo(d,m,x){if(S)return U(7,1,d,m,x)}function Eo(d,m,x){return S?U(8,1,d,m,x):0}function Co(d,m){if(S)return U(9,1,d,m)}function fn(d,m,x){if(S)return U(10,1,d,m,x)}function Mn(d,m,x,I){if(S)return U(11,1,d,m,x,I)}function Ln(d,m,x,I){if(S)return U(12,1,d,m,x,I)}function Nn(d,m,x,I){if(S)return U(13,1,d,m,x,I)}function zn(d){if(S)return U(14,1,d)}function Fn(d,m){if(S)return U(15,1,d,m)}function Gn(d,m,x){if(S)return U(16,1,d,m,x)}var Vn=d=>{if(!et)try{if(d(),!Jt())try{S?fa(Je):kn(Je)}catch(m){m instanceof Sr||m=="unwind"||g(1,m)}}catch(m){m instanceof Sr||m=="unwind"||g(1,m)}};function pn(d){d>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(o(),d>>2,d).value.then(Vr),d+=128,Atomics.store(o(),d>>2,1))}s.__emscripten_thread_mailbox_await=pn;function Vr(){var d=ko();d&&(pn(d),Vn(()=>Iu()))}s.checkMailbox=Vr;var Ir=d=>d%4===0&&(d%100!==0||d%400===0),Wr=[0,31,60,91,121,152,182,213,244,274,305,335],Wn=[0,31,59,90,120,151,181,212,243,273,304,334];function p(d,m,x,I,D,F,W,he){return S?U(17,1,d,m,x,I,D,F,W,he):-52}function v(d,m,x,I,D,F,W){if(S)return U(18,1,d,m,x,I,D,F,W)}var $=d=>{var m=Gr(d)+1,x=ca(m);return x&&_o(d,x,m),x},O=[],L=(d,m)=>{O.length=0;var x;for(m>>=2;x=t()[d++>>>0];)m+=x!=105&m,O.push(x==105?o()[m>>>0]:a()[m++>>>1]),++m;return O},K=d=>{var m=pa();return d=d(),Ro(m),d};function U(d,m){var x=arguments.length-2,I=arguments;return K(()=>{for(var D=ha(8*x),F=D>>3,W=0;W<x;W++){var he=I[2+W];a()[F+W>>>0]=he}return Su(d,x,D,m)})}var ve=[],ne={},le=()=>{if(!se){var d={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"},m;for(m in ne)ne[m]===void 0?delete d[m]:d[m]=ne[m];var x=[];for(m in d)x.push(`${m}=${d[m]}`);se=x}return se},se;function Se(d,m){if(S)return U(19,1,d,m);d>>>=0,m>>>=0;var x=0;return le().forEach(function(I,D){var F=m+x;for(D=i()[d+4*D>>2>>>0]=F,F=0;F<I.length;++F)n()[D++>>0>>>0]=I.charCodeAt(F);n()[D>>0>>>0]=0,x+=I.length+1}),0}function Oe(d,m){if(S)return U(20,1,d,m);d>>>=0,m>>>=0;var x=le();i()[d>>2>>>0]=x.length;var I=0;return x.forEach(function(D){I+=D.length+1}),i()[m>>2>>>0]=I,0}function M(d){return S?U(21,1,d):52}function de(d,m,x,I){return S?U(22,1,d,m,x,I):52}function Ae(d,m,x,I,D){return S?U(23,1,d,m,x,I,D):70}var gr=[null,[],[]];function Un(d,m,x,I){if(S)return U(24,1,d,m,x,I);m>>>=0,x>>>=0,I>>>=0;for(var D=0,F=0;F<x;F++){var W=i()[m>>2>>>0],he=i()[m+4>>2>>>0];m+=8;for(var ce=0;ce<he;ce++){var ue=t()[W+ce>>>0],fe=gr[d];ue===0||ue===10?((d===1?k:ee)(wo(fe,0)),fe.length=0):fe.push(ue)}D+=he}return i()[I>>2>>>0]=D,0}var gu=[31,29,31,30,31,30,31,31,30,31,30,31],bu=[31,28,31,30,31,30,31,31,30,31,30,31];function gy(d){var m=Array(Gr(d)+1);return Io(d,m,0,m.length),m}var by=(d,m)=>{n().set(d,m>>>0)};function yu(d,m,x,I){function D(N,ye,De){for(N=typeof N=="number"?N.toString():N||"";N.length<ye;)N=De[0]+N;return N}function F(N,ye){return D(N,ye,"0")}function W(N,ye){function De(Ru){return 0>Ru?-1:0<Ru?1:0}var Ur;return(Ur=De(N.getFullYear()-ye.getFullYear()))===0&&(Ur=De(N.getMonth()-ye.getMonth()))===0&&(Ur=De(N.getDate()-ye.getDate())),Ur}function he(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function ce(N){var ye=N.Za;for(N=new Date(new Date(N.$a+1900,0,1).getTime());0<ye;){var De=N.getMonth(),Ur=(Ir(N.getFullYear())?gu:bu)[De];if(ye>Ur-N.getDate())ye-=Ur-N.getDate()+1,N.setDate(1),11>De?N.setMonth(De+1):(N.setMonth(0),N.setFullYear(N.getFullYear()+1));else{N.setDate(N.getDate()+ye);break}}return De=new Date(N.getFullYear()+1,0,4),ye=he(new Date(N.getFullYear(),0,4)),De=he(De),0>=W(ye,N)?0>=W(De,N)?N.getFullYear()+1:N.getFullYear():N.getFullYear()-1}d>>>=0,m>>>=0,x>>>=0,I>>>=0;var ue=o()[I+40>>2>>>0];I={Kb:o()[I>>2>>>0],Jb:o()[I+4>>2>>>0],cb:o()[I+8>>2>>>0],ib:o()[I+12>>2>>>0],eb:o()[I+16>>2>>>0],$a:o()[I+20>>2>>>0],Wa:o()[I+24>>2>>>0],Za:o()[I+28>>2>>>0],Tb:o()[I+32>>2>>>0],Ib:o()[I+36>>2>>>0],Lb:ue?bt(ue):""},x=bt(x),ue={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var fe in ue)x=x.replace(new RegExp(fe,"g"),ue[fe]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Be="January February March April May June July August September October November December".split(" ");ue={"%a":N=>Ee[N.Wa].substring(0,3),"%A":N=>Ee[N.Wa],"%b":N=>Be[N.eb].substring(0,3),"%B":N=>Be[N.eb],"%C":N=>F((N.$a+1900)/100|0,2),"%d":N=>F(N.ib,2),"%e":N=>D(N.ib,2," "),"%g":N=>ce(N).toString().substring(2),"%G":N=>ce(N),"%H":N=>F(N.cb,2),"%I":N=>(N=N.cb,N==0?N=12:12<N&&(N-=12),F(N,2)),"%j":N=>{for(var ye=0,De=0;De<=N.eb-1;ye+=(Ir(N.$a+1900)?gu:bu)[De++]);return F(N.ib+ye,3)},"%m":N=>F(N.eb+1,2),"%M":N=>F(N.Jb,2),"%n":()=>`
`,"%p":N=>0<=N.cb&&12>N.cb?"AM":"PM","%S":N=>F(N.Kb,2),"%t":()=>"	","%u":N=>N.Wa||7,"%U":N=>F(Math.floor((N.Za+7-N.Wa)/7),2),"%V":N=>{var ye=Math.floor((N.Za+7-(N.Wa+6)%7)/7);if(2>=(N.Wa+371-N.Za-2)%7&&ye++,ye)ye==53&&(De=(N.Wa+371-N.Za)%7,De==4||De==3&&Ir(N.$a)||(ye=1));else{ye=52;var De=(N.Wa+7-N.Za-1)%7;(De==4||De==5&&Ir(N.$a%400-1))&&ye++}return F(ye,2)},"%w":N=>N.Wa,"%W":N=>F(Math.floor((N.Za+7-(N.Wa+6)%7)/7),2),"%y":N=>(N.$a+1900).toString().substring(2),"%Y":N=>N.$a+1900,"%z":N=>{N=N.Ib;var ye=0<=N;return N=Math.abs(N)/60,(ye?"+":"-")+("0000"+(N/60*100+N%60)).slice(-4)},"%Z":N=>N.Lb,"%%":()=>"%"},x=x.replace(/%%/g,"\0\0");for(fe in ue)x.includes(fe)&&(x=x.replace(new RegExp(fe,"g"),ue[fe](I)));return x=x.replace(/\0\0/g,"%"),fe=gy(x),fe.length>m?0:(by(fe,d),fe.length-1)}function Po(d){try{d()}catch(m){Wt(m)}}function yy(d){var m={},x;for(x in d)(function(I){var D=d[I];m[I]=typeof D=="function"?function(){Do.push(I);try{return D.apply(null,arguments)}finally{et||(Do.pop()===I||Wt(),Qt&&_r===1&&Do.length===0&&(_r=0,xt+=1,Po(Cu),typeof Fibers<"u"&&Fibers.Ub()))}}:D})(x);return m}var _r=0,Qt=null,vu=0,Do=[],xu={},wu={},vy=0,la=null,xy=[];function wy(){return new Promise((d,m)=>{la={resolve:d,reject:m}})}function Ty(){var d=ca(65548),m=d+12;i()[d>>2>>>0]=m,i()[d+4>>2>>>0]=m+65536,m=Do[0];var x=xu[m];return x===void 0&&(x=vy++,xu[m]=x,wu[x]=m),m=x,o()[d+8>>2>>>0]=m,d}function $y(){var d=o()[Qt+8>>2>>>0];return d=Q[wu[d]],--xt,d()}function Sy(d){if(!et){if(_r===0){var m=!1,x=!1;d((I=0)=>{if(!et&&(vu=I,m=!0,x)){_r=2,Po(()=>Pu(Qt)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),I=!1;try{var D=$y()}catch(he){D=he,I=!0}var F=!1;if(!Qt){var W=la;W&&(la=null,(I?W.reject:W.resolve)(D),F=!0)}if(I&&!F)throw D}}),x=!0,m||(_r=1,Qt=Ty(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),Po(()=>Eu(Qt)))}else _r===2?(_r=0,Po(Du),Tu(Qt),Qt=null,xy.forEach(I=>Vn(I))):Wt(`invalid state: ${_r}`);return vu}}function Iy(d){return Sy(m=>{d().then(m)})}pe.gb();var _y=[null,Dn,To,Fr,Bn,So,Ao,Oo,Eo,Co,fn,Mn,Ln,Nn,zn,Fn,Gn,p,v,Se,Oe,M,de,Ae,Un],Ay={r:function(d,m,x){return Iy(async()=>{await s.xb(d,m,x)})},b:function(d,m,x){throw d>>>=0,new Zt(d).gb(m>>>0,x>>>0),Dt=d,$o++,Dt},O:function(d){$u(d>>>0,!b,1,!y,131072,!1),pe.lb()},l:function(d){d>>>=0,S?postMessage({cmd:"cleanupThread",thread:d}):cn(d)},I:Rn,i:Bn,U:So,E:Ao,G:Oo,V:Eo,S:Co,K:fn,R:Mn,p:Ln,F:Nn,C:zn,T:Fn,D:Gn,q:()=>!0,A:function(d,m){d>>>=0,d==m>>>0?setTimeout(()=>Vr()):S?postMessage({targetThread:d,cmd:"checkMailbox"}):(d=pe.Qa[d])&&d.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:pn,X:function(d){w&&pe.Qa[d>>>0].ref()},u:function(d,m,x){d=m+2097152>>>0<4194305-!!d?(d>>>0)+4294967296*m:NaN,x>>>=0,d=new Date(1e3*d),o()[x>>2>>>0]=d.getUTCSeconds(),o()[x+4>>2>>>0]=d.getUTCMinutes(),o()[x+8>>2>>>0]=d.getUTCHours(),o()[x+12>>2>>>0]=d.getUTCDate(),o()[x+16>>2>>>0]=d.getUTCMonth(),o()[x+20>>2>>>0]=d.getUTCFullYear()-1900,o()[x+24>>2>>>0]=d.getUTCDay(),d=(d.getTime()-Date.UTC(d.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[x+28>>2>>>0]=d},v:function(d,m,x){d=m+2097152>>>0<4194305-!!d?(d>>>0)+4294967296*m:NaN,x>>>=0,d=new Date(1e3*d),o()[x>>2>>>0]=d.getSeconds(),o()[x+4>>2>>>0]=d.getMinutes(),o()[x+8>>2>>>0]=d.getHours(),o()[x+12>>2>>>0]=d.getDate(),o()[x+16>>2>>>0]=d.getMonth(),o()[x+20>>2>>>0]=d.getFullYear()-1900,o()[x+24>>2>>>0]=d.getDay(),m=(Ir(d.getFullYear())?Wr:Wn)[d.getMonth()]+d.getDate()-1|0,o()[x+28>>2>>>0]=m,o()[x+36>>2>>>0]=-(60*d.getTimezoneOffset()),m=new Date(d.getFullYear(),6,1).getTimezoneOffset();var I=new Date(d.getFullYear(),0,1).getTimezoneOffset();d=(m!=I&&d.getTimezoneOffset()==Math.min(I,m))|0,o()[x+32>>2>>>0]=d},w:function(d){d>>>=0;var m=new Date(o()[d+20>>2>>>0]+1900,o()[d+16>>2>>>0],o()[d+12>>2>>>0],o()[d+8>>2>>>0],o()[d+4>>2>>>0],o()[d>>2>>>0],0),x=o()[d+32>>2>>>0],I=m.getTimezoneOffset(),D=new Date(m.getFullYear(),6,1).getTimezoneOffset(),F=new Date(m.getFullYear(),0,1).getTimezoneOffset(),W=Math.min(F,D);return 0>x?o()[d+32>>2>>>0]=+(D!=F&&W==I):0<x!=(W==I)&&(D=Math.max(F,D),m.setTime(m.getTime()+6e4*((0<x?W:D)-I))),o()[d+24>>2>>>0]=m.getDay(),x=(Ir(m.getFullYear())?Wr:Wn)[m.getMonth()]+m.getDate()-1|0,o()[d+28>>2>>>0]=x,o()[d>>2>>>0]=m.getSeconds(),o()[d+4>>2>>>0]=m.getMinutes(),o()[d+8>>2>>>0]=m.getHours(),o()[d+12>>2>>>0]=m.getDate(),o()[d+16>>2>>>0]=m.getMonth(),o()[d+20>>2>>>0]=m.getYear(),d=m.getTime()/1e3,_u((hr=d,1<=+Math.abs(hr)?0<hr?+Math.floor(hr/4294967296)>>>0:~~+Math.ceil((hr-+(~~hr>>>0))/4294967296)>>>0:0)),d>>>0},s:p,t:v,z:function(d,m,x){function I(ue){return(ue=ue.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ue[1]:"GMT"}d>>>=0,m>>>=0,x>>>=0;var D=new Date().getFullYear(),F=new Date(D,0,1),W=new Date(D,6,1);D=F.getTimezoneOffset();var he=W.getTimezoneOffset(),ce=Math.max(D,he);i()[d>>2>>>0]=60*ce,o()[m>>2>>>0]=+(D!=he),d=I(F),m=I(W),d=$(d),m=$(m),he<D?(i()[x>>2>>>0]=d,i()[x+4>>2>>>0]=m):(i()[x>>2>>>0]=m,i()[x+4>>2>>>0]=d)},d:()=>{Wt("")},c:function(d,m,x){return d>>>=0,m=L(m>>>0,x>>>0),un[d].apply(null,m)},k:function(d,m,x){return d>>>=0,m=L(m>>>0,x>>>0),un[d].apply(null,m)},m:function(){},j:function(){return Date.now()},W:()=>{throw xt+=1,"unwind"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return w?(wh(),br(xh)).cpus().length:navigator.hardwareConcurrency},L:function(d,m,x,I){for(pe.Pb=m>>>0,ve.length=x,m=I>>>0>>3,I=0;I<x;I++)ve[I]=a()[m+I>>>0];return(0>d?un[-d-1]:_y[d]).apply(null,ve)},y:function(d){d>>>=0;var m=t().length;if(d<=m||4294901760<d)return!1;for(var x=1;4>=x;x*=2){var I=m*(1+.2/x);I=Math.min(I,d+100663296);var D=Math;I=Math.max(d,I);e:{D=D.min.call(D,4294901760,I+(65536-I%65536)%65536)-Ne.buffer.byteLength+65535>>>16;try{Ne.grow(D),Ie();var F=1;break e}catch{}F=void 0}if(F)return!0}return!1},P:Se,Q:Oe,H:kn,h:M,o:de,x:Ae,n:Un,a:Ne||s.wasmMemory,J:yu,e:function(d,m,x,I){return yu(d>>>0,m>>>0,x>>>0,I>>>0)}};(function(){function d(x,I){return x=x.exports,x=yy(x),Q=x=Oy(x),pe.mb.push(Q.Da),Qe.unshift(Q.Y),We=I,vo(),x}var m={a:Ay};if(On(),s.instantiateWasm)try{return s.instantiateWasm(m,d)}catch(x){ee("Module.instantiateWasm callback failed with error: "+x),c(x)}return xo(m,function(x){d(x.instance,x.module)}).catch(c),{}})(),s._OrtInit=(d,m)=>(s._OrtInit=Q.Z)(d,m),s._OrtGetLastError=(d,m)=>(s._OrtGetLastError=Q._)(d,m),s._OrtCreateSessionOptions=(d,m,x,I,D,F,W,he,ce,ue)=>(s._OrtCreateSessionOptions=Q.$)(d,m,x,I,D,F,W,he,ce,ue),s._OrtAppendExecutionProvider=(d,m)=>(s._OrtAppendExecutionProvider=Q.aa)(d,m),s._OrtAddFreeDimensionOverride=(d,m,x)=>(s._OrtAddFreeDimensionOverride=Q.ba)(d,m,x),s._OrtAddSessionConfigEntry=(d,m,x)=>(s._OrtAddSessionConfigEntry=Q.ca)(d,m,x),s._OrtReleaseSessionOptions=d=>(s._OrtReleaseSessionOptions=Q.da)(d),s._OrtCreateSession=(d,m,x)=>(s._OrtCreateSession=Q.ea)(d,m,x),s._OrtReleaseSession=d=>(s._OrtReleaseSession=Q.fa)(d),s._OrtGetInputOutputCount=(d,m,x)=>(s._OrtGetInputOutputCount=Q.ga)(d,m,x),s._OrtGetInputName=(d,m)=>(s._OrtGetInputName=Q.ha)(d,m),s._OrtGetOutputName=(d,m)=>(s._OrtGetOutputName=Q.ia)(d,m),s._OrtFree=d=>(s._OrtFree=Q.ja)(d),s._OrtCreateTensor=(d,m,x,I,D,F)=>(s._OrtCreateTensor=Q.ka)(d,m,x,I,D,F),s._OrtGetTensorData=(d,m,x,I,D)=>(s._OrtGetTensorData=Q.la)(d,m,x,I,D),s._OrtReleaseTensor=d=>(s._OrtReleaseTensor=Q.ma)(d),s._OrtCreateRunOptions=(d,m,x,I)=>(s._OrtCreateRunOptions=Q.na)(d,m,x,I),s._OrtAddRunConfigEntry=(d,m,x)=>(s._OrtAddRunConfigEntry=Q.oa)(d,m,x),s._OrtReleaseRunOptions=d=>(s._OrtReleaseRunOptions=Q.pa)(d),s._OrtCreateBinding=d=>(s._OrtCreateBinding=Q.qa)(d),s._OrtBindInput=(d,m,x)=>(s._OrtBindInput=Q.ra)(d,m,x),s._OrtBindOutput=(d,m,x,I)=>(s._OrtBindOutput=Q.sa)(d,m,x,I),s._OrtClearBoundOutputs=d=>(s._OrtClearBoundOutputs=Q.ta)(d),s._OrtReleaseBinding=d=>(s._OrtReleaseBinding=Q.ua)(d),s._OrtRunWithBinding=(d,m,x,I,D)=>(s._OrtRunWithBinding=Q.va)(d,m,x,I,D),s._OrtRun=(d,m,x,I,D,F,W,he)=>(s._OrtRun=Q.wa)(d,m,x,I,D,F,W,he),s._OrtEndProfiling=d=>(s._OrtEndProfiling=Q.xa)(d),s._JsepOutput=(d,m,x)=>(s._JsepOutput=Q.ya)(d,m,x),s._JsepGetNodeName=d=>(s._JsepGetNodeName=Q.za)(d);var ko=s._pthread_self=()=>(ko=s._pthread_self=Q.Aa)(),ca=s._malloc=d=>(ca=s._malloc=Q.Ba)(d),Tu=s._free=d=>(Tu=s._free=Q.Ca)(d);s.__emscripten_tls_init=()=>(s.__emscripten_tls_init=Q.Da)();var $u=s.__emscripten_thread_init=(d,m,x,I,D,F)=>($u=s.__emscripten_thread_init=Q.Fa)(d,m,x,I,D,F);s.__emscripten_thread_crashed=()=>(s.__emscripten_thread_crashed=Q.Ga)();var Su=(d,m,x,I)=>(Su=Q.Ha)(d,m,x,I),da=d=>(da=Q.Ia)(d),fa=s.__emscripten_thread_exit=d=>(fa=s.__emscripten_thread_exit=Q.Ja)(d),Iu=s.__emscripten_check_mailbox=()=>(Iu=s.__emscripten_check_mailbox=Q.Ka)(),_u=d=>(_u=Q.La)(d),Au=(d,m)=>(Au=Q.Ma)(d,m),pa=()=>(pa=Q.Na)(),Ro=d=>(Ro=Q.Oa)(d),ha=d=>(ha=Q.Pa)(d),Ou=s.dynCall_ii=(d,m)=>(Ou=s.dynCall_ii=Q.Ra)(d,m),Eu=d=>(Eu=Q.Sa)(d),Cu=()=>(Cu=Q.Ta)(),Pu=d=>(Pu=Q.Ua)(d),Du=()=>(Du=Q.Va)();s.___start_em_js=925783,s.___stop_em_js=925944;function Oy(d){d=Object.assign({},d);var m=I=>()=>I()>>>0,x=I=>D=>I(D)>>>0;return d.__errno_location=m(d.__errno_location),d.pthread_self=m(d.pthread_self),d.malloc=x(d.malloc),d.stackSave=m(d.stackSave),d.stackAlloc=x(d.stackAlloc),d}s.keepRuntimeAlive=Jt,s.wasmMemory=Ne,s.stackAlloc=ha,s.stackSave=pa,s.stackRestore=Ro,s.UTF8ToString=bt,s.stringToUTF8=_o,s.lengthBytesUTF8=Gr,s.ExitStatus=Sr,s.PThread=pe;var Bo;zr=function d(){Bo||ku(),Bo||(zr=d)};function ku(){function d(){if(!Bo&&(Bo=!0,s.calledRun=!0,!et)&&(S||mr(Qe),l(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),!S)){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;){var m=s.postRun.shift();ft.unshift(m)}mr(ft)}}if(!(0<Pt))if(S)l(s),S||mr(Qe),startWorker(s);else{if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)It.unshift(s.preRun.shift());mr(It),0<Pt||(s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),d()},1)):d())}}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return ku(),e.ready}})();typeof $h=="object"&&typeof Os=="object"?Os.exports=Th:typeof define=="function"&&define.amd&&define([],()=>Th)});var Ih=He((SC,lw)=>{lw.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n'});var Ah,cw,Es,Cs,Ri,_h,dw,fw,pw,Oh,it,An=P(()=>{"use strict";Ah=bh();cw=Sh(),Cs=!1,Ri=!1,_h=!1,dw=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},fw=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},pw=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Oh=async r=>{if(Cs)return Promise.resolve();if(Ri)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(_h)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ri=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=n>1&&dw(),i=t&&fw(),u=r.wasmPaths,a=typeof u=="string"?u:void 0,s=pw(i,o),l=typeof u=="object"?u[s]:void 0,c=!1,f=[];if(e>0&&f.push(new Promise(h=>{setTimeout(()=>{c=!0,h()},e)})),f.push(new Promise((h,g)=>{let y=o?cw:Ah,b={locateFile:(w,S)=>{if(o&&w.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ih()],{type:"text/javascript"}));if(w.endsWith(".wasm")){if(l)return l;let A=a??S;return s==="ort-wasm-simd.wasm"?A+"ort-wasm-simd.jsep.wasm":s==="ort-wasm-simd-threaded.wasm"?A+"ort-wasm-simd-threaded.jsep.wasm":A+s}return S+w}};if(o)if(typeof Blob>"u")b.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let w=`var ortWasmThreaded=${y.toString()};`;b.mainScriptUrlOrBlob=new Blob([w],{type:"text/javascript"})}y(b).then(w=>{Ri=!1,Cs=!0,Es=w,h()},w=>{Ri=!1,_h=!0,g(w)})})),await Promise.race(f),c)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},it=()=>{if(Cs&&Es)return Es;throw new Error("WebAssembly is not initialized yet.")}});var ct,so,Ye,Bi=P(()=>{"use strict";An();ct=(r,e)=>{let n=it(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},so=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let u=e?e+o:o;if(typeof i=="object")so(i,u+".",n,t);else if(typeof i=="string"||typeof i=="number")t(u,i.toString());else if(typeof i=="boolean")t(u,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},Ye=r=>{let e=it(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],u=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${u}`)}finally{e.stackRestore(n)}}});var Eh,Ch=P(()=>{"use strict";An();Bi();Eh=r=>{let e=it(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=ct(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&Ye("Can't create run options."),r?.extra!==void 0&&so(r.extra,"",new WeakSet,(u,a)=>{let s=ct(u,t),l=ct(a,t);e._OrtAddRunConfigEntry(n,s,l)!==0&&Ye(`Can't set a run config entry: ${u} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(u=>e._free(u)),i}}});var hw,mw,gw,bw,Ph,Dh=P(()=>{"use strict";An();Bi();hw=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},mw=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},gw=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},bw=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"xnnpack":o="XNNPACK";break;case"webnn":if(o="WEBNN",typeof t!="string"){let u=t;if(u?.deviceType){let a=ct("deviceType",n),s=ct(u.deviceType,n);it()._OrtAddSessionConfigEntry(r,a,s)!==0&&Ye(`Can't set a session config entry: 'deviceType' - ${u.deviceType}.`)}if(u?.powerPreference){let a=ct("powerPreference",n),s=ct(u.powerPreference,n);it()._OrtAddSessionConfigEntry(r,a,s)!==0&&Ye(`Can't set a session config entry: 'powerPreference' - ${u.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let u=t;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${u.preferredLayout}`);let a=ct("preferredLayout",n),s=ct(u.preferredLayout,n);it()._OrtAddSessionConfigEntry(r,a,s)!==0&&Ye(`Can't set a session config entry: 'preferredLayout' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=ct(o,n);it()._OrtAppendExecutionProvider(r,i)!==0&&Ye(`Can't append execution provider: ${o}.`)}},Ph=r=>{let e=it(),n=0,t=[],o=r||{};gw(o);try{let i=hw(o.graphOptimizationLevel??"all"),u=mw(o.executionMode??"sequential"),a=typeof o.logId=="string"?ct(o.logId,t):0,s=o.logSeverityLevel??2;if(!Number.isInteger(s)||s<0||s>4)throw new Error(`log serverity level is not valid: ${s}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let c=typeof o.optimizedModelFilePath=="string"?ct(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,u,!!o.enableProfiling,0,a,s,l,c),n===0&&Ye("Can't create session options."),o.executionProviders&&bw(n,o.executionProviders,t),o.freeDimensionOverrides)for(let[f,h]of Object.entries(o.freeDimensionOverrides)){if(typeof f!="string")throw new Error(`free dimension override name must be a string: ${f}`);if(typeof h!="number"||!Number.isInteger(h)||h<0)throw new Error(`free dimension override value must be a non-negative integer: ${h}`);let g=ct(f,t);e._OrtAddFreeDimensionOverride(n,g,h)!==0&&Ye(`Can't set a free dimension override: ${f} - ${h}.`)}return o.extra!==void 0&&so(o.extra,"",new WeakSet,(f,h)=>{let g=ct(f,t),y=ct(h,t);e._OrtAddSessionConfigEntry(n,g,y)!==0&&Ye(`Can't set a session config entry: ${f} - ${h}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(u=>e._free(u)),i}}});var Ps,uo,lo,Mi,co,Li,Ds,dt=P(()=>{"use strict";Ps=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},uo=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},lo=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],Mi=r=>{switch(r){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},co=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},Li=r=>r==="float32"||r==="int32"||r==="int64"||r==="bool"||r==="float16"||r==="uint32",Ds=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var yw,vw,kh,Rh,Bh,xw,Ze,Rr=P(()=>{"use strict";dt();yw=["V","I","W","E","F"],vw=(r,e)=>{console.log(`[${yw[r]},${new Date().toISOString()}]${e}`)},Bh=(r,e)=>{kh=r,Rh=e},xw=(r,e)=>{let n=co(r),t=co(kh);n>=t&&vw(n,typeof e=="function"?e():e)},Ze=(...r)=>{Rh&&xw(...r)}});var Mh,Lh=P(()=>{"use strict";dt();Mh=(r,e)=>new(Mi(e))(r)});var Nh=P(()=>{"use strict"});var Ni,ww,zh,Rs,ks,Fh,Gh=P(()=>{"use strict";Rr();Nh();Ni=r=>Math.ceil(r/16)*16,ww=1,zh=()=>ww++,Rs=async(r,e,n,t)=>{let o=Ni(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=r.getCommandEncoder();r.endComputePass(),u.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let s=t();return s.set(new Uint8Array(a,0,n)),s}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},ks=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,u=Ni(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let s=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=s.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),s.unmap();let c=this.backend.getCommandEncoder();this.backend.endComputePass(),c.copyBufferToBuffer(s,0,a.gpuData.buffer,0,u),Ze("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(s)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Ni(t.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return Ze("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;this.externalBuffers.delete(t)}else o=zh();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),Ze("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),Ze("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Ni(e),o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||u){let s=i?this.freeBuffers:this.freeUniformBuffers,l=s.get(t);l||(l=[],s.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:n})}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:zh(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),Ze("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return Ze("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");await Rs(this.backend,t.gpuData.buffer,t.originalSize,n)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Fh=(...r)=>new ks(...r)});var Bs,be,at=P(()=>{"use strict";Bs=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this._cacheKey}},be=r=>new Bs(r)});var Ms,sr,V,on,zi,Fi,Gi,Pe=P(()=>{"use strict";Ms=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},sr=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let u=Math.max(e.length,n.length),a=new Array(u);if(t){if(o<2||i<2)return;let s=Ms.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(s===void 0)return;[a[u-2],a[u-1]]=s}for(let s=t?3:1;s<=u;s++){let l=o-s<0?1:e[o-s],c=i-s<0?1:n[i-s];if(l!==c&&l>1&&c>1)return;a[u-s]=Math.max(l,c)}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},V=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},on=class r{static adjustPoolAttributes(e,n,t,o,i,u){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<u.length){if(u[a]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[a]>=t[a]||u[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,u,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let s=0;s<e.length-2;s++)r.adjustPadAndReturnShape(e[s+(u?1:2)],n[s],t[s],o[s],i,s,s+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,u,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let s=[n[0],n[1]];return r.computeShapeHelper(e,n,s,t,o,i,u,a),s}static computeConvOutputShape(e,n,t,o,i,u,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let s=[e[0],n[0]];return r.computeShapeHelper(!1,e,s,t,o,i,u,a),s}static computeShapeHelper(e,n,t,o,i,u,a,s){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],u[l],a,l,l+n.length-2,s))}static adjustPadAndReturnShape(e,n,t,o,i,u,a,s){let l=t*(o-1)+1;if(s&&s!=="NOTSET")switch(s){case"VALID":return i[u]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let f=((e+n-1)/n-1)*n+o-e;return i[u]=Math.floor(s==="SAME_LOWER"?(f+1)/2:f/2),i[a]=f-i[u],Math.floor((e+f-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[u]+i[a]-l)/n+1)}},zi=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let u,a,s;n?(u=e[1],a=e[0]):(u=e[0],a=e[1]);let l=-1;if(o?(s=t[0],l=1):(s=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(u<=0||s<=0||a<=0)throw new Error("invalid shape specified");if(i&&!sr.isValidBroadcast(i,[u,s]))throw new Error("gemm: invalid bias shape for broadcast");return[u,s,a]}},Fi=-34028234663852886e22,Gi=34028234663852886e22});var Tw,Vh,st,Ns,wr,Yt,an,Br,Wh,X,oe,Ls,Uh,zs,Hh,Fe=P(()=>{"use strict";dt();Pe();Tw=64,Vh=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},st=(r,e=1)=>{let n=Vh(r,e);return typeof n=="string"?n:n[0]},Ns=r=>[{type:"uint32",data:r},{type:"uint32",data:V.computeStrides(r)}],wr=r=>r%4===0?4:r%2===0?2:1,Yt=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,an=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,Br=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,Wh=(r,e,n,t,o)=>{let i=typeof n=="number",u=i?n:n.length,a=[...new Array(u).keys()],s=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,l=Vh(e,o),c=typeof l=="string"?l:l[1],f=typeof l=="string"?l:l[0],h={indices:s,value:c,storage:f,tensor:e},g=j=>typeof j=="string"?j:`${j}u`,y={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},b=i?"uniforms.":"",w=`${b}${r}_shape`,S=`${b}${r}_strides`,A="";for(let j=0;j<u-1;j++)A+=`
    let dim${j} = current / ${S}[${j}];
    let rest${j} = current % ${S}[${j}];
    indices[${j}] = dim${j};
    current = rest${j};
    `;A+=`indices[${u-1}] = current;`;let E=u<2?"":`
  fn o2i_${r}(offset: u32) -> ${h.indices} {
    var indices: ${h.indices};
    var current = offset;
    ${A}
    return indices;
  }`,R=j=>(y.offsetToIndices=!0,u<2?j:`o2i_${r}(${j})`),z=[];if(u>=2)for(let j=u-1;j>=0;j--)z.push(`${S}[${j}] * (indices[${j}])`);let B=u<2?"":`
  fn i2o_${r}(indices: ${h.indices}) -> u32 {
    return ${z.join("+")};
  }`,G=j=>(y.indicesToOffset=!0,u<2?j:`i2o_${r}(${j})`),Y=(...j)=>u===0?"0u":`${h.indices}(${j.map(g).join(",")})`,Z=(j,we)=>u<2?`${j}`:`${j}[${we}]`,me=(j,we,Ie)=>u<2?`${j}=${Ie};`:`${j}[${we}]=${Ie};`,k={},ee=(j,we)=>{y.broadcastedIndicesToOffset=!0;let Ie=`${we.name}broadcastedIndicesTo${r}Offset`;if(Ie in k)return`${Ie}(${j})`;let gt=[];for(let It=u-1;It>=0;It--){let Qe=we.indicesGet("outputIndices",It+we.rank-u);gt.push(`${Z(S,It)} * (${Qe} % ${Z(w,It)})`)}return k[Ie]=`fn ${Ie}(outputIndices: ${we.type.indices}) -> u32 {
             return ${gt.length>0?gt.join("+"):"0u"};
           }`,`${Ie}(${j})`},Ve=(j,we)=>(()=>{if(h.storage===h.value)return`${r}[${j}]=${we};`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`${r}[${j}]=vec2<u32>(u32(${we}), select(0u, 0xFFFFFFFFu, ${we} < 0));`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`${r}[${j}]=vec2<u32>(u32(${we}), 0u);`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`${r}[${j}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${we}));`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),ge=j=>(()=>{if(h.storage===h.value)return`${r}[${j}]`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`i32(${r}[${j}].x)`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`u32(${r}[${j}].x)`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${j}] & 0xFFu), bool(${r}[${j}] & 0xFF00u), bool(${r}[${j}] & 0xFF0000u), bool(${r}[${j}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),Ne=u<2?"":`
  fn get_${r}ByIndices(indices: ${h.indices}) -> ${c} {
    return ${ge(`i2o_${r}(indices)`)};
  }`,Q=u<2?"":(()=>{let j=a.map(Ie=>`d${Ie}: u32`).join(", "),we=a.map(Ie=>`d${Ie}`).join(", ");return`
  fn get_${r}(${j}) -> ${c} {
    return get_${r}ByIndices(${Y(we)});
  }`})(),We=(...j)=>{if(j.length!==u)throw new Error(`indices length must be ${u}`);let we=j.map(g).join(",");return u===0?ge("0u"):u===1?ge(we[0]):(y.get=!0,y.getByIndices=!0,y.indicesToOffset=!0,`get_${r}(${we})`)},et=j=>u<2?ge(j):(y.getByIndices=!0,y.indicesToOffset=!0,`get_${r}ByIndices(${j})`),Je=u<2?"":`
  fn set_${r}ByIndices(indices: ${h.indices}, value: ${c}) {
    ${Ve(`i2o_${r}(indices)`,"value")}
  }`,Ue=u<2?"":(()=>{let j=a.map(Ie=>`d${Ie}: u32`).join(", "),we=a.map(Ie=>`d${Ie}`).join(", ");return`
  fn set_${r}(${j}, value: ${c}) {
    set_${r}ByIndices(${Y(we)}, value);
  }`})();return{impl:()=>{let j=[];return i||(j.push(`const ${w} = ${h.indices}(${n.join(",")});`),j.push(`const ${S} = ${h.indices}(${V.computeStrides(n).join(",")});`)),y.offsetToIndices&&j.push(E),y.indicesToOffset&&j.push(B),y.broadcastedIndicesToOffset&&Object.values(k).forEach(we=>j.push(we)),y.set&&j.push(Ue),y.setByIndices&&j.push(Je),y.get&&j.push(Q),y.getByIndices&&j.push(Ne),j.join(`
`)},type:h,offsetToIndices:R,indicesToOffset:G,broadcastedIndicesToOffset:ee,indices:Y,indicesGet:Z,indicesSet:me,set:(...j)=>{if(j.length!==u+1)throw new Error(`indices length must be ${u}`);let we=j[u];if(typeof we!="string")throw new Error("value must be string");let Ie=j.slice(0,u).map(g).join(",");return u===0?Ve("0u",we):u===1?Ve(Ie[0],we):(y.set=!0,y.setByIndices=!0,y.indicesToOffset=!0,`set_${r}(${Ie}, ${we})`)},setByOffset:Ve,setByIndices:(j,we)=>u<2?Ve(j,we):(y.setByIndices=!0,y.indicesToOffset=!0,`set_${r}ByIndices(${j}, ${we});`),get:We,getByOffset:ge,getByIndices:et,usage:t?"input":"output",name:r,strides:S,shape:w,rank:u}},X=(r,e,n,t=1)=>Wh(r,e,n,!0,t),oe=(r,e,n,t=1)=>Wh(r,e,n,!1,t),Ls=class{constructor(e){this.normalizedDispatchGroup=e;this.indicesHelpers=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Tw){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2],i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>`,a=i?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +
          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${n*t*o}u + local_index;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${u}) {
    ${a}
  `}declareVariable(e,n){this.indicesHelpers.push(e),e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:e.type.indices}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:e.type.indices});let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerUniform(e,n){return this.uniforms.push({name:e,type:n}),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t}of this.uniforms)e.push(`${n}:${t}`);return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.indicesHelpers.map(e=>e.impl()).join(`
`)}},Uh=r=>new Ls(r),zs=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,u=r[i]||1;(e[e.length-1-o]||1)>1&&u===1&&t.unshift(i)}return t},Hh=r=>r<=4});var $w,jh,Sw,Iw,Mr,qh,Kh,fo=P(()=>{"use strict";Pe();at();Fe();$w=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},jh=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,Sw=(r,e)=>V.sortBasedOnPerm(r,jh(r.length,e)),Iw=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},Mr=(r,e)=>{let n=r.dataType,t=r.dims.length,o=jh(t,e),i=Hh(t),u=Sw(r.dims,o),a=i?u.length:u,s=i?t:r.dims,l=oe("output",n,a),c=X("a",n,s),f=h=>`
  ${h.registerUniform("output_size","u32").declareVariables(c,l)}

  ${Iw(o,t,c,l)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${l.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${l.setByOffset("global_idx",c.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:i?["rank"]:["dims"]},getRunData:h=>{let g=V.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:i?[{type:"uint32",data:g},...Ns(h[0].dims),...Ns(u)]:[{type:"uint32",data:g}]}},getShaderSource:f}},qh=(r,e)=>{$w(r.inputs),r.compute(Mr(r.inputs[0],e.perm))},Kh=r=>be({perm:r.perm})});var _w,Aw,Ow,Ew,Cw,Pw,Dw,kw,Rw,Bw,ur,Yh,Xh,Jh,Zh,Qh,em,tm,rm,nm,om,im=P(()=>{"use strict";Pe();Fe();Vi();fo();_w={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Aw={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ow={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Ew={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Cw=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},Pw=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},Dw=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},kw=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},Rw=(r,e)=>{let n=[];if(!kw(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},Bw=(r,e,n,t,o,i,u)=>{let a=n[0].dims,s=V.size(i),l=V.size(u),c=X("_A",n[0].dataType,a),f=oe("output",o,i),h=32,g=`
          var<workgroup> aBestValues : array<${f.type.storage}, ${h}>;
       `;return{name:r,shaderCache:e,getShaderSource:b=>`
        ${b.registerUniform("reduceSize","u32").declareVariables(c,f)}
        ${g}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${b.mainStart(h)}
          let local_idx = local_id.x;

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${f.type.storage}(${Ow[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = ${f.type.storage}(${c.getByOffset("offset + k")});
           bestValue = ${_w[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Aw[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${f.setByOffset("outputIndex",`${t==="mean"?`bestValue / ${f.type.storage}(uniforms.reduceSize)`:`${Ew[t]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:s},programUniforms:[{type:"uint32",data:l}]})}},ur=(r,e,n,t)=>{let o=r.inputs.length===1?n:Fs(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((g,y)=>y));let u=V.normalizeAxes(i,r.inputs[0].dims.length),a=u,s=r.inputs[0],l=Rw(a,r.inputs[0].dims.length);l.length>0&&(s=r.compute(Mr(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=Cw(a.length,s.dims.length));let[c,f]=Pw(s.dims,a),h=c;o.keepDims&&(h=Dw(c,u)),r.compute(Bw(e,{hint:o.cacheKey,inputDependencies:["type"]},[s],t,r.inputs[0].dataType,h,f),{inputs:[s]})},Yh=(r,e)=>{ur(r,"ReduceMeanShared",e,"mean")},Xh=(r,e)=>{ur(r,"ReduceL1Shared",e,"l1")},Jh=(r,e)=>{ur(r,"ReduceL2Shared",e,"l2")},Zh=(r,e)=>{ur(r,"ReduceLogSumExpShared",e,"logSumExp")},Qh=(r,e)=>{ur(r,"ReduceMaxShared",e,"max")},em=(r,e)=>{ur(r,"ReduceMinShared",e,"min")},tm=(r,e)=>{ur(r,"ReduceProdShared",e,"prod")},rm=(r,e)=>{ur(r,"ReduceSumShared",e,"sum")},nm=(r,e)=>{ur(r,"ReduceSumSquareShared",e,"sumSquare")},om=(r,e)=>{ur(r,"ReduceLogSumShared",e,"logSum")}});var lr,Mw,Wi,Fs,cr,Lw,Nw,zw,Fw,Gw,Vw,Ww,Uw,Hw,jw,dr,am,sm,um,lm,cm,dm,fm,pm,hm,mm,Xt,Vi=P(()=>{"use strict";Pe();at();Fe();im();lr=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Mw=r=>["","",`var value = ${r.getByOffset("inputOffset")};`,""],Wi=(r,e,n,t,o,i,u=!1,a=!1)=>{let s=[],l=n[0].dims,c=V.normalizeAxes(o,n[0].dims.length),f=!a&&c.length===0;l.forEach((G,Y)=>{f||c.indexOf(Y)>=0?u&&s.push(1):s.push(G)});let h=[],g=X("_A",n[0].dataType,l),y=oe("output",i,s),b=t(g,y,c),w=`inputOffset = ${g.indicesToOffset("inputIndices")};`,S=`let ${w};`,A=`var ${w};`,E=b[1]===""?"":A,R=(b[1]===""?S:w)+`
`+b[2];for(let G=0,Y=0;G<n[0].dims.length;G++)f||c.indexOf(G)>=0?(u&&Y++,R=`for(var j${G}: u32 = 0; j${G} < ${n[0].dims[G]}; j${G}++) {
                ${b[2].includes("lastIndex")?`let lastIndex = j${G};`:""}
                ${g.indicesSet("inputIndices",G,`j${G}`)}
                ${R}
              }`):(h.push(`${g.indicesSet("inputIndices",G,y.indicesGet("outputIndices",Y))};`),Y++);let z=V.size(s);return{name:r,shaderCache:e,getShaderSource:G=>`
        ${G.declareVariables(g,y)}

        ${G.mainStart()}
          ${G.guardAgainstOutOfBoundsWorkgroupSizes(z)}
          var inputIndices: ${g.type.indices};
          let outputIndices = ${y.offsetToIndices("global_idx")};

          ${h.join(`
`)}
          ${b[0]}       // init ops for reduce max/min
          ${E}
          ${b[1]}
          ${R}
          ${b[3]}
          ${b.length===4?y.setByOffset("global_idx","value"):b.slice(4).join(`
`)}
        }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(z/64)}})}},Fs=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),be({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},cr=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:Fs(o,n);r.compute(Wi(e,{hint:i.cacheKey},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?Mw:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},Lw=(r,e)=>{lr(r.inputs),cr(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByOffset("inputOffset")};`,"value = log(value);"])},Nw=(r,e)=>{lr(r.inputs),cr(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByOffset("inputOffset")});`,""])},zw=(r,e)=>{lr(r.inputs),cr(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])},Fw=(r,e)=>{lr(r.inputs),cr(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByOffset("inputOffset")});`,"value = log(value);"])},Gw=(r,e)=>{lr(r.inputs),cr(r,"ReduceMax",e,(t,o,i)=>{let u=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(t.indicesSet("inputIndices",a,0));return[`${u.join(`
`)}`,`var value = ${t.getByOffset("inputOffset")};`,`value = max(value, ${t.getByOffset("inputOffset")});`,""]})},Vw=(r,e)=>{lr(r.inputs),cr(r,"ReduceMean",e,(t,o,i)=>{let u=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(u*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByOffset("inputOffset")});`,`let value = ${o.type.value}(sum / ${u});`]})},Ww=(r,e)=>{lr(r.inputs),cr(r,"ReduceMin",e,(t,o,i)=>{let u=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIndices[${a}] = 0;`);return[`${u.join(`
`)}`,`var value = ${t.getByOffset("inputOffset")};`,`value = min(value, ${t.getByOffset("inputOffset")});`,""]})},Uw=(r,e)=>{lr(r.inputs),cr(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByOffset("inputOffset")};`,""])},Hw=(r,e)=>{lr(r.inputs),cr(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByOffset("inputOffset")};`,""])},jw=(r,e)=>{lr(r.inputs),cr(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByOffset("inputOffset")}; value += t * t;`,""])},dr=(r,e,n)=>{if(e.length===0)return!!n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},am=(r,e)=>{dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Vw(r,e):Yh(r,e)},sm=(r,e)=>{dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Nw(r,e):Xh(r,e)},um=(r,e)=>{dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?zw(r,e):Jh(r,e)},lm=(r,e)=>{dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Fw(r,e):Zh(r,e)},cm=(r,e)=>{dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Gw(r,e):Qh(r,e)},dm=(r,e)=>{dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Ww(r,e):em(r,e)},fm=(r,e)=>{dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Uw(r,e):tm(r,e)},pm=(r,e)=>{dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Hw(r,e):rm(r,e)},hm=(r,e)=>{dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?jw(r,e):nm(r,e)},mm=(r,e)=>{dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Lw(r,e):om(r,e)},Xt=r=>be(r)});var gm,bm,ym,vm,Gs,xm=P(()=>{"use strict";dt();at();Vi();gm=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},bm=(r,e)=>be({axis:e.axis,keepDims:e.keepDims,selectLastIndex:e.selectLastIndex}),ym=(r,e)=>{gm(r.inputs);let n=(o,i,u)=>{let a=[];for(let s=0;s<o.rank;s++)(u.indexOf(s)>=0||u.length===0)&&a.push(`inputIndices[${s}] = 0;`);return[`${a.join(`
`)}`,`var value = ${o.getByOffset("inputOffset")};
var bestIndex : i32 = 0;`,`if (${o.getByOffset("inputOffset")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${o.getByOffset("inputOffset")};
         bestIndex = i32(lastIndex);
       }`,"",i.setByOffset("global_idx","bestIndex")]},t=r.inputs.length===1?e:bm(r.inputs,e);r.compute(Wi("ArgMin",{hint:t.cacheKey},[r.inputs[0]],n,[t.axis],7,t.keepDims),{inputs:[0]})},vm=(r,e)=>{gm(r.inputs);let n=(o,i,u)=>{let a=[];for(let s=0;s<o.rank;s++)(u.indexOf(s)>=0||u.length===0)&&a.push(`inputIndices[${s}] = 0;`);return[`${a.join(`
`)}`,`var value = ${o.getByOffset("inputOffset")};
var bestIndex : i32 = 0;`,`if (${o.getByOffset("inputOffset")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${o.getByOffset("inputOffset")};
         bestIndex = i32(lastIndex);
       }`,"",i.setByOffset("global_idx","bestIndex")]},t=r.inputs.length===1?e:bm(r.inputs,e);r.compute(Wi("argMax",{hint:t.cacheKey},[r.inputs[0]],n,[t.axis],7,t.keepDims),{inputs:[0]})},Gs=r=>be(r)});var qw,Kw,wm,Tm=P(()=>{"use strict";Pe();Fe();qw=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Kw=r=>{let e=r[0].dims,n=r[0].dims[2],t=V.size(e)/4,o=r[0].dataType,i=X("input",o,e,4),u=X("bias",o,[n],4),a=X("residual",o,e,4),s=oe("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:c=>`
  const channels = ${n}u / 4;
  ${c.declareVariables(i,u,a,s)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${u.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${s.setByOffset("global_idx","value")}
  }`}},wm=r=>{qw(r.inputs),r.compute(Kw(r.inputs))}});var Yw,Ge,$m,Sm,Im,_m,Am,Om,Em,Cm,Pm,Vs,Xw,Dm,km,Rm,Bm,Ui,Mm,Hi,Lm,Nm,zm,Fm,Gm,Vm,Wm,Um,Hm,jm,qm,Km,Ym,Xm,Jm,Zm,Qm,Ws=P(()=>{"use strict";dt();Pe();at();Fe();Yw=(r,e,n,t,o,i)=>{let u=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let s=X("inputData",n,[u],4),l=oe("outputData",t,[u],4);return`
  ${r.declareVariables(s,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes(u)}

    let a = ${s.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Ge=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o},getShaderSource:u=>Yw(u,V.size(r.dims),r.dataType,i,n,t),getRunData:u=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(V.size(u[0].dims)/64/4)}})}),$m=r=>{r.compute(Ge(r.inputs[0],"Abs","abs"))},Sm=r=>{r.compute(Ge(r.inputs[0],"Acos","acos"))},Im=r=>{r.compute(Ge(r.inputs[0],"Acosh","acosh"))},_m=r=>{r.compute(Ge(r.inputs[0],"Asin","asin"))},Am=r=>{r.compute(Ge(r.inputs[0],"Asinh","asinh"))},Om=r=>{r.compute(Ge(r.inputs[0],"Atan","atan"))},Em=r=>{r.compute(Ge(r.inputs[0],"Atanh","atanh"))},Cm=r=>be(r),Pm=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(Ge(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},Vs=(r,e)=>{let n=st(r.inputs[0].dataType);r.compute(Ge(r.inputs[0],"Clip",t=>`clamp(${t}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${n}> = vec4(${n}(${e.min}));
    const clip_max_: vec4<${n}> = vec4(${n}(${e.max}));
`,e.cacheKey),{inputs:[0]})},Xw=r=>{let e=r.length>=2?r[1].getFloat32Array()[0]:Fi,n=r.length>=3?r[2].getFloat32Array()[0]:Gi;return be({min:e,max:n})},Dm=r=>{let e=Xw(r.inputs);Vs(r,e)},km=r=>{r.compute(Ge(r.inputs[0],"Ceil","ceil"))},Rm=r=>{r.compute(Ge(r.inputs[0],"Cos","cos"))},Bm=r=>{r.compute(Ge(r.inputs[0],"Cosh","cosh"))},Ui=r=>be(r),Mm=(r,e)=>{r.compute(Ge(r.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_: f32 = f32(${e.alpha});

  fn elu_f32(a: f32) -> f32 {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},Hi=(r,e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: ${r}) -> ${r} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Lm=r=>{let e=st(r.inputs[0].dataType);r.compute(Ge(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,Hi(`vec4<${e}>`,e)))},Nm=r=>{r.compute(Ge(r.inputs[0],"Exp","exp"))},zm=r=>{r.compute(Ge(r.inputs[0],"Floor","floor"))},Fm=r=>{let e=st(r.inputs[0].dataType);r.compute(Ge(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,Hi(`vec4<${e}>`,e)))},Gm=(r,e)=>{r.compute(Ge(r.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${e.alpha});`,e.cacheKey))},Vm=r=>{r.compute(Ge(r.inputs[0],"Not",e=>`!${e}`))},Wm=r=>{r.compute(Ge(r.inputs[0],"Neg",e=>`-${e}`))},Um=r=>{r.compute(Ge(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},Hm=r=>{r.compute(Ge(r.inputs[0],"Relu",e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`))},jm=r=>{r.compute(Ge(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},qm=r=>{r.compute(Ge(r.inputs[0],"Sin","sin"))},Km=r=>{r.compute(Ge(r.inputs[0],"Sinh","sinh"))},Ym=r=>{r.compute(Ge(r.inputs[0],"Sqrt","sqrt"))},Xm=r=>{r.compute(Ge(r.inputs[0],"Tan","tan"))},Jm=r=>{r.compute(Ge(r.inputs[0],"Tanh","tanh"))},Zm=(r,e)=>(r.compute(Ge(r.inputs[0],"ThresholdedRelu",n=>`select(vec4<f32>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${e.alpha});`,e.cacheKey)),0),Qm=r=>{r.compute(Ge(r.inputs[0],"Log","log"))}});var Zw,Qw,eg,tg=P(()=>{"use strict";Pe();Fe();Ws();Zw=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Qw=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=X("input",r[0].dataType,r[0].dims,4),t=X("bias",r[0].dataType,[r[0].dims[2]],4),o=oe("output",r[0].dataType,e,4),i=V.size(e)/4;return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${a.declareVariables(n,t,o)}

  ${Hi("vec4f")}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},eg=r=>{Zw(r.inputs),r.compute(Qw(r.inputs))}});var e2,t2,fr,rg,ng,og,ig,ag,sg,ug,lg,cg,dg,fg=P(()=>{"use strict";dt();Pe();Fe();e2=(r,e,n,t,o,i,u,a,s,l,c)=>{let f=V.size(t),h=Math.ceil(f/4),g,y;typeof u=="string"?g=y=(R,z)=>`${u}((${R}),(${z}))`:typeof u=="function"?g=y=u:(g=u.scalar,y=u.vector);let b="",w=oe("outputData",l,t,4),S=X("aData",a,e,4),A=X("bData",s,n,4);if(i){let R=z=>{let B=V.computeStrides(z),G=[];for(let Y=z.length-1;Y>=0;Y--){let Z=w.indicesGet("outputIndices",Y+t.length-z.length);G.push(`${B[Y]}u * (${Z} % ${z[Y]}u)`)}return G.length>0?G.join("+"):"0u"};b=`
          fn calcOffsetA(outputIndices: ${w.type.indices}) -> u32 {
            return ${R(e)};
          }

          fn calcOffsetB(outputIndices: ${w.type.indices}) -> u32 {
            return ${R(n)};
          }
        `}let E;if(o)if(i){let R=V.size(e)===1,z=V.size(n)===1;R||z?E=w.setByOffset("global_idx",y(R?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),z?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):E=`
            let outputIndices = ${w.offsetToIndices("global_idx * 4u")};
            let offsetA = calcOffsetA(outputIndices);
            let offsetB = calcOffsetB(outputIndices);
            ${w.setByOffset("global_idx",y(S.getByOffset("offsetA / 4u"),A.getByOffset("offsetB / 4u")))}
          `}else E=w.setByOffset("global_idx",y(S.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let R=(z,B,G="")=>{let Y=`aData[indexA${B}][componentA${B}]`,Z=`bData[indexB${B}][componentB${B}]`;return`
            let outputIndices${B} = ${w.offsetToIndices(`global_idx * 4u + ${B}u`)};
            let offsetA${B} = calcOffsetA(outputIndices${B});
            let offsetB${B} = calcOffsetB(outputIndices${B});
            let indexA${B} = offsetA${B} / 4u;
            let indexB${B} = offsetB${B} / 4u;
            let componentA${B} = offsetA${B} % 4u;
            let componentB${B} = offsetB${B} % 4u;
            ${z}[${B}] = ${G}(${g(Y,Z)});
          `};l===9?E=`
            var data = vec4<u32>(0);
            ${R("data",0,"u32")}
            ${R("data",1,"u32")}
            ${R("data",2,"u32")}
            ${R("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:E=`
            ${R("outputData[global_idx]",0)}
            ${R("outputData[global_idx]",1)}
            ${R("outputData[global_idx]",2)}
            ${R("outputData[global_idx]",3)}
          `}return`
        ${r.declareVariables(S,A,w)}

        ${c??""}
        ${b}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes(h)}
        ${E}
      }`},t2=(r,e,n,t,o,i,u=n.dataType)=>{let a=!V.areEqual(n.dims,t.dims),s=n.dims,l=V.size(n.dims),c=!1;if(a){let f=sr.calcShape(n.dims,t.dims,!1);if(!f)throw new Error("Can't perform binary op on the given tensors");s=f,l=V.size(s);let h=V.size(n.dims)===1,g=V.size(t.dims)===1,y=1;for(let b=1;b<s.length;b++){let w=n.dims[n.dims.length-b]??1,S=t.dims[t.dims.length-b]??1;if(w===S)y*=w;else break}(y%4===0||h||g)&&(c=!0)}else c=!0;return{name:r,shaderCache:{hint:e},getShaderSource:f=>e2(f,n.dims,t.dims,s,c,a,o,n.dataType,t.dataType,u,i),getRunData:()=>({outputs:[{dims:s,dataType:u}],dispatchGroup:{x:Math.ceil(l/64/4)}})}},fr=(r,e,n,t,o,i)=>{r.compute(t2(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},rg=r=>{fr(r,"Add",(e,n)=>`${e}+${n}`)},ng=r=>{fr(r,"Div",(e,n)=>`${e}/${n}`)},og=r=>{fr(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},ig=r=>{fr(r,"Mul",(e,n)=>`${e}*${n}`)},ag=r=>{let e=X("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;fr(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},sg=r=>{fr(r,"Sub",(e,n)=>`${e}-${n}`)},ug=r=>{fr(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},lg=r=>{fr(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},cg=r=>{fr(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},dg=r=>{fr(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var n2,o2,i2,a2,pg,hg,mg=P(()=>{"use strict";Pe();at();Fe();n2=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].dataType,n=r[0].dims.length;for(let t of r){if(t.dataType!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}},o2=r=>`
  fn calculateInputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,i2=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},a2=(r,e)=>{let n=r[0].dims.slice();if(e>=n.length||e<-1*n.length)throw new Error("axis specified for concat doesn't match input dimensionality");let t=e<0?n.length+e:e,o=n.slice(0);for(let g=1;g<r.length;g++){let y=r[g].dims.slice();for(let b=0;b<n.length;b++)if(b===t)o[t]+=y[b];else if(n[b]!==y[b])throw new Error("non concat dimensions must match")}let i=V.size(o),u=new Array(r.length),a=new Array(r.length),s=r[0].dataType,l=0;for(let g=0;g<r.length;++g)l+=r[g].dims[t],u[g]=l,a[g]=X(`input${g}`,s,r[g].dims);let c=oe("output",s,o),f=c.indicesGet("indices",t),h=g=>`
  ${g.declareVariables(...a,c)}

  const sizeInConcatAxis = array<u32, ${u.length}>(${u.map(y=>`${y}u`).join(",")});
  ${o2(u.length)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes(i)}

    var indices = ${c.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${f});
    if (inputIndex != 0u) {
      ${f} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${i2(a,c)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:h}},pg=(r,e)=>{n2(r.inputs),r.compute(a2(r.inputs,e.axis))},hg=r=>be({axis:r.axis})});var mt,ji,qi,Ki=P(()=>{"use strict";mt=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},ji=(r,e=!1,n=!1,t=3)=>"",qi=(r,e)=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      // TODO uncomment the following line when activation is supported above.
      // ${e?"value = activation(value, coords);":""}
      `});var Yi,Us=P(()=>{"use strict";Yi=`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));
}
`});var Xi,Ji,po=P(()=>{"use strict";Pe();Xi=(r,e=!1)=>{switch(r.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${r.clipMin});const clip_max_=f32(${r.clipMax});`,applyActivation:e?"value = clamp(value, vec4(clip_min_), vec4(clip_max_));":"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},Ji=r=>{let e=r?.activation||"";if(e==="Clip"){let[n,t]=r?.activation_params||[Fi,Gi];return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var s2,u2,ho,gg,l2,mo,c2,Zi,go=P(()=>{"use strict";Pe();Fe();po();Ki();s2=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,u2=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,ho=(r,e,n="f32",t,o=!1,i=32,u=!1,a=32)=>{let s=e[1]*r[1],l=e[0]*r[0],c=o?s:i,f=o?i:s,h=c/e[0],g=i/e[1];if(!((o&&h===4&&r[1]===4||!o&&(h===3||h===4))&&c%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${h} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${n}>, ${c/h}>, ${f}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${h};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${u?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${s};

  let numTiles = ${u?`${Math.ceil(a/i)}`:"(dimInner - 1) / tileInner + 1"};
  var kStart = ${u?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${s2(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${h===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${u2(o,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},gg=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,l2=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",mo=(r,e,n="f32",t,o=!1,i=32,u=!1,a=32,s=!1)=>{let l=r[1]*e[1],c=r[0]*e[0],f=o?l:i,h=o?i:l;if(!(h%e[1]===0&&f%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${f} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let g=h/e[1],y=f/e[0],b=i/e[1],w=s?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${c};

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${f}; inputCol = inputCol + ${e[0]}) {
          ${gg(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${y};
let tileRowB = i32(localId.y) * ${b};
// Loop over shared dimension.
for (var t = 0; t < numTiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${y}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${gg(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${l2(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${f}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${c}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${u?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let numTiles = ${u?`${Math.ceil(a/i)}`:"(dimInner - 1) / tileInner + 1"};
    var kStart = ${u?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${w}
  }
`},c2=(r,e,n,t,o,i=!1)=>{let u=o[0],a=o[1],s=o[2],l=t[0],c=t[1],f=t[2],h=t[3],g=zs(u,s),y=zs(a,s),b=st(t[0].type.tensor),w=()=>{let E=c.rank,R=l.rank,z=`var aIndices: ${c.type.indices};`;for(let B=E-2-1,G=R-1;B>=0;B--,G--)z+=`
aIndices[${B}] = ${R>1?`batchIndices[${G}]`:"batchIndices"};`;return g.forEach(B=>{z+=`
aIndices[${B}] = 0;`}),z+=`
aIndices[${E-2}] = u32(row);
                   aIndices[${E-1}] = u32(colIn);`,z},S=()=>{let E=f.rank,R=l.rank,z=`var bIndices: ${f.type.indices};`;for(let B=E-2-1,G=R-1;B>=0;B--,G--)z+=`
bIndices[${B}] = ${R>1?`batchIndices[${G}]`:"batchIndices"};`;return y.forEach(B=>{z+=`
bIndices[${B}] = 0;`}),z+=`
bIndices[${E-2}] = u32(row);
                   bIndices[${E-1}] = u32(colIn);`,z};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${mt(r,b)} {
      var value = ${mt(r,b)}(0.0);
      let col = colIn * ${r};
      if(row < dimAOuter && col < dimInner)
      {
        ${w()}
        value = ${c.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${mt(r,b)} {
      var value = ${mt(r,b)}(0.0);
      let col = colIn * ${r};
      if(row < dimInner && col < dimBOuter)
      {
        ${S()}
        value = ${f.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${mt(r,b)}) {
      let col = colIn * ${r};
      if (row < dimAOuter && col < dimBOuter) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${mt(r,b)}(bias[row])`};`:""}
        ${n}
        ${h.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Zi=(r,e,n,t,o=!1)=>{let i=r[0].dims,u=r[1].dims,a=i.slice(0,-2),s=u.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),c=X("batchDims",r[0].dataType,l),f=[c],h=[a,s,l],g=V.size(l),y=i[i.length-2],b=i[i.length-1],w=u[u.length-1],S=b%4===0&&w%4===0,{activationFunction:A,applyActivation:E}=Xi(e,S),R=y<=8?[4,1,1]:[4,4,1],z=[8,8,1],B=[Math.ceil(w/z[0]/R[0]),Math.ceil(y/z[1]/R[1]),Math.ceil(g/z[2]/R[2])],G=st(r[0].dataType),Y=S?4:1,Z=X("a",r[0].dataType,[...a,y,b/Y],Y),me=X("b",r[1].dataType,[...s,b,w/Y],Y),k=oe("result",r[0].dataType,[g,y,w/Y],Y);f.push(Z),f.push(me),f.push(k);let ee=[Z,me],Ve=r.length>2,ge=c2(Y,Ve,E,f,h,o);if(Ve){let Q=o?Y:1;ee.push(X("bias",r[2].dataType,r[2].dims,Q))}let Ne=Q=>`
  const dimAOuter: i32 = ${y};
  const dimBOuter: i32 = ${w};
  const dimInner: i32 = ${b};
  ${Q.declareVariables(...ee,k)}
  ${A}
  ${ge}
  ${S?ho(R,z,G,c):mo(R,z,G,c)}
                   ${c.impl()}`;return{name:"MatMul",shaderCache:{hint:e.activationCacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:B[0],y:B[1],z:B[2]}}),getShaderSource:Ne}}});var d2,bg,yg=P(()=>{"use strict";Rr();Pe();Fe();Ki();Us();go();d2=(r,e,n,t,o=!1,i,u=!1,a=4,s=4,l=4,c="f32")=>{let f=me=>{switch(me){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${me} is not supported.`)}},h=me=>{switch(me){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${me} is not supported.`)}},g=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,y=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,b=r?"xShape[1]":"xShape[2]",w=r?"xShape[2]":"xShape[3]",S=r?"row":"col",A=r?"col":"row",E=`
    let inChannels = wShape[2];
    let outWidth = ${r?"outShape[2]":"outShape[3]"};
    let outRow = ${S} / outWidth;
    let outCol = ${S} % outWidth;

    let WRow = ${A} / (filterDims[1] * inChannels);
    let WCol = ${A} / inChannels % filterDims[1];
    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];
    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];
    let xCh = ${A} % inChannels;
    var resData = ${mt(a,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${w}) {
      ${g}
      let xIndex = getIndexFromCoords4D(coord, xShape);
      ${f(a)}
    }
    return resData;`,R=r?e&&t?`
    let col = colIn * ${a};
    ${E}`:`
    let col = colIn * ${a};
    if (row < dimAOuter && col < dimInner) {
      ${E}
    }
    return ${mt(a,c)}(0.0);`:t&&n?`
    let col = colIn * ${a};
    ${E}`:`
    let col = colIn * ${a};
    if (row < dimInner && col < dimBOuter) {
      ${E}
    }
    return ${mt(a,c)}(0.0);`,z=`${h(s)}`,B=mt(l,c),G=r?mt(a,c):mt(s,c),Y=r?mt(s,c):mt(a,c);return`
    ${ji(i,u,l===4,4)}
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${G} {
      ${r?R:z}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Y} {
      ${r?z:R}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${B}) {
      let col = colIn * ${l};
      if (row < dimAOuter && col < dimBOuter)
      {
      var value = valueIn;
      let outWidth = ${r?"outShape[2]":"outShape[3]"};
      ${y}
      ${qi(o,i)}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},bg=(r,e,n,t,o,i,u,a)=>{let s=e.format==="NHWC",l=s?r[0].dims[3]:r[0].dims[1],c=n[0],f=s?n[2]:n[3],h=s?n[1]:n[2],g=s?n[3]:n[1],y=s&&(l%4===0||l%3===0)&&g%4===0,b=s?g:f*h,w=s?f*h:g,S=[8,8,1],A=t<=8?[4,1,1]:[4,4,1],E=[Math.ceil(b/S[0]/A[0]),Math.ceil(w/S[1]/A[1]),Math.ceil(c/S[2]/A[2])];Ze("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let R=y?s&&l%4!==0?3:4:A[0],z=S[1]*A[1],B=S[0]*A[0],G=Math.max(S[0]*R,S[1]),Y=t%z===0,Z=o%B===0,me=i%G===0,k=y?[R,4,4]:[1,1,1],ee=st(r[0].dataType),Ve=[`@group(0) @binding(0) var<storage, read> x: array<${y&&R===4?`vec4<${ee}>`:ee}>;`,`@group(0) @binding(1) var<storage, read> w: array<${y?`vec4<${ee}>`:ee}>;`],ge=`
      fn setOutputAtIndex(flatIndex : i32, value : ${y?`vec4<${ee}>`:ee}) {
        result[flatIndex] = ${y?`vec4<${ee}>`:ee}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${y?`vec4<${ee}>`:ee}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${y?"/ 4":""}, value);
      }`;return u&&(Ve.push(`@group(0) @binding(2) var<storage, read> bias: array<${y?`vec4<${ee}>`:ee}>;`),ge+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${y?`vec4<${ee}>`:ee} {
          return bias[coords.${s?"w":"y"}${y?"/ 4":""}];
        }`),{name:"Conv2DMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]}}),getShaderSource:()=>`
        ${Yi}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Ve.join("")}
        @group(0) @binding(${Ve.length}) var<storage, read_write> result: array<${y?`vec4<${ee}>`:ee}>;
        //@group(0) @binding(${Ve.length+1}) var<uniform> uniforms: Uniforms;

        const xShape : vec4<i32> = vec4<i32>(${r[0].dims.join(",")});
        const wShape : vec4<i32> = vec4<i32>(${r[1].dims.join(",")});
        const outShape : vec4<i32> = vec4<i32>(${n.join(",")});
        const outShapeStrides : vec3<i32> = vec3<i32>(${V.computeStrides(n).slice(0,3).join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[0]}, ${e.kernelShape[1]});
        const pad : vec2<i32> = vec2<i32>(${e.pads[0]}, ${e.pads[1]});
        const stride : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        const dimAOuter : i32 = ${t};
        const dimBOuter : i32 = ${o};
        const dimInner : i32 = ${i};
        ${ge}
        ${d2(s,Y,Z,me,u,e.activation.toLowerCase(),!1,k[0],k[1],k[2],ee)}
            ${y?ho(A,S,ee,void 0,!s,G):mo(A,S,ee,void 0,!s,G,!1,void 0,a)}`}}});var Hs,vg=P(()=>{"use strict";Pe();Fe();qs();po();Hs=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,u=r[1].dims,a=u[0]/e.group,{activationFunction:s,applyActivation:l}=Xi(e),c=e.format==="NHWC",f=js(i,u,e.dilations,e.pads,e.strides,c),h=V.size(f),g=oe("output",r[0].dataType,f),y=X("x",r[0].dataType,i),b=X("w",r[1].dataType,u),w=[y,b];t&&w.push(X("b",r[2].dataType,r[2].dims));let S=A=>`
  const strides: vec2<u32> = vec2(${e.strides[0]}u, ${e.strides[1]}u);
  const pads: vec2<u32> = vec2(${e.pads[0]}u, ${e.pads[1]}u);

  ${A.declareVariables(...w,g)}

  ${s}

  ${A.mainStart()}
    ${A.guardAgainstOutOfBoundsWorkgroupSizes(h)}

    let outputIndices = ${g.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${c?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${c?1:2}], outputIndices[${c?2:3}]) * strides - pads;
    let group_id: u32 = output_channel / ${a}u;

    var value: ${g.type.value} = ${g.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {
      let input_channel = group_id * ${u[1]}u + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * ${e.dilations[0]}u;

        if (xHeight < 0u || xHeight >= ${i[c?1:2]}u) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * ${e.dilations[1]}u;
          if (xWidth < 0u || xWidth >= ${i[c?2:3]}u) {
            continue;
          }

          let xVal = ${c?y.get("batch","xHeight","xWidth","input_channel"):y.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${b.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${l}
    ${g.setByOffset("global_idx","value")}
  }`;return{name:"GroupedConv",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n?n(f):f,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)}}),getShaderSource:S}}});var js,xg,f2,wg,Ks,p2,h2,Ys,qs=P(()=>{"use strict";Pe();at();yg();go();vg();po();fo();js=(r,e,n,t,o,i)=>{let u=r[0],a=r.slice(i?1:2,i?3:4),s=a.length,l=e[0],f=e.slice(2).map((y,b)=>y+(y-1)*(n[b]-1)),g=a.map((y,b)=>y+t[b]+t[b+s]).map((y,b)=>Math.floor((y-f[b]+o[b])/o[b]));return g.splice(0,0,u),g.splice(i?3:1,0,l),g},xg=[2,3,1,0],f2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},wg=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();on.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},Ks=r=>{let e=Ji(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,u=r.kernel_shape,a=r.pads,s=r.strides,l=r.w_is_const();return be({autoPad:t,format:n,dilations:o,group:i,kernelShape:u,pads:a,strides:s,wIsConst:l,...e})},p2=(r,e,n)=>{let t=wg(n,e);if(n.group!==1){r.compute(Hs(e,t));return}let o=n.format==="NHWC",i=e.length===3,u=e[0].dims[o?1:2],a=e[0].dims[o?2:3],s=e[0].dims[o?3:1],l=e[1].dims[2],c=e[1].dims[3],f=js(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),h=f[o?1:2],g=f[o?2:3],y=f[o?3:1],b=o&&l===u&&c===a&&n.pads[0]===0&&n.pads[1]===0;if(b||l===1&&c===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let B=f[0],G,Y,Z,me=[];if(o){let k=r.kernelCustomData.wT??r.compute(Mr(e[1],xg),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=k),b){let ee=u*a*s;G=e[0].reshape([1,B,ee]),Y=k.reshape([1,ee,y]),Z=[1,B,y]}else G=e[0].reshape([B,u*a,s]),Y=k.reshape([1,s,y]),Z=[B,h*g,y];me.push(G),me.push(Y)}else G=e[0].reshape([B,s,u*a]),Y=e[1].reshape([1,y,s]),Z=[B,y,h*g],me.push(Y),me.push(G);i&&me.push(e[2]),r.compute(Zi(me,t,f,Z,o),{inputs:me});return}let w=!0,S=r.kernelCustomData.wT??r.compute(Mr(e[1],xg),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=S);let A=[e[0],S];i&&A.push(e[2]);let E=o?h*g:y,R=o?y:h*g,z=l*c*s;r.compute(bg(A,t,f,E,R,z,i,w),{inputs:A})},h2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),u=[1].concat(e.dilations),a=[1].concat(e.kernelShape),s=wg({...e,pads:o,strides:i,dilations:u,kernelShape:a},t);r.compute(Hs(t,s,l=>n?[l[0],l[2],l[3]]:[]))},Ys=(r,e)=>{f2(r.inputs,e),r.inputs[0].dims.length===3?h2(r,e):p2(r,r.inputs,e)}});var m2,Tg,$g=P(()=>{"use strict";Rr();Pe();Ki();Us();go();m2=(r,e=!1,n,t=!1,o=4)=>{let i=mt(o,"f32"),u=S=>{switch(S){case 1:return"return W[getIndexFromCoords4D(coord, wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${S} is not supported.`)}},a=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,s=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,l=r?"outBackprop[1]":"outBackprop[2]",c=r?"outBackprop[2]":"outBackprop[3]",f=r?"row":"col",h=r?"col":"row",g=`
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let outWidth = ${r?"outShape[2]":"outShape[3]"};
      let outRow = ${f} / outWidth;
      let outCol = ${f} % outWidth;

      let WRow = ${h} / (filterDims[1] * inChannels);
      let WCol = ${h} / inChannels % filterDims[1];
      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);
      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);
      if (xR < 0.0 || xR >= f32(${l}) || fract(xR) > 0.0) {
        return ${i}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${c}) || fract(xC) > 0.0) {
        return ${i}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${h} % inChannels;
      ${a}
      return x[getIndexFromCoords4D(coord, xShape)/${o}];`,y=r?`
      let col = colIn * ${o};
      if (row < dimAOuter && col < dimInner) {
        ${g}
      }
      return ${i}(0.0);`:`
      let col = colIn * ${o};
      if (row < dimInner && col < dimBOuter) {
        ${g}
      }
      return ${i}(0.0);`,b=`
      let col = colIn * ${o};
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);
      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];
      if (${r?"row < dimInner && col < dimBOuter":"row < dimInner && col < dimAOuter"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${u(o)}
      }
      return ${i}(0.0);
      `;return`
  ${ji(n,t,o===4,4)}
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {
    ${r?y:b}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {
    ${r?b:y}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {
    let col = colIn * ${o};
    if (row < dimAOuter && col < dimBOuter) {
      var value = valueInput;
      let outWidth = ${r?"outShape[2]":"outShape[3]"};
      ${s}
      ${qi(e,n)}
      result[getIndexFromCoords4D(coords, outShape)/${o}] = value;
    }
  }`},Tg=(r,e,n,t,o,i,u,a)=>{let s=e.format==="NHWC",l=s?r[0].dims[3]:r[0].dims[1],c=n[0],f=s?n[2]:n[3],h=s?n[1]:n[2],g=s?n[3]:n[1],y=s?l%4===0&&g%4===0:f%4===0&&g%4===0,b=s?g:f*h,w=s?f*h:g,S=y?[8,8,1]:[b<=4||w<=4?4:16,b>4&&w<=4?4:16,1],A=y?[4,4,1]:[b<=4?1:4,b>4&&w<=4?1:4,1],E=[Math.ceil(b/S[0]/A[0]),Math.ceil(w/S[1]/A[1]),Math.ceil(c/S[2]/A[2])];Ze("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let R=y?4:1,z=Math.max(S[0]*R,S[1]),B=[`@group(0) @binding(0) var<storage, read> x: array<${y?"vec4<f32>":"f32"}>;`,"@group(0) @binding(1) var<storage, read> W: array<f32>;"],G="";return u&&(B.push(`@group(0) @binding(2) var<storage, read> bias: array<${y?"vec4<f32>":"f32"}>;`),G+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${y?"vec4<f32>":"f32"} {
          return bias[coords.${s?"w":"y"}${y?"/ 4":""}];
        }`),{name:"Conv2DTransposeMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]}}),getShaderSource:()=>`
        ${Yi}
        ${B.join(`
`)}
        @group(0) @binding(${B.length}) var<storage, read_write> result: array<${y?"vec4<f32>":"f32"}>;
        const outBackprop : vec4<i32> = vec4<i32>(${r[0].dims.join(",")});
        const xShape : vec4<i32> = vec4<i32>(${r[0].dims.join(",")});
        const wShape : vec4<i32> = vec4<i32>(${r[1].dims.join(",")});
        const outShape : vec4<i32> = vec4<i32>(${n.join(",")});
        const outShapeStrides : vec3<i32> = vec3<i32>(${V.computeStrides(n).slice(0,3).join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[s?1:2]}, ${e.kernelShape[s?2:3]});
        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(
              ${e.dilations[0]<=1?0:(e.kernelShape[s?1:2]-1)*(e.dilations[0]-1)},
              ${e.dilations[1]<=1?0:(e.kernelShape[s?2:3]-1)*(e.dilations[1]-1)});
        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${e.pads[0]+e.pads[2]})/2,
                                         i32(effectiveFilterDims[1]) - 1 - (${e.pads[1]+e.pads[3]})/2);
        const strides : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        const dimAOuter : i32 = ${t};
        const dimBOuter : i32 = ${o};
        const dimInner : i32 = ${i};
        ${G}
        ${m2(s,u,e.activation.toLowerCase(),!1,R)}
        ${y?ho(A,S,"f32",void 0,!s,z):mo(A,S,"f32",void 0,!s,z,!1,void 0,a)}`}}});var g2,Xs,Sg=P(()=>{"use strict";Rr();Pe();Fe();g2=(r,e,n,t,o,i,u=!1,a)=>{let s=n.format==="NHWC",l=s?1:2,c=s?2:3,f=s?3:1,h=V.size(t),g=u?2:1,y=n.group,b=e[1].dims,w=b[0]/y,S=b[1],A=`
  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {
    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);
  }`;o&&(A+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {
      return bias[coords.${s?"w":"y"}${u?"/ 4":""}];
    }`);let E=u?4:1,R=X("W",e[1].dataType,e[1].dims,E),z=X("Dy",e[0].dataType,e[0].dims,E),B=[z,R];o&&B.push(X("bias",e[2].dataType,[t[f]],E));let G=oe("result",e[0].dataType,t,E),Y=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / outShape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % outShape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${g};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${a}>, ${g}>;
        for (var i = 0; i < ${g}; i++) {
          dotProd[i] = vec4<${a}>(0.0);
        }
        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {
          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(strides.x);
          let wRPerm = filterDims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${a}(outBackprop[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {
            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(strides.y);
            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(strides.y);
            let wCPerm = filterDims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${a}(outBackprop[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${a}(outBackprop[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${z.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${z.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = outBackprop[${f}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${z.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${R.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${z.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${g}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":"0.0"};
          ${G.set("batch","r","c + i","d1","value")};
        }
      }`,Z=`
          let outputIndices = ${G.offsetToIndices("global_idx")};
          let batch = ${G.indicesGet("outputIndices",0)};
          let d1 = ${G.indicesGet("outputIndices",f)};
          let r = ${G.indicesGet("outputIndices",l)};
          let c = ${G.indicesGet("outputIndices",c)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / ${S};
          let wOutChannel = d1 - groupId * ${S};
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = 0.0;
          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {
            if (wR % dilations.x != 0) {
              continue;
            }
            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(strides[0]);
            let wRPerm = filterDims.x - 1 - wR / dilations.x;
            if (dyR < 0.0 || dyR >= ${a}(outBackprop[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {
              if (wC % dilations.y != 0) {
                continue;
              }
              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(strides.y);
              let wCPerm = filterDims.y - 1 - wC / dilations.y;
              if (dyC < 0.0 || dyC >= ${a}(outBackprop[${c}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * ${w};
              for (var d2: u32 = 0; d2 < ${w}; d2 = d2 + 1) {
                let xValue = ${s?z.get("batch","idyR","idyC","inputChannel"):z.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${R.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":"0.0"};
          ${G.setByOffset("global_idx","value")};
        `;return`
  ${r.declareVariables(...B,G)}
  ${A}
  const outShape : vec4<u32> = vec4<u32>(${t.join(",")});
  const outBackprop : vec4<u32> = vec4<u32>(${e[0].dims.join(",")});
  const strides : vec2<u32> = vec2<u32>(${n.strides[0]}, ${n.strides[1]});
  const filterDims : vec2<u32> = vec2<u32>(${n.kernelShape[s?1:2]}, ${n.kernelShape[s?2:3]});
  const dilations : vec2<u32> = vec2<u32>(${n.dilations[0]}, ${n.dilations[1]});
  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(
          ${n.dilations[0]<=1?0:(n.kernelShape[s?1:2]-1)*(n.dilations[0]-1)},
          ${n.dilations[1]<=1?0:(n.kernelShape[s?2:3]-1)*(n.dilations[1]-1)});
  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${n.pads[0]+n.pads[2]})/2,
                                     i32(effectiveFilterDims[1]) - 1 - (${n.pads[1]+n.pads[3]})/2);
    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes(h)};
  ${u?Y:Z}}`},Xs=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=V.size(o),u=[Math.ceil(i/64),1,1];Ze("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let a=st(r[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:e.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}]}),getShaderSource:s=>g2(s,r,e,o,t,u[1]===1&&u[2]===1,!1,a)}}});var b2,y2,v2,Ig,_g,x2,w2,T2,$2,Ag,Og=P(()=>{"use strict";at();$g();Sg();po();fo();b2=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,y2=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},v2=(r,e,n,t,o,i,u,a,s,l)=>{let c=r.length-2,f=l.length===0;if(s.length===0)for(let y=0;y<c;++y)s.push(0);let h=r[0],g=e[a?3:1]*o;for(let y=0,b=r.length-c-(a?1:0);y<c;++y,++b){let w=r[b],S=f?w*u[y]:l[y],A=b2(w,u[y],i[y],e[b],n[y],S);y2(A,t,i,y,y+c),f&&l.push(u[y]*(w-1)+s[y]+(e[b]-1)*n[y]+1-i[y]-i[y+c])}l.splice(0,0,h),l.splice(a?3:1,0,g)},Ig=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((h,g)=>h*g,1)===0){n.length=0;for(let h=2;h<e[1].dims.length;++h)n.push(e[1].dims[h])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),u=r.outputPadding.slice(),a=e[0].dims,s=r.dilations.slice();if(s.reduce((h,g)=>h+g,0)===0){let h=e[0].dims.length-2;s=new Array(h).fill(1)}let l=r.strides.slice();if(l.reduce((h,g)=>h+g,0)===0){let h=e[0].dims.length-2;l=new Array(h).fill(1)}v2(a,n,s,r.autoPad,r.group,o,l,t,u,i);let c=Object.assign({},r),f=r.cacheKey+[n.join("n,"),o.join(","),l.join(","),u.join(","),i.join(","),s.join(",")].join("_");return Object.assign(c,{kernelShape:n,pads:o,outputPadding:u,outputShape:i,dilations:s,strides:l,cacheKey:f}),c},_g=r=>{let e=Ji(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,u=r.kernelShape,a=r.pads,s=r.strides,l=r.wIsConst(),c=r.outputPadding,f=r.outputShape;return be({autoPad:t,format:n,dilations:o,group:i,kernelShape:u,outputPadding:c,outputShape:f,pads:a,strides:s,wIsConst:l,...e})},x2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((c,f)=>c+f,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((c,f)=>c+f,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((c,f)=>c+f,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((c,f)=>c+f,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},w2=[2,3,1,0],T2=(r,e,n)=>{let t=Ig(n,e),o=n.format==="NHWC",i=e.length===3;if(t.group!==1){r.compute(Xs(e,t));return}let u=t.outputShape,a=u[o?1:2],s=u[o?2:3],l=u[o?3:1],c=e[1].dims[2],f=e[1].dims[3],h=e[0].dims[o?3:1],g=o?a*s:l,y=o?l:a*s,b=c*f*h,w=!0,S=r.kernelCustomData.wT??r.compute(Mr(e[1],w2),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=S);let A=[e[0],S];i&&(!o&&e[2].dims.length===1?A.push(e[2].reshape([e[2].dims[0],1,1])):A.push(e[2])),r.compute(Tg(A,t,u,g,y,b,i,w),{inputs:A})},$2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];t.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let u=e.strides;(u.length===0||u[0]===0)&&(u=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],u=[1].concat(u),i=[1].concat(i),o=[1].concat(o);let s=Ig({...e,pads:a,strides:u,dilations:i,kernelShape:o},t);r.compute(Xs(t,s,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},Ag=(r,e)=>{x2(r.inputs,e),r.inputs[0].dims.length===3?$2(r,e):T2(r,r.inputs,e)}});var Js,Qi,Eg,S2,I2,Zs,Qs,_2,Cg,Pg,Dg=P(()=>{"use strict";Pe();at();Fe();Js="[a-zA-Z]|\\.\\.\\.",Qi="("+Js+")+",Eg="^"+Qi+"$",S2="("+Qi+",)*"+Qi,I2="^"+S2+"$",Zs=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},Qs=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(I2)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,s)=>{let l=e[s].dims.slice();if(!a.match(RegExp(Eg)))throw new Error("Invalid LHS term");let c=this.processTerm(a,!0,l,s);this.lhs.push(c)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,s])=>s.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(Qi)))throw new Error("Invalid RHS");o.match(RegExp(Js,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let s=this.symbolToInfo.get(a);if(s===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(s.dimValue)}}),this.rhs=this.processTerm(o,!0,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,u=!1,a=[],s=0;if(!e.match(RegExp(Eg))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(Js,"g")),c=new Zs(o);return l?.forEach((f,h)=>{if(f==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let g=i-l.length+1;if(g<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(s,s+g),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let y=0;y<a.length;y++){let b=String.fromCharCode("0".charCodeAt(0)+h);c.addSymbol(b,h+y),this.addSymbol(b,t[s++],o)}}else c.addSymbol(f,h),this.addSymbol(f,t[s++],o)}),c}},_2=(r,e)=>{let n=r[0].dataType,t=new Array(r.length);for(let E=0;E<r.length;++E)t[E]=X(`input${E}`,n,r[E].dims);let o=e.outputDims,i=V.size(o),u=oe("output",n,o),a=[],s=Array.from(e.rhs.symbolToIndices.keys()),l="var prod = 1.0;",c="var sum = 0.0;",f="sum += prod;",h=[],g=[],y=[],b=[],w=e.symbolToInfo.size===s.length;e.symbolToInfo.forEach((E,R)=>{if(s.includes(R)){let z=s.indexOf(R);e.lhs.forEach((B,G)=>{if(E.inputIndices.includes(G)){let Y=B.symbolToIndices.get(R);if(Y===void 0)throw new Error("Invalid symbol error");Y.forEach(Z=>{a.push(`${t[G].indicesSet(`input${G}Indices`,Z,u.indicesGet("outputIndices",z))}`)})}})}else e.lhs.forEach((z,B)=>{let G=e.symbolToInfo.get(R);if(G===void 0)throw new Error("Invalid symbol error");if(G.inputIndices.includes(B)){let Y=z.symbolToIndices.get(R);if(Y===void 0)throw new Error("Invalid symbol error");Y.forEach(Z=>{h.push(`${t[B].indicesSet(`input${B}Indices`,Z,`${R}`)}`)}),b.push(`prod *= ${t[B].getByIndices(`input${B}Indices`)};`)}}),g.push(`for(var ${R}: u32 = 0; ${R} < ${e.symbolToInfo.get(R)?.dimValue}; ${R}++) {`),y.push("}")});let S=w?[...a,`let sum = ${t.map((E,R)=>E.getByIndices(`input${R}Indices`)).join(" * ")};`]:[...a,c,...g,...h,l,...b,f,...y],A=E=>`
      ${E.declareVariables(...t,u)}

      ${E.mainStart()}
        ${E.guardAgainstOutOfBoundsWorkgroupSizes(i)}
        var outputIndices = ${u.offsetToIndices("global_idx")};
        ${t.map((R,z)=>`var input${z}Indices: ${t[z].type.indices};`).join(`
`)}
        ${S.join(`
`)};
        ${u.setByOffset("global_idx","sum")};
      }`;return{name:"Einsum",shaderCache:{hint:e.equation},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:A}},Cg=(r,e)=>{let n=new Qs(r.inputs,e.equation);r.compute(_2(r.inputs,n))},Pg=r=>{let e=r.equation.replace(/\s+/g,"");return be({equation:e})}});var A2,kg,O2,E2,Rg,Bg=P(()=>{"use strict";Pe();Fe();A2=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},kg=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},O2=(r,e)=>r.length>e.length?kg(r,e):kg(e,r),E2=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=O2(e,n),o=V.size(t),i=r[0].dataType,u=X("input",i,e),a=oe("output",i,t),s=l=>`
  const inputShape = ${u.indices(...e)};
  ${l.declareVariables(u,a)}
  ${l.mainStart()}
  ${l.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let outputIndices = ${a.offsetToIndices("global_idx")};
    var inputIndices: ${u.type.indices};
    for (var i = 0; i < ${e.length}; i++) {
      if (${u.indicesGet("inputShape","i")} == 1) {
        ${u.indicesSet("inputIndices","i",0)}
      } else {
        ${u.indicesSet("inputIndices","i",a.indicesGet("outputIndices",`i + ${t.length-e.length}`))}
      }
    }
    ${a.setByOffset("global_idx",u.getByIndices("inputIndices"))}
  }`;return{name:"Expand",shaderCache:{hint:`${t}`},getShaderSource:s,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}})}},Rg=r=>{A2(r.inputs),r.compute(E2(r.inputs),{inputs:[0]})}});var C2,P2,Mg,Lg,Ng=P(()=>{"use strict";Pe();at();Fe();C2=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},P2=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=V.normalizeAxis(e.axis,o),u=n.slice(0);u.splice(i,1,...t);let a=n[i],s=V.size(u),l=X("data",r[0].dataType,r[0].dims),c=X("inputIndices",r[1].dataType,r[1].dims),f=oe("output",r[0].dataType,u),h=()=>{let y=t.length,b=`var indicesIndices  = ${c.type.indices}(0);`;for(let w=0;w<y;w++)b+=`${y>1?`indicesIndices[${w}]`:"indicesIndices"} = ${u.length>1?`outputIndices[${i+w}]`:"outputIndices"};`;b+=`
        var idx = ${c.getByIndices("indicesIndices")};
        if (idx < 0) {
          idx = idx + ${a};
        }
        var dataIndices = ${l.type.indices}(0);
      `;for(let w=0,S=0;w<o;w++)w===i?(b+=`${o>1?`dataIndices[${w}]`:"dataIndices"} = u32(idx);`,S+=y):(b+=`${o>1?`dataIndices[${w}]`:"dataIndices"} = ${u.length>1?`outputIndices[${S}]`:"outputIndices"};`,S++);return b},g=y=>`
      ${y.declareVariables(l,c,f)}
      ${y.mainStart()}
        ${y.guardAgainstOutOfBoundsWorkgroupSizes(s)}
        let outputIndices = ${f.offsetToIndices("global_idx")};
        ${h()};
        let value = ${l.getByIndices("dataIndices")};
        ${f.setByOffset("global_idx","value")};
      }`;return{name:"Gather",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:u,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:g}},Mg=r=>be({axis:r.axis}),Lg=(r,e)=>{let n=r.inputs;C2(n),r.compute(P2(r.inputs,e))}});var D2,k2,zg,Fg,Gg=P(()=>{"use strict";Pe();at();Fe();D2=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},k2=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=V.computeStrides(n),u=V.size(n),a=r[1].dims,s=r[1].dataType,l=V.size(a),c=V.normalizeAxis(e.axis,o),f=n[c],h=a.slice(0),g=V.size(h),y=X("input",t,n),b=X("indices",s,[l]),w=oe("output",t,h),S=A=>`
      const inputStrides = array<u32, ${i.length}>(${i.map(E=>`${E}u`).join(",")});
      ${A.declareVariables(y,b,w)}
      ${A.mainStart()}
      ${A.guardAgainstOutOfBoundsWorkgroupSizes(g)}

      let outputIndices = ${w.offsetToIndices("global_idx")};

      var idx = ${b.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + ${f};
      }

      var srcOffset = u32(0);

      for (var i = 0; i < ${n.length}; i++) {
        if (i == ${c}) {
          srcOffset +=  u32(idx) * inputStrides[i];
        } else {
          srcOffset += ${w.indicesGet("outputIndices","i")} * inputStrides[i];
        }
      }

      // Should never hit this with valid values in indices
      // This is a guard against malicious data in the indices input
      if (srcOffset < 0 || srcOffset >= ${u}) {
        return;
      }

      output[global_idx] = input[srcOffset];
  }`;return{name:"GatherElements",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:h,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)}}),getShaderSource:S}},zg=r=>be({axis:r.axis}),Fg=(r,e)=>{let n=r.inputs;D2(n),r.compute(k2(r.inputs,e))}});var R2,B2,M2,Vg,Wg,Ug=P(()=>{"use strict";Pe();at();Fe();R2=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},B2=(r,e,n)=>{if(n.length===0)return"0u";let t=n.length===1&&r!==1||n.length===2&&n[0]!==r,o=n[n.length-1]!==e,i="0u";return t||(i+=`+ m * ${n[n.length-1]}u`),o||(i+="+n"),i},M2=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,u]=zi.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let s=V.size(a),l="";e.transA&&e.transB?l="value += a[k * M + m] * b[n * K + k];":e.transA&&!e.transB?l="value += a[k * M + m] * b[k * N + n];":!e.transA&&e.transB?l="value += a[m * K + k] * b[n * K + k];":!e.transA&&!e.transB&&(l="value += a[m * K + k] * b[k * N + n];");let c=st(r[0].dataType),f=e.alpha===1?"":"value *= alpha;",h=r.length===3?`value += beta * c[${B2(o,i,r[2].dims)}];`:"",g=[`@group(0) @binding(0) var<storage, read> a : array<${c}>;`,`@group(0) @binding(1) var<storage, read> b : array<${c}>;`];r.length===3&&g.push(`@group(0) @binding(2) var<storage, read> c : array<${c}>;`);let y=b=>`
  const M: u32 = ${o}u;
  const N: u32 = ${i}u;
  const K: u32 = ${u}u;
  const alpha = ${c}(${e.alpha});
  const beta = ${c}(${e.beta});

  ${g.join(`
`)}
  @group(0) @binding(${r.length}) var<storage, read_write> output : array<${c}>;

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes(s)}

    let m = global_id.x / N;
    let n = global_id.x % N;

    var value = ${c}(0);
    for (var k: u32 = 0u; k<${u}u; k++) {
      ${l}
    }

    ${f}
    ${h}
    output[global_id.x] = value;

  }`;return{name:"Gemm",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:y}},Vg=(r,e)=>{R2(r.inputs),r.compute(M2(r.inputs,e))},Wg=r=>be(r)});var L2,N2,z2,F2,Hg,jg,qg=P(()=>{"use strict";dt();Pe();at();Fe();L2={name:"InstanceNormalization"},N2=(r,e)=>{let n=r[0].dims,t=n,o=2,i=V.sizeToDimension(n,o),u=V.sizeFromDimension(n,o),a=n[1],s=X("x",r[0].dataType,[n[0],n[1],u]),l=X("scale",r[1].dataType,r[1].dims),c=X("bias",r[2].dataType,r[2].dims),f=oe("output",r[0].dataType,[n[0],n[1],u]),h=[s,l,c,f],g=s.type.value,y=64,b=w=>`

  const C: u32 = ${a};
  const normSize: u32 = ${u};
  const epsilon: f32 = ${e.epsilon};
  var<workgroup> meanShared : ${g};
  var<workgroup> squaredNormShared : ${g};
  var<workgroup> workgroupShared : array<${g}, ${y}>;
  const workgroupSize = ${y}u;
  ${w.declareVariables(...h)}
  ${w.mainStart(y)}
    let norm = global_idx / workgroupSize;
    let batch = norm / C;
    let channel = norm % C;
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial: ${g} = 0;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      initial = initial + ${s.get("batch","channel","h")};
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = workgroupShared[0] / ${g}(normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = 0;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      let deviation =  ${s.get("batch","channel","h")} - meanShared;
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = workgroupShared[0];
    }
    workgroupBarrier();

    let invStdDev = 1 / sqrt(squaredNormShared / ${g}(normSize) + epsilon);
    let channelScale = invStdDev * ${l.getByOffset("channel")};
    let channelShift = ${c.getByOffset("channel")} - meanShared * channelScale;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      let value = ${s.get("batch","channel","h")} * channelScale + channelShift;
      ${f.set("batch","channel","h","value")};
    }
  }`;return{...L2,shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i}}),getShaderSource:b}},z2=(r,e,n,t,o,i,u,a)=>{let s=wr(u),l=X("input",e.dataType,e.dims,s),c=X("scale",n.dataType,n.dims,s),f=X("bias",t.dataType,t.dims,s),h=64,g=s===1?"vec2f":`mat2x${s}f`,y=s===1?"f32":`vec${s}f`,b=(z,B)=>`${g}(${z}, ${B})`,w=o*u/s,S=Math.ceil(i/h),A=z=>`
  const H: u32 = ${i};
  const C: u32 = ${u/s};
  const imageSize: u32 = ${i*u/s};

  ${z.declareVariables(l)}
  @group(0) @binding(1) var<storage, read_write> output : array<${g}>;

  ${z.mainStart(h)}
    let currentImageNumber = global_idx / ${h} / C;
    let currentChannelNumber = (global_idx / ${h}) % C;
    let wgId = global_idx % ${h};
    let wgOffset = wgId * ${S};
    if (wgOffset >= H) {
        return;
    }
    let wgMax = min(wgOffset + ${S}, H);

    let offset = currentImageNumber * imageSize + currentChannelNumber;
    var sum = ${Yt("f32",s)};
    var squaredSum = ${Yt("f32",s)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${y}(input[offset + i * C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${b("sum","squaredSum")};
  }`,E=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:s,n:o,h:i,c:u})},getRunData:()=>({outputs:[{dims:[o,u,h,2],dataType:1}],dispatchGroup:{x:o*u/s}}),getShaderSource:A},{inputs:[e],outputs:[-1]})[0],R=z=>`
  const H: u32 = ${i};
  const C: u32 = ${u/s};
  const imageSize: u32 = ${h*u/s};
  const epsilon: f32 = ${a};

  @group(0) @binding(0) var<storage, read> input : array<${g}>;
  @group(0) @binding(1) var<storage, read> scale : array<${c.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${f.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${g}>;

  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes(w)}
    let currentImageNumber = global_idx / C;
    let currentChannelNumber = global_idx % C;

    let offset = currentImageNumber * imageSize;
    var sum = ${Yt("f32",s)};
    var squaredSum = ${Yt("f32",s)};
    for (var i: u32 = 0; i < ${h}; i++) {
        let value = input[offset + i + currentChannelNumber * ${h}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(H);
    squaredSum = squaredSum / f32(H);
    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);
    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);
    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${b("channelScale","channelShift")};
  }`;return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:s,n:o,h:i,c:u,epsilon:a})},getRunData:()=>({outputs:[{dims:[o,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:R},{inputs:[E,n,t],outputs:[-1]})[0]},F2=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],u=t[t.length-1],a=V.sizeFromDimension(t,1)/u,s=wr(u),l=V.size(o)/s,c=X("input",e[0].dataType,e[0].dims,s),f=oe("output",e[0].dataType,o,s),h=st(e[0].dataType),g=s===1?"vec2f":`mat2x${s}f`,y=s===1?h:`vec${s}<${h}>`,b=z2(r,e[0],e[1],e[2],i,a,u,n.epsilon),w=S=>`
  const H: u32 = ${a};
  const C: u32 = ${u/s};

  @group(0) @binding(0) var<storage, read> input : array<${c.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${g}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${f.type.storage}>;

  ${S.mainStart()}
    let currentImageNumber = global_idx / (C * H);
    let currentChannelNumber = global_idx % C;

    let scaleOffset = currentImageNumber * C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${y}(scale[0]), ${y}(scale[1]));
  }`;r.compute({name:"InstanceNormalization",shaderCache:{hint:`${n.cacheKey}`},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)}}),getShaderSource:w},{inputs:[e[0],b]})},Hg=r=>be({epsilon:r.epsilon,format:r.format}),jg=(r,e)=>{e.format==="NHWC"?F2(r,r.inputs,e):r.compute(N2(r.inputs,e))}});var G2,V2,Kg,Yg,Xg=P(()=>{"use strict";dt();Pe();at();Fe();G2=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},V2=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],u=t,a=V.normalizeAxis(e.axis,t.length),s=V.sizeToDimension(t,a),l=V.sizeFromDimension(t,a),c=V.size(o.dims),f=i?V.size(i.dims):0;if(c!==l||i&&f!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${c} and bias size of ${f}`);let h=[];for(let R=0;R<t.length;++R)R<a?h.push(t[R]):h.push(1);let g=wr(l),y=st(r[0].dataType),b=[X("x",r[0].dataType,r[0].dims,g),X("scale",o.dataType,o.dims,g)];i&&b.push(X("bias",i.dataType,i.dims,g)),b.push(oe("output",r[0].dataType,u,g));let w=n>1,S=n>2;w&&b.push(oe("meanDataOutput",1,h)),S&&b.push(oe("invStdOutput",1,h));let A=R=>`
  const normSize: f32 = ${l};
  const normSizeVectorized: u32 = ${l/g};
  const epsilon: f32 = ${e.epsilon};

  ${R.declareVariables(...b)}
  ${R.mainStart()}
    ${R.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let offset = global_idx * normSizeVectorized;
    var meanVector = ${Yt("f32",g)};
    var meanSquareVector = ${Yt("f32",g)};

    for (var h: u32 = 0u; h < normSizeVectorized; h++) {
      let value = ${an(y,g,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${Br("meanVector",g)} / normSize;
    let meanSquare = sqrt(${Br("meanSquareVector",g)} 
      / normSize - mean * mean + epsilon);

    for (var j: u32 = 0; j < normSizeVectorized; j++) {
      let f32input = ${an(y,g,"x[j + offset]")};
      let f32scale = ${an(y,g,"scale[j]")};
      output[j + offset] = ${b[0].type.value}((f32input - mean) / meanSquare * f32scale
        ${i?`+ ${an(y,g,"bias[j]")}`:""}
      );
    }

    ${w?"meanDataOutput[global_idx] = mean":""};
    ${S?"invStdOutput[global_idx] = 1 / meanSquare":""};
  }`,E=[{dims:u,dataType:r[0].dataType}];return w&&E.push({dims:h,dataType:1}),S&&E.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${e.cacheKey}|${n}|${r.length}`},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:A}},Kg=r=>be({axis:r.axis,epsilon:r.epsilon}),Yg=(r,e)=>{G2(r.inputs),r.compute(V2(r.inputs,e,r.outputCount))}});var W2,Jg,Zg=P(()=>{"use strict";Pe();go();W2=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},Jg=r=>{W2(r.inputs);let e=sr.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");r.compute(Zi(r.inputs,{activation:"",activationCacheKey:""},e))}});var U2,H2,j2,q2,K2,Y2,X2,J2,Z2,Qg,eb,tb=P(()=>{"use strict";dt();Pe();at();Fe();U2=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1)throw new Error("Input type must be float.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},H2=(r,e,n,t,o,i,u)=>{let a=n.length,s="";for(let l=a-1;l>=0;--l)s+=`
            k = i32(${r.indicesGet("indices",l)}) - ${o[l]};
            if (k < 0) {
              break;
            }
            if (k >= ${n[l]}) {
              break;
            }
            offset += k * ${t[l]};
        `;return`
          value = ${i}(${u});
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},j2=(r,e,n,t,o)=>{let i=n.length,u="";for(let a=i-1;a>=0;--a)u+=`
                k = i32(${r.indicesGet("indices",a)}) - ${o[a]};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = ${2*(n[a]-1)};
                  k = k % _2n_1;
                  if(k >= ${n[a]}) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * ${t[a]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},q2=(r,e,n,t,o)=>{let i=n.length,u="";for(let a=i-1;a>=0;--a)u+=`
                k = i32(${r.indicesGet("indices",a)}) - ${o[a]};
                if (k < 0) {
                  k = 0;
                }
                if (k >= ${n[a]}) {
                  k = ${n[a]-1};
                }
                offset += k * ${t[a]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},K2=(r,e,n,t,o)=>{let i=n.length,u="";for(let a=i-1;a>=0;--a)u+=`
                k = i32(${r.indicesGet("indices",a)}) - ${o[a]};
                if (k < 0)  {
                  k += ${n[a]};
                }
                if (k >= ${n[a]}) {
                  k -= ${n[a]};
                }
                offset += k * ${t[a]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},Y2=(r,e,n,t,o,i)=>{switch(o.mode){case 0:return H2(r,e,n,t,o.pads,i,o.value);case 1:return j2(r,e,n,t,o.pads);case 2:return q2(r,e,n,t,o.pads);case 3:return K2(r,e,n,t,o.pads);default:throw new Error("Invalid mode")}},X2=(r,e,n,t)=>{let o=e[0].dims,i=V.padShape(o.slice(),n.pads),u=V.size(i),a=V.computeStrides(o),s=oe("output",e[0].dataType,i),l=X("x",e[0].dataType,o),c=Y2(s,i,o,a,n,t);return`
              ${r.declareVariables(l,s)}
              ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes(u)}

              let indices = ${s.offsetToIndices("global_idx")};

              var value = ${t}(0);
              ${c}
              output[global_idx] = value;
          }`},J2=(r,e)=>{let n=V.padShape(r[0].dims.slice(),e.pads);return{name:"Pad",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(V.size(n)/64)}}),getShaderSource:t=>X2(t,r,e,"f32")}},Z2=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let s=0;s<a.length;s++)i[Number(a[s])]=Number(n[s]),i[Number(a[s])+o]=Number(n[s+a.length])}else n.forEach((a,s)=>i[Number(s)]=Number(a));let u=[];return i.forEach(a=>u.push(a)),be({mode:e.mode,value:t,pads:u})}else return e},Qg=(r,e)=>{U2(r.inputs);let n=Z2(r.inputs,e);r.compute(J2(r.inputs,n),{inputs:[0]})},eb=r=>{let e=r.mode,n=r.value,t=r.pads;return be({mode:e,value:n,pads:t})}});var ea,rb,nb,ob,ib,ab,sb,ub,lb,cb,db,fb,pb,hb,mb,gb=P(()=>{"use strict";Pe();at();Fe();ea=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("Pool ops supports 1-D or 2-D inputs only for now.")},rb=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),u=e.kernelShape.slice(),a=e.strides.slice(),s=i?e.dilations.slice():[],l=e.pads.slice();on.adjustPoolAttributes(n,o,u,a,s,l);let c=on.computePoolOutputShape(n,o,a,s,u,l,e.autoPad),f=Object.assign({},e);i?Object.assign(f,{kernelShape:u,strides:a,pads:l,dilations:s,cacheKey:e.cacheKey}):Object.assign(f,{kernelShape:u,strides:a,pads:l,cacheKey:e.cacheKey});let h=c.slice();return h.push(h.splice(1,1)[0]),[f,t?h:c]},nb=(r,e,n,t,o,i,u,a)=>{let s=o.format==="NHWC",l=n,c=e.type.value,f=l.length,h=V.size(t),g=oe("output",e.type.tensor,t);if(o.kernelShape.length<=2){let y=o.kernelShape[o.kernelShape.length-1],b=o.strides[o.strides.length-1],w=o.pads[o.pads.length/2-1],S=o.pads[o.pads.length-1],A=f-(s?2:1),E="",R="",z="";if(w+S!==0?E=`
                for (var i: u32 = 0u; i < ${y}u; i++) {
                  xIndices[${A}] = indices[${A}] * ${b} - ${w} + i;
                  if (xIndices[${A}] < 0 || xIndices[${A}] >= ${l[A]}) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:E=`
                for (var i: u32 = 0u; i < ${y}u; i++) {
                  xIndices[${A}] = indices[${A}] * ${b} - ${w} + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let G=o.kernelShape[o.kernelShape.length-2],Y=o.strides[o.strides.length-2],Z=o.pads[o.pads.length/2-2],me=o.pads[o.pads.length-2],k=f-(s?3:2),ee=l[k];Z+me!==0?R=`
                for (var j: u32 = 0u; j < ${G}u; j++) {
                  xIndices[${k}] = indices[${k}] * ${Y} - ${Z} + j;
                  if (xIndices[${k}] < 0 || xIndices[${k}] >= ${ee}) {
                    pad+= ${y};
                    continue;
                  }
              `:R=`
                for (var j: u32 = 0u; j < ${G}u; j++) {
                  xIndices[${k}] = indices[${k}] * ${Y} - ${Z} + j;
                `,z=`
              }
            `}return`
            ${r.declareVariables(e,g)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes(h)}

              let indices = ${g.offsetToIndices("global_idx")};
              var xIndices = ${g.offsetToIndices("global_idx")};

              var value: ${c} = ${c}(${a});
              var pad = 0;
              ${R}
              ${E}
              ${z}
              ${u}

              output[global_idx] = value;
            }`}else{if(s)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let y=V.size(o.kernelShape),b=V.computeStrides(o.kernelShape),w=b.length,S=o.pads.length,A=o.pads.reduce((z,B)=>z+B),E="";return A?E=`
                if (xIndices[j] >= inputDims[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:E=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.declareVariables(e,g)}

            const pads = array<u32, ${S}>(${o.pads.map(z=>`${z}u`).join(",")});
            const inputDims = array<u32, ${f}>(${l.map(z=>`${z}u`).join(",")});
            const kernelStrides = array<u32, ${w}>(${b.map(z=>`${z}u`).join(",")});
            const strides = array<u32, ${w}>(${o.strides.map(z=>`${z}u`).join(",")});

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes(h)}

              let indices = ${g.offsetToIndices("global_idx")};
              let xIndices = ${g.offsetToIndices("global_idx")};

              var offsets: array<u32, ${w}>;

              var value = ${g.type.value}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < ${y}u; i++) {
                var offset = i;
                for (var j = 0u; j < ${w-1}u; j++) {
                  offsets[j] = offset / kernelStrides[j];
                  offset -= offsets[j] * kernelStrides[j];
                }
                offsets[${w-1}] = offset;

                isPad = false;
                for (var j = ${f-w}u; j < ${f}u; j++) {
                  xIndices[j] = indices[j] * strides[j - ${f-w}u]
                    + offsets[j - ${f-w}u] - pads[j - 2u];
                  ${E}
              }
              ${u}

              output[global_idx] = value;
            }`}},ob=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),ib=(r,e,n,t)=>{let[o,i]=rb(e,t,n),u=V.size(o.kernelShape),a=X("x",e.dataType,e.dims),s=a.type.value,l="value += x_val;",c="";return o.countIncludePad?c+=`value /= ${s}(${u});`:c+=`value /= ${s}(${u} - pad);`,{name:r,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(V.size(i)/64)}}),getShaderSource:f=>nb(f,a,e.dims,i,o,l,c,"0.0")}},ab=r=>{let e=r.count_include_pad!==0,n=ob(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return be({countIncludePad:e,...n})},sb=(r,e)=>{ea(r.inputs),r.compute(ib("AveragePool",r.inputs[0],!1,e))},ub={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},lb=r=>{let e=r.format;return{format:e,...ub,cacheKey:e}},cb=(r,e)=>{ea(r.inputs),r.compute(ib("GlobalAveragePool",r.inputs[0],!0,e))},db=(r,e,n,t)=>{let[o,i]=rb(e,t,n),u=`
      value = max(x_val, value);
    `,a="",s=X("x",e.dataType,e.dims);return{name:r,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(V.size(i)/64)}}),getShaderSource:l=>nb(l,s,e.dims,i,o,u,a,"-1e5")}},fb=(r,e)=>{ea(r.inputs),r.compute(db("MaxPool",r.inputs[0],!1,e))},pb=r=>{let e=r.storage_order,n=r.dilations,t=ob(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return be({storageOrder:e,dilations:n,...t})},hb=r=>{let e=r.format;return{format:e,...ub,cacheKey:e}},mb=(r,e)=>{ea(r.inputs),r.compute(db("GlobalMaxPool",r.inputs[0],!0,e))}});var e1,t1,bb,yb=P(()=>{"use strict";kt();dt();Fe();e1=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},t1=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],u=o,a=oe("output",t,i),s=a.type.storage,l=c=>`
        ${c.declareVariables(a)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes(u)}
        output[global_idx] = ${s}(${r}) + ${s}(global_idx) * ${s}(${n});
      }`;return{name:"Range",shaderCache:{hint:[r,e,n].map(c=>c.toString()).join("_")},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(u/64)}})}},bb=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),xe.webgpu.validateInputContent&&e1(e,n,t),r.compute(t1(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var r1,n1,o1,i1,a1,s1,u1,l1,c1,d1,f1,p1,h1,m1,g1,vb,xb,wb=P(()=>{"use strict";Pe();at();Fe();r1=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},n1=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},o1=(r,e,n,t,o,i)=>{let[u,a,s]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(u>0&&r.length>u&&r[u].dims.length>0)r[u].getFloat32Array().forEach(c=>i.push(c));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(c=>t.push(c)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");r1(t,e),e.axes.length>0&&n1(t,e.axes,l).forEach((c,f)=>t[f]=c)}if(s>0&&r.length>s&&(r[s].getBigInt64Array().forEach(c=>o.push(Number(c))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},i1=r=>"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(r){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join(`
`);case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",a1=(r,e)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",s1=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,u)=>{t[i]=o[u],t[u+n]=o[e.length+u]}),t):o},u1=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,u)=>o[i]=n[u])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,u)=>Math.round(i*e[u]))}return o},l1=(r,e,n,t)=>{let o=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(u=>n[u]),Number.MAX_VALUE):Math.min(...n,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(u=>n[u]),Number.MIN_VALUE):Math.max(...n,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();n.fill(1,0,n.length);let i=r.slice();return t.axes.length>0?(t.axes.forEach(u=>n[u]=o),t.axes.forEach(u=>i[u]=Math.round(r[u]*n[u]))):(n.fill(o,0,n.length),i.forEach((u,a)=>i[a]=Math.round(u*n[a]))),i},c1=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${r.type.indices}) -> array<f32, ${n.length}> {
      const inputShape = array<u32, ${e.length}>(${e.map(i=>`${i}u`).join(",")});
      const outputShape = array<u32, ${n.length}>(${n.map(i=>`${i}u`).join(",")});
      const scales = array<f32, ${t.length}>(${t.map(i=>`${i}f`).join(",")});
      const roi = array<f32, ${o.length}>(${o.map(i=>`${i}f`).join(",")});
      var originalIndices: array<f32, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var outputIndex = ${n.length===1?"outputIndices":"outputIndices[i]"};
        if (scales[i] == 1.0) {
          originalIndices[i] = f32(outputIndex);
        } else {
          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],
                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${e.length}]);
        }
      }
      return originalIndices;
    }`,d1=(r,e,n,t,o,i,u)=>`
    fn calculateInputIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> ${r.type.indices} {
        const inputShape = array<u32, ${n.length}>(${n.map(a=>`${a}u`).join(",")});
        const outputShape = array<u32, ${t.length}>(${t.map(a=>`${a}u`).join(",")});
        const scales = array<f32, ${o.length}>(${o.map(a=>`${a}f`).join(",")});
        const roi = array<f32, ${i.length}>(${i.map(a=>`${a}f`).join(",")});
        var inputIndices: ${r.type.indices};
        for (var i:u32 = 0; i < ${t.length}; i++) {
          var outputIndex = ${t.length===1?"outputIndices":"outputIndices[i]"};
          var inputIndex: u32;
          if (scales[i] == 1.0) {
            inputIndex = outputIndex;
          } else {
            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],
                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${n.length}]);
            if (!${u} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {
              if (original_idx < 0) {
                inputIndex = 0;
              } else if (original_idx > (f32(inputShape[i]) - 1)) {
                inputIndex = inputShape[i] - 1;
              } else {
                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));
              }
            } else {
              inputIndex = u32(original_idx);
            }
          }
          ${r.indicesSet("inputIndices","i","inputIndex")}
        }
        return inputIndices;
    }`,f1=(r,e)=>`
    fn checkInputIndices(inputIndices: ${r.type.indices}) -> bool {
      const inputShape = array<u32, ${e.length}>(${e.map(n=>`${n}u`).join(",")});
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var inputIndex = ${e.length===1?"inputIndices":"inputIndices[i]"};
        if (inputIndex < 0 || inputIndex >= inputShape[i]) {
          return false;
        }
      }
      return true;
    }`,p1=(r,e,n,t,o,i,u)=>{let[a,s,l,c]=n.length===2?[-1,0,1,-1]:o[1]===1?[0,2,3,1]:[0,1,2,3];return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {
      var inputIndices: ${r.type.indices};
      inputIndices[${s}] = max(0, min(row, ${n[s]} - 1));
      inputIndices[${l}] = max(0, min(col, ${n[l]} - 1));
      if (${n.length} > 2) {
        inputIndices[${c}] = channel;
        inputIndices[${a}] = batch;
      };
      return input[${r.indicesToOffset("inputIndices")}];
    }

    fn bilinearInterpolation(outputIndices: ${e.type.indices}) -> f32 {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);
      var row:f32 = originalIndices[${s}];
      var col:f32 = originalIndices[${l}];
      if (${i} && (row < 0 || row > (${n[s]} - 1) || col < 0 || col > ${n[l]} - 1)) {
        return ${u};
      }
      row = max(0, min(row, ${n[s]} - 1));
      col = max(0, min(col, ${n[l]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = 0;
      var batch: u32 = 0;
      if (${n.length>2}) {
        channel = u32(originalIndices[${c}]);
        batch = u32(originalIndices[${a}]);
      }
      var x11: f32 = getInputValue(batch, channel, row1, col1);
      var x12: f32 = getInputValue(batch, channel, row1, col2);
      var x21: f32 = getInputValue(batch, channel, row2, col1);
      var x22: f32 = getInputValue(batch, channel, row2, col2);
      var dx1: f32 = row - f32(row1);
      var dx2: f32 = f32(row2 ) - row;
      var dy1 = col - f32(col1);
      var dy2 = f32(col2) - col;
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},h1=(r,e,n,t,o,i,u,a,s,l)=>{let[c,f]=n.length===2?[0,1]:o[1]===1?[2,3]:[1,2],h=g=>{let y=g===c?"row":"col";return`
      fn ${y}CubicInterpolation(inputIndices: ${r.type.indices}, outputIndices: ${e.type.indices}) -> f32 {
        var outputIndex = ${t.length===1?"outputIndices":`outputIndices[${g}]`};
        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${o[g]},
        f32(${t[g]}), f32(${n[g]}), ${i[g]}, ${i[g]} + ${n.length});
        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[g]} - 1))) {
          return ${s};
        }
        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${y}: f32 = originalIdx + f32(i);
          if (${y} < 0 || ${y} >= ${n[g]}) {
            if (${l}) {
              coefs[i + 1] = 0.0;
              continue;
            } else if (${a}) {
              return ${s};
            } else {
              ${y} = max(0, min(${y}, ${n[g]} - 1));
            }
          }
          var inputIndicesCopy: ${r.type.indices} = inputIndices;
          inputIndicesCopy[${g}] = u32(${y});
          data[i + 1] = ${g===c?`input[${r.indicesToOffset("inputIndicesCopy")}];`:`
                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${h(c)};
    ${h(f)};
  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {
    var absS = abs(s);
    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: f32 = 1.0 - absS;
    var twoMinusAbsS: f32 = 2.0 - absS;
    var onePlusAbsS: f32 = 1.0 + absS;
    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};
    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;
    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {
    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(outputIndices: ${e.type.indices}) -> f32 {
    var inputIndices: ${r.type.indices} = outputIndices;
    return colCubicInterpolation(inputIndices, outputIndices);
  }
    `},m1=(r,e,n,t,o,i)=>{let u=r.dims,a=s1(i,e.axes,u.length),s=u1(u,t,o,e.axes),l=t.slice();t.length===0&&(l=u.map((w,S)=>w===0?1:s[S]/w),e.keepAspectRatioPolicy!=="stretch"&&(s=l1(u,s,l,e)));let c=oe("output",r.dataType,s),f=X("input",r.dataType,u),h=V.size(s),g=u.length===s.length&&u.every((w,S)=>w===s[S]),y=e.coordinateTransformMode==="tf_crop_and_resize",b=w=>`
      ${i1(e.coordinateTransformMode)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${f1(f,u)};
              ${a1(e.nearestMode,n)};
              ${d1(f,c,u,s,l,a,y)};
              `;case"linear":return`
              ${c1(c,u,s,l,a)};
              ${p1(f,c,u,s,l,y,e.extrapolationValue)};
              `;case"cubic":return`
            ${h1(f,c,u,s,l,a,e.cubicCoeffA,y,e.extrapolationValue,e.excludeOutside)};
            `;default:throw Error("Invalid resize mode")}})()};
      ${w.declareVariables(f,c)}
      ${w.mainStart()}
        ${w.guardAgainstOutOfBoundsWorkgroupSizes(h)}
        if (${g}) {
          output[global_idx] = input[global_idx];
        } else {
          let outputIndices = ${c.offsetToIndices("global_idx")};
          var inputIndices: ${f.type.indices};
          ${(()=>{switch(e.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);
                  if (checkInputIndices(inputIndices)) {
                    output[global_idx] = input[${f.indicesToOffset("inputIndices")}];
                  } else {
                    output[global_idx] = ${e.extrapolationValue};
                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
        }
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}`},getShaderSource:b,getRunData:()=>({outputs:[{dims:s,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(h/64)}})}},g1=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},vb=(r,e)=>{let n=[],t=[],o=[],i=g1(r);o1(r.inputs,e,i,n,t,o),r.compute(m1(r.inputs[0],e,i,n,t,o),{inputs:[0]})},xb=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,u=r.extrapolationValue,a=r.keepAspectRatioPolicy,s=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return be({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:u,keepAspectRatioPolicy:a,mode:s,nearestMode:l})}});var b1,y1,Tb,$b,Sb=P(()=>{"use strict";dt();Pe();at();Fe();b1=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let u=r[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let u=r[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},y1=(r,e,n,t)=>{let o=r[0].dims,i=V.size(o),u=o,a=i,s=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],c=r.length>3,f=r.length>4,h=t&&n>1,g=t&&n>2,y=n>3,b=wr(s),w=[X("x",r[0].dataType,r[0].dims,b),X("skip",r[1].dataType,r[1].dims,b),X("gamma",r[2].dataType,r[2].dims,b)];c&&w.push(X("beta",r[3].dataType,r[3].dims,b)),f&&w.push(X("bias",r[4].dataType,r[4].dims,b)),w.push(oe("output",r[0].dataType,u,b)),h&&w.push(oe("meanOutput",1,l)),g&&w.push(oe("invStdOutput",1,l)),y&&w.push(oe("inputSkipBiasSum",r[0].dataType,u,b));let S=st(r[0].dataType),A=R=>`
      const hiddenSize: f32 = ${s};
      const hiddenSizeVectorized: u32 = ${s/b};
      const epsilon: f32 = ${e.epsilon};

      ${R.declareVariables(...w)}

      ${R.mainStart()}
        ${R.guardAgainstOutOfBoundsWorkgroupSizes(a/s)}
        let offset = global_idx * hiddenSizeVectorized;
        var sum = ${Yt("f32",b)};
        var squareSum = ${Yt("f32",b)};
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          let skipValue = skip[offset + i];
          let biasValue = ${f?"bias[i]":"0.0"};
          let inputValue = x[offset + i];
          let value = inputValue + skipValue + biasValue;
          ${y?"inputSkipBiasSum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32Value = ${an(S,b,"value")};
          sum += f32Value;
          squareSum += f32Value * f32Value;
        }
        let mean = ${Br("sum",b)} / hiddenSize;
        let variance = sqrt(${Br("squareSum",b)} / hiddenSize - mean * mean + epsilon);
        ${h?"meanOutput[global_idx] = mean;":""}
        ${g?"invStdOutput[global_idx] = 1.0 / variance;":""}
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          output[offset + i] = (output[offset + i] - ${S}(mean)) / ${S}(variance) * gamma[i]
           + ${c?"beta[i]":"0.0"};
        }
      }`,E=[{dims:u,dataType:r[0].dataType}];return n>1&&E.push({dims:l,dataType:1}),n>2&&E.push({dims:l,dataType:1}),n>3&&E.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:e.cacheKey},getShaderSource:A,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(a/s/64)}})}},Tb=(r,e)=>{b1(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(y1(r.inputs,e,r.outputCount,!1),{outputs:t})},$b=r=>{let e=r.epsilon;return be({epsilon:e})}});var v1,ta,x1,Ib,w1,T1,_b,Ab,Ob=P(()=>{"use strict";dt();Pe();at();Fe();v1=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},ta=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},x1=(r,e)=>{if(r.length>1){let n=ta(r,1),t=ta(r,2),o=ta(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),be({starts:n,ends:t,axes:o})}else return e},Ib=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},w1=(r,e,n,t)=>`fn calculateInputIndices(outputIndices: ${e.type.indices}) -> ${r.type.indices} {
          var inputIndices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            var outputIndex = ${t.length===1?"outputIndices":"outputIndices[i]"};
            var inputIndex = outputIndex * steps[i] + starts[i] + carry;
            carry = inputIndex / inputShape[i];
            inputIndex = inputIndex % inputShape[i];
            if (signs[i] < 0) {
              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];
            }
            ${n.length===1?"inputIndices":"inputIndices[i]"} = inputIndex;
          }
          return inputIndices;
      }`,T1=(r,e)=>{let n=r[0].dims,t=V.size(n),o=e.axes.length>0?V.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=ta(r,4);i.forEach(b=>b!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let u=e.starts.map((b,w)=>Ib(b,w,n,o,i)),a=e.ends.map((b,w)=>Ib(b,w,n,o,i));if(o.length!==n.length)for(let b=0;b<n.length;++b)o.includes(b)||(u.splice(b,0,0),a.splice(b,0,n[b]),i.splice(b,0,1));let s=i.map(b=>Math.sign(b));i.forEach((b,w,S)=>{if(b<0){let A=(a[w]-u[w])/b,E=u[w],R=E+A*i[w];u[w]=R,a[w]=E,S[w]=-b}});let l=n.slice(0);o.forEach((b,w)=>{l[b]=Math.ceil((a[b]-u[b])/i[b])});let c={dims:l,dataType:r[0].dataType},f=oe("output",r[0].dataType,l),h=X("input",r[0].dataType,n),g=V.size(l),y=b=>`
      ${b.declareVariables(h,f)}
        const signs = array<i32, ${s.length}>(${s.map(w=>`${w}i`).join(",")});
        const starts = array<u32, ${u.length}>(${u.map(w=>`${w}u`).join(",")});
        const ends = array<u32, ${a.length}>(${a.map(w=>`${w}u`).join(",")});
        const steps = array<u32, ${i.length}>(${i.map(w=>`${w}u`).join(",")});
        const inputShape = array<u32, ${n.length}>(${n.map(w=>`${w}u`).join(",")});

        ${w1(h,f,n,l)}
        ${b.mainStart()}
          ${b.guardAgainstOutOfBoundsWorkgroupSizes(g)}
          let outputIndices = ${f.offsetToIndices("global_idx")};
          let inputIndices = calculateInputIndices(outputIndices);
          ${f.setByOffset("global_idx",h.getByIndices("inputIndices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${e.cacheKey}|${r[4]?.dims??""}`},getShaderSource:y,getRunData:()=>({outputs:[c],dispatchGroup:{x:Math.ceil(t/64)}})}},_b=(r,e)=>{v1(r.inputs,e);let n=x1(r.inputs,e);r.compute(T1(r.inputs,n),{inputs:[0]})},Ab=r=>{let e=r.starts,n=r.ends,t=r.axes;return be({starts:e,ends:n,axes:t})}});var $1,S1,Eb,Cb,Pb=P(()=>{"use strict";Pe();at();Fe();$1=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},S1=(r,e)=>{let n=st(r.dataType),t=r.dims,o=V.size(t),i=64,u=e.axis;if(u<0&&(u=t.length+u),u<t.length-1)throw new Error("softmax only supports last axis for now.");let a=t[u],s=o/a,l=wr(a),c=a/l,f=l===1?n:`vec${l}<${n}>`,h=(b,w)=>w===4?`max(max(${b}.x, ${b}.y), max(${b}.z, ${b}.w))`:w===2?`max(${b}.x, ${b}.y)`:w===3?`max(max(${b}.x, ${b}.y), ${b}.z)`:b,g=n==="f32"?`var threadMax = ${f}(-3.402823e+38f);`:`var threadMax = ${f}(-65504.0h);`;return{name:"Softmax",getRunData:()=>({outputs:[{dims:t,dataType:r.dataType}],dispatchGroup:{x:s}}),getShaderSource:b=>`
      var<workgroup> rowMaxShared : ${f};
      var<workgroup> rowSumShared : ${f};
      var<workgroup> threadShared : array<${f}, ${i}>;

      @group(0) @binding(0) var<storage, read> x : array<${f}>;
      @group(0) @binding(1) var<storage, read_write> result : array<${f}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${f} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${f}) {
        let index = row * row_stride + col;
        result[index] = value;
      }

      @compute @workgroup_size(${i}, 1, 1)
      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {
        let gindex = i32(global_id.x);
        let lindex = i32(local_id.x);
        const wg = ${i};
        let row = gindex / wg;
        let cols = ${c};
        let row_stride : i32 = ${c};

        // find the rows max
        ${g}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${f}(${h("threadShared[0]",l)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${f}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${f}(${Br("threadShared[0]",l)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`}},Eb=(r,e)=>{$1(r.inputs),r.compute(S1(r.inputs[0],e))},Cb=r=>be({axis:r.axis})});var I1,_1,A1,O1,E1,Db,kb,Rb=P(()=>{"use strict";Pe();at();Fe();I1=r=>{if(!r||r.length<1)throw new Error("too few inputs")},_1=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),be({numOutputs:t,axis:e.axis,splitSizes:n})},A1=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < sizeInConcatAxis[i]) {
        return i;
    }
    }
    return ${r}u;
}`,O1=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (outputNumber == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (outputNumber == ${t}) { ${o} }`)}return`
      fn writeBufferData(outputNumber: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},E1=(r,e)=>{let n=r[0].dims,t=V.size(n),o=r[0].dataType,i=n.length,u=e.axis,a=u<0?n.length+u:u,s=new Array(e.numOutputs),l=X("input",o,n),c=new Array(e.numOutputs),f=[],h=[],g=0;for(let w=0;w<e.numOutputs;w++){g+=e.splitSizes[w],c[w]=g;let S=n.slice();S[e.axis]=e.splitSizes[w],h.push(S),s[w]=oe(`output${w}`,o,h[w]),f.push({dims:h[w],dataType:r[0].dataType})}let y=i<2?"indices":`indices[${a}]`,b=w=>`
  ${w.declareVariables(l,...s)}
  const sizeInConcatAxis = array<u32, ${c.length}>(${c.map(S=>`${S}u`).join(",")});
  ${A1(c.length)}
  ${O1(s)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes(t)}

    var indices = ${l.offsetToIndices("global_idx")};
    let outputNumber = calculateOutputIndex(${y});
    if (outputNumber != 0) {
        ${y} -= sizeInConcatAxis[outputNumber - 1u];
    }
    writeBufferData(outputNumber, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey},getShaderSource:b,getRunData:()=>({outputs:f,dispatchGroup:{x:Math.ceil(t/64)}})}},Db=(r,e)=>{I1(r.inputs);let n=r.inputs.length===1?e:_1(r.inputs,e);r.compute(E1(r.inputs,n),{inputs:[0]})},kb=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return be({axis:e,numOutputs:t,splitSizes:n})}});var Bb,C1,P1,D1,Mb,Lb=P(()=>{"use strict";dt();Pe();Fe();Bb=r=>Array.from(r.getBigInt64Array(),Number),C1=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Bb(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},P1=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},D1=r=>{let e=r[0].dims,n=Bb(r[1]),t=P1(e,n),o=V.size(t),i=r[0].dataType,u=X("input",i,e),a=oe("output",i,t),s=l=>`
      const inputShape = ${u.indices(...e)};
      ${l.declareVariables(u,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes(o)}
      let outputIndices = ${a.offsetToIndices("global_idx")};
      var inputIndices: ${u.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let inputDimValue = ${a.indicesGet("outputIndices","i")}  % ${u.indicesGet("inputShape","i")};

        ${u.indicesSet("inputIndices","i","inputDimValue")}
      }
      ${a.setByOffset("global_idx",u.getByIndices("inputIndices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:s}},Mb=r=>{C1(r.inputs),r.compute(D1(r.inputs),{inputs:[0]})}});var k1,R1,Nb,zb=P(()=>{"use strict";dt();Pe();Fe();k1=(r,e,n,t,o)=>{let i=V.size(n),u=Math.ceil(i/4),a=oe("outputData",o,n,4),s=X("aData",e[1].dataType,e[1].dims,4),l=X("bData",e[2].dataType,e[2].dims,4),c=X("cData",e[0].dataType,e[0].dims,4),f,h=(g,y,b)=>`select(${y}, ${g}, ${b})`;if(!t)f=a.setByOffset("global_idx",h(s.getByOffset("global_idx"),l.getByOffset("global_idx"),c.getByOffset("global_idx")));else{let g=(y,b,w="")=>{let S=`aData[indexA${b}][componentA${b}]`,A=`bData[indexB${b}][componentB${b}]`,E=`bool(cData[indexC${b}] & ${4278190080>>>(3-b)*8}u)`;return`
            let outputIndices${b} = ${a.offsetToIndices(`global_idx * 4u + ${b}u`)};
            let offsetA${b} = ${s.broadcastedIndicesToOffset(`outputIndices${b}`,a)};
            let offsetB${b} = ${l.broadcastedIndicesToOffset(`outputIndices${b}`,a)};
            let offsetC${b} = ${c.broadcastedIndicesToOffset(`outputIndices${b}`,a)};
            let indexA${b} = offsetA${b} / 4u;
            let indexB${b} = offsetB${b} / 4u;
            let indexC${b} = offsetC${b} / 4u;
            let componentA${b} = offsetA${b} % 4u;
            let componentB${b} = offsetB${b} % 4u;
            ${y}[${b}] = ${w}(${h(S,A,E)});
          `};o===9?f=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:f=`
            ${g("outputData[global_idx]",0)}
            ${g("outputData[global_idx]",1)}
            ${g("outputData[global_idx]",2)}
            ${g("outputData[global_idx]",3)}
          `}return`
        ${r.declareVariables(c,s,l,a)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes(u)}
        ${f}
      }`},R1=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(V.areEqual(e,n)&&V.areEqual(n,t)),u=e,a=V.size(e);if(i){let s=sr.calcShape(sr.calcShape(e,n,!1),t,!1);if(!s)throw new Error("Can't perform where op on the given tensors");u=s,a=V.size(u)}return{name:"Where",getShaderSource:s=>k1(s,r,u,i,o),getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)}})}},Nb=r=>{r.compute(R1(r.inputs))}});var Fb,Gb=P(()=>{"use strict";xm();Tm();tg();fg();mg();qs();Og();Dg();Bg();Ng();Gg();Ug();qg();Xg();Zg();tb();gb();yb();Vi();wb();Sb();Ob();Pb();Rb();Lb();fo();Ws();zb();Fb=new Map([["Abs",[$m]],["Acos",[Sm]],["Acosh",[Im]],["Add",[rg]],["ArgMax",[vm,Gs]],["ArgMin",[ym,Gs]],["Asin",[_m]],["Asinh",[Am]],["Atan",[Om]],["Atanh",[Em]],["AveragePool",[sb,ab]],["BiasAdd",[wm]],["BiasSplitGelu",[eg]],["Cast",[Pm,Cm]],["Ceil",[km]],["ClipV10",[Vs]],["Clip",[Dm]],["Concat",[pg,hg]],["Conv",[Ys,Ks]],["ConvTranspose",[Ag,_g]],["Cos",[Rm]],["Cosh",[Bm]],["Div",[ng]],["Einsum",[Cg,Pg]],["Elu",[Mm,Ui]],["Equal",[og]],["Erf",[Lm]],["Exp",[Nm]],["Expand",[Rg]],["Floor",[zm]],["FusedConv",[Ys,Ks]],["Gather",[Lg,Mg]],["GatherElements",[Fg,zg]],["Gelu",[Fm]],["Gemm",[Vg,Wg]],["GlobalAveragePool",[cb,lb]],["GlobalMaxPool",[mb,hb]],["Greater",[ug]],["GreaterOrEqual",[cg]],["InstanceNormalization",[jg,Hg]],["LayerNormalization",[Yg,Kg]],["LeakyRelu",[Gm,Ui]],["Less",[lg]],["LessOrEqual",[dg]],["Log",[Qm]],["MatMul",[Jg]],["MaxPool",[fb,pb]],["Mul",[ig]],["Neg",[Wm]],["Not",[Vm]],["Pad",[Qg,eb]],["Pow",[ag]],["Range",[bb]],["Reciprocal",[Um]],["ReduceMin",[dm,Xt]],["ReduceMean",[am,Xt]],["ReduceMax",[cm,Xt]],["ReduceSum",[pm,Xt]],["ReduceProd",[fm,Xt]],["ReduceL1",[sm,Xt]],["ReduceL2",[um,Xt]],["ReduceLogSum",[mm,Xt]],["ReduceLogSumExp",[lm,Xt]],["ReduceSumSquare",[hm,Xt]],["Relu",[Hm]],["Resize",[vb,xb]],["Sigmoid",[jm]],["Sin",[qm]],["Sinh",[Km]],["Slice",[_b,Ab]],["SkipLayerNormalization",[Tb,$b]],["Split",[Db,kb]],["Sqrt",[Ym]],["Softmax",[Eb,Cb]],["Sub",[sg]],["Tan",[Xm]],["Tanh",[Jm]],["ThresholdedRelu",[Zm,Ui]],["Tile",[Mb]],["Transpose",[qh,Kh]],["Where",[Nb]]])});var ra,Vb=P(()=>{"use strict";dt();Rr();Fe();ra=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i,u,a){let s=this.backend.device,l=this.backend.getComputePassEncoder();l.setPipeline(e.computePipeline);let c=[];for(let h of o)c.push({binding:c.length,resource:{buffer:h.buffer}});for(let h of i)c.push({binding:c.length,resource:{buffer:h.buffer}});a&&c.push({binding:c.length,resource:a});let f=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:c,label:e.programInfo.name});if(l.setBindGroup(0,f),l.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let h=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,h.buffer,0,this.backend.querySetCount*8),this.backend.flush();let g=this.backend.currentKernelId,y=this.backend.kernels.get(g),b=`[${y[0]}] ${y[1]}`;h.buffer.mapAsync(GPUMapMode.READ).then(()=>{let w=new BigUint64Array(h.buffer.getMappedRange()),S=w[0],A=w[1];h.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=S);let E=Number(S-this.backend.queryTimeBase),R=Number(A-this.backend.queryTimeBase);if(!Number.isSafeInteger(E)||!Number.isSafeInteger(R))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(h.id);let z="";n.forEach((G,Y)=>{z+=`input[${Y}]: [${G.dims}] | ${uo(G.dataType)}, `});let B="";t.forEach((G,Y)=>{B+=`output[${Y}]: [${G.dims}] | ${uo(G.dataType)}, `}),console.log(`[profiling] kernel "${g}|${b}" ${z}${B}execution time: ${R-E} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,n){let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=Uh(n),u=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${u}`,s=t.createShaderModule({code:a,label:e.name});Ze("verbose",()=>`[WebGPU] shader code: ${a}`);let l=t.createComputePipeline({compute:{module:s,entryPoint:"main"},layout:"auto",label:e.name});return{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let u=n*t*o,a=Math.ceil(Math.sqrt(u));if(a>i){if(a=Math.ceil(Math.cbrt(u)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var B1,M1,na,Wb=P(()=>{"use strict";Rr();Lh();Gh();Gb();Vb();B1=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},M1=(r,e)=>{let n=r.name;return r.shaderCache?.hint&&(n+="["+r.shaderCache.hint+"]"),n+=`:${B1(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,n},na=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");let n=await navigator.gpu.requestAdapter();if(!n)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.gpuDataManager=Fh(this),this.programManager=new ra(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Bh(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return!!(this.device.features.has("timestamp-query")&&this.env.webgpu.profilingMode==="default")}run(e,n,t,o,i){let u=[];for(let S=0;S<n.length;++S){let A=this.gpuDataManager.get(n[S].data);if(!A)throw new Error(`no GPU data for input: ${n[S].data}`);u[S]=A}let a=M1(e,n),s=this.programManager.getArtifact(a),{outputs:l,dispatchGroup:c,programUniforms:f}=e.getRunData(n),h=t.length===0?l.map((S,A)=>A):t;if(h.length!==l.length)throw new Error(`Output size ${h.length} must be equal to ${l.length}.`);let g=[],y=[];for(let S=0;S<l.length;++S){if(!Number.isInteger(h[S])||h[S]<-3||h[S]>=l.length)throw new Error(`Invalid output index: ${h[S]}`);if(h[S]===-3)continue;let A=h[S]===-1,E=h[S]===-2,R=A||E?i(l[S].dataType,l[S].dims):o(h[S],l[S].dataType,l[S].dims),z=this.gpuDataManager.get(R.data);if(!z)throw new Error(`no GPU data for output: ${R.data}`);if(A&&this.temporaryData.push(z),E){let B=this.kernelPersistentData.get(this.currentKernelId);B||(B=[],this.kernelPersistentData.set(this.currentKernelId,B)),B.push(z)}g.push(R),y.push(z)}let b;if(f){let S=0,A=0,E=[],R=1;f.forEach(G=>{let Y=typeof G.data=="number"?[G.data]:G.data,Z;switch(Y.length){case 1:Z=4;break;case 2:Z=8;break;case 3:Z=16;break;case 4:Z=16;break;case 5:Z=16;break;case 6:Z=16;break;default:throw new Error(`unsupported data length: ${Y.length}`)}(A===5||A===6)&&(Z=16),Z>R&&(R=Z),S=Math.ceil(S/Z)*Z,A=Y.length,E.push(S),S+=Y.length*4}),S=Math.ceil(S/R)*R;let z=new ArrayBuffer(S);f.forEach((G,Y)=>{let Z=E[Y],me=typeof G.data=="number"?[G.data]:G.data;G.type==="int32"?new Int32Array(z,Z,me.length).set(me):G.type==="uint32"?new Uint32Array(z,Z,me.length).set(me):new Float32Array(z,Z,me.length).set(me)});let B=this.gpuDataManager.create(S,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(B.buffer,0,z,0,S),this.gpuDataManager.release(B.id),b={offset:0,size:S,buffer:B.buffer}}let w=this.programManager.normalizeDispatchGroupSize(c);return s||(s=this.programManager.build(e,w),this.programManager.setArtifact(a,s)),Ze("info",()=>`[ProgramManager] run "${e.name}" (key=${a}) with ${w[0]}x${w[1]}x${w[2]}`),this.programManager.run(s,n,g,u,y,w,b),g}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=Fb.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(n,[e,o,i[0],[i[1],t]])}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let[i,u,a,s]=o;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${u}" is not allowed to be called recursively`);this.currentKernelId=e,s[0]&&(s[1]=s[0](s[1]),s[0]=void 0),Ze("info",()=>`[WebGPU] Start to run kernel "[${i}] ${u}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,s[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${u}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${i}] ${u}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let u=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,u?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await Rs(this,e,n);return Mh(o.buffer,t)}}}});var Ub={};Ar(Ub,{init:()=>L1});var bo,eu,L1,Hb=P(()=>{"use strict";dt();Wb();Rr();Pe();bo=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=V.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=V.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=V.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(V.size(e)!==V.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},eu=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;let o=e.HEAPU32,i=t>>2;this.opKernelContext=o[i++];let u=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let s=0;s<u;s++){let l=o[i++],c=o[i++],f=o[i++],h=[];for(let g=0;g<f;g++)h.push(o[i++]);a.push(new bo(e,l,c,h))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,s,l)=>new bo(this.module,s,this.output(a,l),l),u=(a,s)=>{let l=lo(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let c=l*V.size(s);return new bo(this.module,a,this.backend.gpuDataManager.create(c).id,s)};return this.backend.run(e,t,o,i,u)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let u=0;u<n.length;u++)this.module.HEAPU32[i++]=n[u];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},L1=async(r,e)=>{let n=r.jsepInit;if(n&&navigator.gpu){if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");let t=new na;await t.initialize(e),n(t,o=>t.alloc(o),o=>t.free(o),(o,i,u,a=!1)=>{if(a)Ze("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${o}, dst=${i}, size=${u}`),t.memcpy(o,i);else{Ze("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${o}, gpuDataId=${i}, size=${u}`);let s=r.HEAPU8.subarray(o,o+u);t.upload(i,s)}},async(o,i,u)=>{Ze("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${i}, size=${u}`),await t.download(o,()=>r.HEAPU8.subarray(i,i+u))},(o,i,u)=>t.createKernel(o,i,u,e.debug||e.webgpu.profilingMode==="default"?r.UTF8ToString(r._JsepGetNodeName(i)):`${i}`),o=>t.releaseKernel(o),(o,i,u,a)=>{Ze("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${o}, contextDataOffset=${i}`);let s=new eu(r,t,i);return t.computeKernel(o,s,a)})}}});var qb,N1,z1,Kb,yo,Yb,tu,ru,Xb,Jb,jb,Zb,Qb,ey,ty=P(()=>{"use strict";Ch();Dh();dt();An();Bi();qb=!1,N1=r=>{let e=it(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&Ye("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},z1=(r,e)=>{it()._OrtInit(r,e)!==0&&Ye("Can't initialize onnxruntime.")},Kb=async r=>{z1(r.wasm.numThreads,co(r.logLevel));{let e=(Hb(),br(Ub)).init;await e(it(),r)}qb=!0},yo=new Map,Yb=()=>qb,tu=r=>{let e=it(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},ru=(r,e)=>{let n=it(),t=0,o=0,i=0,u=[],a=[],s=[];try{[o,u]=Ph(e),t=n._OrtCreateSession(r[0],r[1],o),t===0&&Ye("Can't create a session.");let[l,c]=N1(t),f=[],h=[],g=[];for(let b=0;b<l;b++){let w=n._OrtGetInputName(t,b);w===0&&Ye("Can't get an input name."),a.push(w),f.push(n.UTF8ToString(w))}for(let b=0;b<c;b++){let w=n._OrtGetOutputName(t,b);w===0&&Ye("Can't get an output name."),s.push(w);let S=n.UTF8ToString(w);h.push(S);{let A=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[S]??"cpu";if(A!=="cpu"&&A!=="cpu-pinned"&&A!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${A}.`);g.push(A)}}let y=null;return g.some(b=>b==="gpu-buffer")&&(i=n._OrtCreateBinding(t),i===0&&Ye("Can't create IO binding."),y={handle:i,outputPreferredLocations:g,outputPreferredLocationsEncoded:g.map(b=>Ds(b))}),yo.set(t,[t,a,s,y]),[t,f,h]}catch(l){throw a.forEach(c=>n._OrtFree(c)),s.forEach(c=>n._OrtFree(c)),i!==0&&n._OrtReleaseBinding(i),t!==0&&n._OrtReleaseSession(t),l}finally{n._free(r[0]),o!==0&&n._OrtReleaseSessionOptions(o),u.forEach(l=>n._free(l))}},Xb=(r,e)=>{let n=tu(r);return ru(n,e)},Jb=r=>{let e=it(),n=yo.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,u]=n;u&&e._OrtReleaseBinding(u.handle),e.jsepUnregisterBuffers?.(r),o.forEach(a=>e._OrtFree(a)),i.forEach(a=>e._OrtFree(a)),e._OrtReleaseSession(t),yo.delete(r)},jb=(r,e,n,t,o)=>{if(!r){e.push(0);return}let i=it(),u=r[0],a=r[1],s=r[3],l,c;if(u==="string"&&s==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(s==="gpu-buffer"){let g=r[2].gpuBuffer,y=lo(Ps(u));c=a.reduce((b,w)=>b*w,1)*y,l=i.jsepRegisterBuffer(t,o,g,c)}else{let g=r[2];if(Array.isArray(g)){c=4*g.length,l=i._malloc(c),n.push(l);let y=l/4;for(let b=0;b<g.length;b++){if(typeof g[b]!="string")throw new TypeError(`tensor data at index ${b} is not a string`);i.HEAPU32[y++]=ct(g[b],n)}}else c=g.byteLength,l=i._malloc(c),n.push(l),i.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,c),l)}let f=i.stackSave(),h=i.stackAlloc(4*a.length);try{let g=h/4;a.forEach(b=>i.HEAP32[g++]=b);let y=i._OrtCreateTensor(Ps(u),l,c,h,a.length,Ds(s));y===0&&Ye(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(y)}finally{i.stackRestore(f)}},Zb=async(r,e,n,t,o,i)=>{let u=it(),a=yo.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let[s,l,c,f]=a,h=e.length,g=t.length,y=0,b=[],w=[],S=[],A=[],E=u.stackSave(),R=u.stackAlloc(h*4),z=u.stackAlloc(h*4),B=u.stackAlloc(g*4),G=u.stackAlloc(g*4);try{[y,b]=Eh(i);for(let ge=0;ge<h;ge++)jb(n[ge],w,A,r,e[ge]);for(let ge=0;ge<g;ge++)jb(o[ge],S,A,r,h+t[ge]);let Y=R/4,Z=z/4,me=B/4,k=G/4;for(let ge=0;ge<h;ge++)u.HEAPU32[Y++]=w[ge],u.HEAPU32[Z++]=l[e[ge]];for(let ge=0;ge<g;ge++)u.HEAPU32[me++]=S[ge],u.HEAPU32[k++]=c[t[ge]];if(f){let{handle:ge,outputPreferredLocations:Ne,outputPreferredLocationsEncoded:Q}=f;if(l.length!==h)throw new Error(`input count from feeds (${h}) is expected to be always equal to model's input count (${l.length}).`);for(let We=0;We<h;We++){let et=e[We];await u._OrtBindInput(ge,l[et],w[We])!==0&&Ye(`Can't bind input[${We}] for session=${r}.`)}for(let We=0;We<g;We++){let et=t[We];o[We]?.[3]?u._OrtBindOutput(ge,c[et],S[We],0)!==0&&Ye(`Can't bind pre-allocated output[${We}] for session=${r}.`):u._OrtBindOutput(ge,c[et],0,Q[et])!==0&&Ye(`Can't bind output[${We}] to ${Ne[We]} for session=${r}.`)}}let ee;f?ee=await u._OrtRunWithBinding(s,f.handle,g,B,y):ee=await u._OrtRun(s,z,R,h,G,g,B,y),ee!==0&&Ye("failed to call OrtRun().");let Ve=[];for(let ge=0;ge<g;ge++){let Ne=u.HEAPU32[B/4+ge];if(Ne===S[ge]){Ve.push(o[ge]);continue}let Q=u.stackSave(),We=u.stackAlloc(4*4),et=!1,Je,Ue=0;try{u._OrtGetTensorData(Ne,We,We+4,We+8,We+12)!==0&&Ye(`Can't access output tensor data on index ${ge}.`);let St=We/4,Ct=u.HEAPU32[St++];Ue=u.HEAPU32[St++];let j=u.HEAPU32[St++],we=u.HEAPU32[St++],Ie=[];for(let Qe=0;Qe<we;Qe++)Ie.push(u.HEAPU32[j/4+Qe]);u._OrtFree(j);let gt=Ie.reduce((Qe,ft)=>Qe*ft,1);Je=uo(Ct);let It=f?.outputPreferredLocations[t[ge]];if(Je==="string"){if(It==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Qe=[],ft=Ue/4;for(let xt=0;xt<gt;xt++){let Jt=u.HEAPU32[ft++],Pt=xt===gt-1?void 0:u.HEAPU32[ft]-Jt;Qe.push(u.UTF8ToString(Jt,Pt))}Ve.push([Je,Ie,Qe,"cpu"])}else if(It==="gpu-buffer"&&gt>0){let Qe=u.jsepGetBuffer(Ue),ft=lo(Ct);if(ft===void 0||!Li(Je))throw new Error(`Unsupported data type: ${Je}`);et=!0,Ve.push([Je,Ie,{gpuBuffer:Qe,download:u.jsepCreateDownloader(Qe,gt*ft,Je),dispose:()=>{u._OrtReleaseTensor(Ne)}},"gpu-buffer"])}else{let Qe=Mi(Je),ft=new Qe(gt);new Uint8Array(ft.buffer,ft.byteOffset,ft.byteLength).set(u.HEAPU8.subarray(Ue,Ue+ft.byteLength)),Ve.push([Je,Ie,ft,"cpu"])}}finally{u.stackRestore(Q),Je==="string"&&Ue&&u._free(Ue),et||u._OrtReleaseTensor(Ne)}}return f&&u._OrtClearBoundOutputs(f.handle),Ve}finally{u.stackRestore(E),w.forEach(Y=>u._OrtReleaseTensor(Y)),S.forEach(Y=>u._OrtReleaseTensor(Y)),A.forEach(Y=>u._free(Y)),y!==0&&u._OrtReleaseRunOptions(y),b.forEach(Y=>u._free(Y))}},Qb=r=>{let e=it(),n=yo.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&Ye("Can't get an profile file name."),e._OrtFree(o)},ey=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var ry=He((YB,G1)=>{G1.exports='/*!\n * ONNX Runtime Web v1.17.0-dev.20231103-1439da36fe\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var on=Object.defineProperty;var Su=Object.getOwnPropertyDescriptor;var Cu=Object.getOwnPropertyNames;var Au=Object.prototype.hasOwnProperty;var H=(e,t)=>()=>(e&&(t=e(e=0)),t);var Jt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Ir=(e,t)=>{for(var r in t)on(e,r,{get:t[r],enumerable:!0})},Iu=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of Cu(t))!Au.call(e,n)&&n!==r&&on(e,n,{get:()=>t[n],enumerable:!(o=Su(t,n))||o.enumerable});return e};var Mt=e=>Iu(on({},"__esModule",{value:!0}),e);var an={};Ir(an,{readFile:()=>Eu});var Eu,sn=H(()=>{Eu=void 0});var un={};Ir(un,{join:()=>Tu});var Tu,ln=H(()=>{Tu=void 0});var uo=Jt((so,dn)=>{"use strict";var io=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,n;r.ready=new Promise((l,p)=>{o=l,n=p}),r.jsepInit=(l,p,h,C,T,U,G,ue)=>{r.Za=l,r.Oa=p,r.Qa=h,r.Ja=C,r.Pa=T,r.ra=U,r.Ra=G,r.Sa=ue,p=(Y,Q,J)=>(...ce)=>{let me=He,E=Q?.();ce=Y(...ce);let te=Q?.();return E!==te&&(Y=te,J(E),Q=J=null),He!=me?gr():ce},h=Y=>async(...Q)=>{try{if(r.Da)throw Error("Session already started");let J=r.Da={Ta:Q[0],errors:[]},ce=await Y(...Q);if(r.Da!==J)throw Error("Session mismatch");l.flush();let me=J.errors;if(0<me.length){let E=await Promise.all(me);if(E=E.filter(te=>te),0<E.length)throw Error(E.join(`\n`))}return ce}finally{r.Da=null}},r._OrtRun=h(p(r._OrtRun,()=>r._OrtRun,Y=>r._OrtRun=Y)),r._OrtRunWithBinding=h(p(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,Y=>r._OrtRunWithBinding=Y)),r._OrtBindInput=p(r._OrtBindInput,()=>r._OrtBindInput,Y=>r._OrtBindInput=Y),r.jsepRegisterBuffer=(Y,Q,J,ce)=>l.registerBuffer(Y,Q,J,ce),r.jsepUnregisterBuffers=Y=>{l.unregisterBuffers(Y)},r.jsepGetBuffer=Y=>l.getBuffer(Y),r.jsepCreateDownloader=(Y,Q,J)=>l.createDownloader(Y,Q,J)};var s=Object.assign({},r),u="./this.program",d=(l,p)=>{throw p},a=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x="",b,w,v;if(g){var y=(sn(),Mt(an)),S=(ln(),Mt(un));x=m?S.dirname(x)+"/":__dirname+"/",b=(l,p)=>(l=l.startsWith("file://")?new URL(l):S.normalize(l),y.readFileSync(l,p?void 0:"utf8")),v=l=>(l=b(l,!0),l.buffer||(l=new Uint8Array(l)),l),w=(l,p,h,C=!0)=>{l=l.startsWith("file://")?new URL(l):S.normalize(l),y.readFile(l,C?void 0:"utf8",(T,U)=>{T?h(T):p(C?U.buffer:U)})},!r.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),d=(l,p)=>{throw process.exitCode=l,p},r.inspect=()=>"[Emscripten Module object]"}else(a||m)&&(m?x=self.location.href:typeof document<"u"&&document.currentScript&&(x=document.currentScript.src),e&&(x=e),x.indexOf("blob:")!==0?x=x.substr(0,x.replace(/[?#].*/,"").lastIndexOf("/")+1):x="",b=l=>{var p=new XMLHttpRequest;return p.open("GET",l,!1),p.send(null),p.responseText},m&&(v=l=>{var p=new XMLHttpRequest;return p.open("GET",l,!1),p.responseType="arraybuffer",p.send(null),new Uint8Array(p.response)}),w=(l,p,h)=>{var C=new XMLHttpRequest;C.open("GET",l,!0),C.responseType="arraybuffer",C.onload=()=>{C.status==200||C.status==0&&C.response?p(C.response):h()},C.onerror=h,C.send(null)});var A=r.print||console.log.bind(console),R=r.printErr||console.error.bind(console);Object.assign(r,s),s=null,r.thisProgram&&(u=r.thisProgram),r.quit&&(d=r.quit);var W;r.wasmBinary&&(W=r.wasmBinary);var M=r.noExitRuntime||!0;typeof WebAssembly!="object"&&Le("no native wasm support detected");var D,_,z=!1,F,q,le,B,K,xe,ae;function we(){var l=D.buffer;r.HEAP8=q=new Int8Array(l),r.HEAP16=new Int16Array(l),r.HEAP32=B=new Int32Array(l),r.HEAPU8=le=new Uint8Array(l),r.HEAPU16=new Uint16Array(l),r.HEAPU32=K=new Uint32Array(l),r.HEAPF32=xe=new Float32Array(l),r.HEAPF64=ae=new Float64Array(l)}var j=[],Se=[],Oe=[];function Ie(){var l=r.preRun.shift();j.unshift(l)}var Ce=0,dt=null,Ne=null;function Le(l){throw r.onAbort&&r.onAbort(l),l="Aborted("+l+")",R(l),z=!0,F=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),n(l),l}function N(l){return l.startsWith("data:application/octet-stream;base64,")}var de;if(de="ort-wasm-simd.wasm",!N(de)){var pe=de;de=r.locateFile?r.locateFile(pe,x):x+pe}function ze(l){if(l==de&&W)return new Uint8Array(W);if(v)return v(l);throw"both async and sync fetching of the wasm failed"}function Ue(l){if(!W&&(a||m)){if(typeof fetch=="function"&&!l.startsWith("file://"))return fetch(l,{credentials:"same-origin"}).then(p=>{if(!p.ok)throw"failed to load wasm binary file at \'"+l+"\'";return p.arrayBuffer()}).catch(()=>ze(l));if(w)return new Promise((p,h)=>{w(l,C=>p(new Uint8Array(C)),h)})}return Promise.resolve().then(()=>ze(l))}function Te(l,p,h){return Ue(l).then(C=>WebAssembly.instantiate(C,p)).then(C=>C).then(h,C=>{R("failed to asynchronously prepare wasm: "+C),Le(C)})}function ke(l,p){var h=de;return W||typeof WebAssembly.instantiateStreaming!="function"||N(h)||h.startsWith("file://")||g||typeof fetch!="function"?Te(h,l,p):fetch(h,{credentials:"same-origin"}).then(C=>WebAssembly.instantiateStreaming(C,l).then(p,function(T){return R("wasm streaming compile failed: "+T),R("falling back to ArrayBuffer instantiation"),Te(h,l,p)}))}var Ge,Xe={913792:l=>{r.ra("Abs",l,void 0)},913843:l=>{r.ra("Neg",l,void 0)},913894:l=>{r.ra("Floor",l,void 0)},913947:l=>{r.ra("Ceil",l,void 0)},913999:l=>{r.ra("Reciprocal",l,void 0)},914057:l=>{r.ra("Sqrt",l,void 0)},914109:l=>{r.ra("Exp",l,void 0)},914160:l=>{r.ra("Erf",l,void 0)},914211:l=>{r.ra("Sigmoid",l,void 0)},914266:l=>{r.ra("Log",l,void 0)},914317:l=>{r.ra("Sin",l,void 0)},914368:l=>{r.ra("Cos",l,void 0)},914419:l=>{r.ra("Tan",l,void 0)},914470:l=>{r.ra("Asin",l,void 0)},914522:l=>{r.ra("Acos",l,void 0)},914574:l=>{r.ra("Atan",l,void 0)},914626:l=>{r.ra("Sinh",l,void 0)},914678:l=>{r.ra("Cosh",l,void 0)},914730:l=>{r.ra("Asinh",l,void 0)},914783:l=>{r.ra("Acosh",l,void 0)},914836:l=>{r.ra("Atanh",l,void 0)},914889:l=>{r.ra("Tanh",l,void 0)},914941:l=>{r.ra("Not",l,void 0)},914992:(l,p,h)=>{r.ra("ClipV10",l,{min:p,max:h})},915064:l=>{r.ra("Clip",l,void 0)},915116:(l,p)=>{r.ra("Elu",l,{alpha:p})},915174:l=>{r.ra("Relu",l,void 0)},915226:(l,p)=>{r.ra("LeakyRelu",l,{alpha:p})},915290:(l,p)=>{r.ra("ThresholdedRelu",l,{alpha:p})},915360:(l,p)=>{r.ra("Cast",l,{to:p})},915418:l=>{r.ra("Add",l,void 0)},915469:l=>{r.ra("Sub",l,void 0)},915520:l=>{r.ra("Mul",l,void 0)},915571:l=>{r.ra("Div",l,void 0)},915622:l=>{r.ra("Pow",l,void 0)},915673:l=>{r.ra("Equal",l,void 0)},915726:l=>{r.ra("Greater",l,void 0)},915781:l=>{r.ra("GreaterOrEqual",l,void 0)},915843:l=>{r.ra("Less",l,void 0)},915895:l=>{r.ra("LessOrEqual",l,void 0)},915954:(l,p,h,C,T)=>{r.ra("ReduceMean",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},916118:(l,p,h,C,T)=>{r.ra("ReduceMax",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},916281:(l,p,h,C,T)=>{r.ra("ReduceMin",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},916444:(l,p,h,C,T)=>{r.ra("ReduceProd",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},916608:(l,p,h,C,T)=>{r.ra("ReduceSum",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},916771:(l,p,h,C,T)=>{r.ra("ReduceL1",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},916933:(l,p,h,C,T)=>{r.ra("ReduceL2",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},917095:(l,p,h,C,T)=>{r.ra("ReduceLogSum",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},917261:(l,p,h,C,T)=>{r.ra("ReduceSumSquare",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},917430:(l,p,h,C,T)=>{r.ra("ReduceLogSumExp",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},917599:l=>{r.ra("Where",l,void 0)},917652:(l,p,h)=>{r.ra("Transpose",l,{perm:p?Array.from(B.subarray(h>>>0,h+p>>>0)):[]})},917765:(l,p,h,C,T,U,G,ue,Y,Q,J,ce,me,E,te)=>{r.ra("ConvTranspose",l,{format:Y?"NHWC":"NCHW",autoPad:p,dilations:[h],group:C,kernel_shape:[T],pads:[U,G],strides:[ue],wIsConst:()=>!!q[Q>>>0],outputPadding:J?Array.from(B.subarray(ce>>>0,ce+J>>>0)):[],outputShape:me?Array.from(B.subarray(E>>>0,E+me>>>0)):[],activation:_e(te)})},918179:(l,p,h,C,T,U,G,ue,Y,Q,J,ce,me,E)=>{r.ra("ConvTranspose",l,{format:ue?"NHWC":"NCHW",autoPad:p,dilations:Array.from(B.subarray(h>>>0,h+2>>>0)),group:C,kernelShape:Array.from(B.subarray(T>>>0,T+2>>>0)),pads:Array.from(B.subarray(U>>>0,U+4>>>0)),strides:Array.from(B.subarray(G>>>0,G+2>>>0)),wIsConst:()=>!!q[Y>>>0],outputPadding:0<Q?Array.from(B.subarray(J>>>0,J+Q>>>0)):[],outputShape:0<ce?Array.from(B.subarray(me>>>0,me+ce>>>0)):[],activation:_e(E)})},918736:(l,p,h,C,T,U,G,ue,Y,Q,J,ce,me,E,te)=>{r.ra("ConvTranspose",l,{format:Y?"NHWC":"NCHW",autoPad:p,dilations:[h],group:C,kernel_shape:[T],pads:[U,G],strides:[ue],wIsConst:()=>!!q[Q>>>0],outputPadding:J?Array.from(B.subarray(ce>>>0,ce+J>>>0)):[],outputShape:me?Array.from(B.subarray(E>>>0,E+me>>>0)):[],activation:_e(te)})},919150:(l,p,h,C,T,U,G,ue,Y,Q,J,ce,me,E)=>{r.ra("ConvTranspose",l,{format:ue?"NHWC":"NCHW",autoPad:p,dilations:Array.from(B.subarray(h>>>0,h+2>>>0)),group:C,kernelShape:Array.from(B.subarray(T>>>0,T+2>>>0)),pads:Array.from(B.subarray(U>>>0,U+4>>>0)),strides:Array.from(B.subarray(G>>>0,G+2>>>0)),wIsConst:()=>!!q[Y>>>0],outputPadding:0<Q?Array.from(B.subarray(J>>>0,J+Q>>>0)):[],outputShape:0<ce?Array.from(B.subarray(me>>>0,me+ce>>>0)):[],activation:_e(E)})},919707:(l,p)=>{r.ra("GlobalAveragePool",l,{format:p?"NHWC":"NCHW"})},919798:(l,p,h,C,T,U,G,ue,Y,Q,J,ce,me,E,te,fe)=>{r.ra("AveragePool",l,{format:fe?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:C,storage_order:T,dilations:[U,G],kernel_shape:[ue,Y],pads:[Q,J,ce,me],strides:[E,te]})},920082:(l,p)=>{r.ra("GlobalAveragePool",l,{format:p?"NHWC":"NCHW"})},920173:(l,p,h,C,T,U,G,ue,Y,Q,J,ce,me,E,te,fe)=>{r.ra("AveragePool",l,{format:fe?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:C,storage_order:T,dilations:[U,G],kernel_shape:[ue,Y],pads:[Q,J,ce,me],strides:[E,te]})},920457:(l,p)=>{r.ra("GlobalMaxPool",l,{format:p?"NHWC":"NCHW"})},920544:(l,p,h,C,T,U,G,ue,Y,Q,J,ce,me,E,te,fe)=>{r.ra("MaxPool",l,{format:fe?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:C,storage_order:T,dilations:[U,G],kernel_shape:[ue,Y],pads:[Q,J,ce,me],strides:[E,te]})},920824:(l,p)=>{r.ra("GlobalMaxPool",l,{format:p?"NHWC":"NCHW"})},920911:(l,p,h,C,T,U,G,ue,Y,Q,J,ce,me,E,te,fe)=>{r.ra("MaxPool",l,{format:fe?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:C,storage_order:T,dilations:[U,G],kernel_shape:[ue,Y],pads:[Q,J,ce,me],strides:[E,te]})},921191:(l,p,h,C,T)=>{r.ra("Gemm",l,{alpha:p,beta:h,transA:C,transB:T})},921295:l=>{r.ra("MatMul",l,void 0)},921349:(l,p,h,C)=>{r.ra("ArgMax",l,{keepDims:!!p,selectLastIndex:!!h,axis:C})},921457:(l,p,h,C)=>{r.ra("ArgMin",l,{keepDims:!!p,selectLastIndex:!!h,axis:C})},921565:(l,p)=>{r.ra("Softmax",l,{axis:p})},921628:(l,p)=>{r.ra("Concat",l,{axis:p})},921688:(l,p,h,C,T)=>{r.ra("Split",l,{axis:p,numOutputs:h,splitSizes:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},921833:l=>{r.ra("Expand",l,void 0)},921887:(l,p)=>{r.ra("Gather",l,{axis:Number(p)})},921958:(l,p)=>{r.ra("GatherElements",l,{axis:Number(p)})},922037:(l,p,h,C,T,U,G,ue,Y,Q,J)=>{r.ra("Resize",l,{antialias:p,axes:h?Array.from(B.subarray(C>>>0,C+h>>>0)):[],coordinateTransformMode:_e(T),cubicCoeffA:U,excludeOutside:G,extrapolationValue:ue,keepAspectRatioPolicy:_e(Y),mode:_e(Q),nearestMode:_e(J)})},922388:(l,p,h,C,T,U,G)=>{r.ra("Slice",l,{starts:p?Array.from(B.subarray(h>>>0,h+p>>>0)):[],ends:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[],axes:U?Array.from(B.subarray(G>>>0,G+U>>>0)):[]})},922619:l=>{r.ra("Tile",l,void 0)},922671:(l,p,h)=>{r.ra("LayerNormalization",l,{axis:Number(p),epsilon:Number(h)})},922778:(l,p,h)=>{r.ra("InstanceNormalization",l,{epsilon:p,format:h?"NHWC":"NCHW"})},922892:(l,p,h)=>{r.ra("InstanceNormalization",l,{epsilon:p,format:h?"NHWC":"NCHW"})},923006:l=>{r.ra("Range",l,void 0)},923059:(l,p)=>{r.ra("Einsum",l,{equation:_e(p)})},923140:(l,p,h,C,T)=>{r.ra("Pad",l,{mode:p,value:h,pads:C?Array.from(B.subarray(T>>>0,T+C>>>0)):[]})},923272:l=>{r.ra("Gelu",l,void 0)},923324:l=>{r.ra("BiasAdd",l,void 0)},923379:l=>{r.ra("BiasSplitGelu",l,void 0)},923440:(l,p)=>{r.ra("SkipLayerNormalization",l,{epsilon:p})},923521:(l,p,h,C,T,U,G,ue,Y,Q,J,ce,me)=>{r.ra("Conv",l,{format:Y?"NHWC":"NCHW",auto_pad:p,dilations:[h],group:C,kernel_shape:[T],pads:U?Array.from(B.subarray(G>>>0,G+U>>>0)):[],strides:[ue],w_is_const:()=>!!q[Q>>>0],activation:_e(J),activation_params:ce?Array.from(xe.subarray(me>>>0,me+ce>>>0)):[]})},923902:(l,p,h,C,T,U,G,ue,Y,Q,J,ce,me,E,te,fe)=>{r.ra("Conv",l,{format:ce?"NHWC":"NCHW",auto_pad:p,dilations:[h,C],group:T,kernel_shape:[U,G],pads:ue?Array.from(B.subarray(Y>>>0,Y+ue>>>0)):[],strides:[Q,J],w_is_const:()=>!!q[me>>>0],activation:_e(E),activation_params:te?Array.from(xe.subarray(fe>>>0,fe+te>>>0)):[]})},924304:l=>{r.Ra(l)},924338:(l,p)=>r.Sa(l,p,r.Da.Ta,r.Da.errors),924450:l=>r.Oa(l),924483:l=>r.Qa(l),924515:(l,p,h)=>{r.Ja(l,p,h,!0)},924554:(l,p,h)=>{r.Ja(l,p,h)}};function Fe(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}var yt=l=>{for(;0<l.length;)l.shift()(r)};function bt(l){this.Ha=l-24,this.Ma=function(p){K[this.Ha+4>>2>>>0]=p},this.La=function(p){K[this.Ha+8>>2>>>0]=p},this.Ya=function(p,h){this.Ka(),this.Ma(p),this.La(h)},this.Ka=function(){K[this.Ha+16>>2>>>0]=0}}var Bt=0,lr=0,Ke=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,kt=(l,p,h)=>{p>>>=0;var C=p+h;for(h=p;l[h]&&!(h>=C);)++h;if(16<h-p&&l.buffer&&Ke)return Ke.decode(l.subarray(p,h));for(C="";p<h;){var T=l[p++];if(T&128){var U=l[p++]&63;if((T&224)==192)C+=String.fromCharCode((T&31)<<6|U);else{var G=l[p++]&63;T=(T&240)==224?(T&15)<<12|U<<6|G:(T&7)<<18|U<<12|G<<6|l[p++]&63,65536>T?C+=String.fromCharCode(T):(T-=65536,C+=String.fromCharCode(55296|T>>10,56320|T&1023))}}else C+=String.fromCharCode(T)}return C},_e=(l,p)=>(l>>>=0)?kt(le,l,p):"",It=l=>{for(var p=0,h=0;h<l.length;++h){var C=l.charCodeAt(h);127>=C?p++:2047>=C?p+=2:55296<=C&&57343>=C?(p+=4,++h):p+=3}return p},Dt=(l,p,h,C)=>{if(h>>>=0,!(0<C))return 0;var T=h;C=h+C-1;for(var U=0;U<l.length;++U){var G=l.charCodeAt(U);if(55296<=G&&57343>=G){var ue=l.charCodeAt(++U);G=65536+((G&1023)<<10)|ue&1023}if(127>=G){if(h>=C)break;p[h++>>>0]=G}else{if(2047>=G){if(h+1>=C)break;p[h++>>>0]=192|G>>6}else{if(65535>=G){if(h+2>=C)break;p[h++>>>0]=224|G>>12}else{if(h+3>=C)break;p[h++>>>0]=240|G>>18,p[h++>>>0]=128|G>>12&63}p[h++>>>0]=128|G>>6&63}p[h++>>>0]=128|G&63}}return p[h>>>0]=0,h-T},at=l=>l%4===0&&(l%100!==0||l%400===0),dr=[0,31,60,91,121,152,182,213,244,274,305,335],it=[0,31,59,90,120,151,181,212,243,273,304,334],Et=l=>{var p=It(l)+1,h=Rt(p);return h&&Dt(l,le,h,p),h},ct=[],Tt=(l,p)=>{ct.length=0;var h;for(p>>=2;h=le[l++>>>0];)p+=h!=105&p,ct.push(h==105?B[p>>>0]:ae[p++>>>1]),++p;return ct},Ot={},Wt=()=>{if(!_t){var l={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},p;for(p in Ot)Ot[p]===void 0?delete l[p]:l[p]=Ot[p];var h=[];for(p in l)h.push(`${p}=${l[p]}`);_t=h}return _t},_t,cr=[null,[],[]],Ve=[31,29,31,30,31,30,31,31,30,31,30,31],zt=[31,28,31,30,31,30,31,31,30,31,30,31];function Vt(l){var p=Array(It(l)+1);return Dt(l,p,0,p.length),p}function ne(l,p,h,C){function T(E,te,fe){for(E=typeof E=="number"?E.toString():E||"";E.length<te;)E=fe[0]+E;return E}function U(E,te){return T(E,te,"0")}function G(E,te){function fe(Xt){return 0>Xt?-1:0<Xt?1:0}var ut;return(ut=fe(E.getFullYear()-te.getFullYear()))===0&&(ut=fe(E.getMonth()-te.getMonth()))===0&&(ut=fe(E.getDate()-te.getDate())),ut}function ue(E){switch(E.getDay()){case 0:return new Date(E.getFullYear()-1,11,29);case 1:return E;case 2:return new Date(E.getFullYear(),0,3);case 3:return new Date(E.getFullYear(),0,2);case 4:return new Date(E.getFullYear(),0,1);case 5:return new Date(E.getFullYear()-1,11,31);case 6:return new Date(E.getFullYear()-1,11,30)}}function Y(E){var te=E.Ba;for(E=new Date(new Date(E.Ca+1900,0,1).getTime());0<te;){var fe=E.getMonth(),ut=(at(E.getFullYear())?Ve:zt)[fe];if(te>ut-E.getDate())te-=ut-E.getDate()+1,E.setDate(1),11>fe?E.setMonth(fe+1):(E.setMonth(0),E.setFullYear(E.getFullYear()+1));else{E.setDate(E.getDate()+te);break}}return fe=new Date(E.getFullYear()+1,0,4),te=ue(new Date(E.getFullYear(),0,4)),fe=ue(fe),0>=G(te,E)?0>=G(fe,E)?E.getFullYear()+1:E.getFullYear():E.getFullYear()-1}l>>>=0,p>>>=0,h>>>=0,C>>>=0;var Q=B[C+40>>2>>>0];C={Wa:B[C>>2>>>0],Va:B[C+4>>2>>>0],Ea:B[C+8>>2>>>0],Ia:B[C+12>>2>>>0],Fa:B[C+16>>2>>>0],Ca:B[C+20>>2>>>0],wa:B[C+24>>2>>>0],Ba:B[C+28>>2>>>0],$a:B[C+32>>2>>>0],Ua:B[C+36>>2>>>0],Xa:Q?_e(Q):""},h=_e(h),Q={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var J in Q)h=h.replace(new RegExp(J,"g"),Q[J]);var ce="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),me="January February March April May June July August September October November December".split(" ");Q={"%a":E=>ce[E.wa].substring(0,3),"%A":E=>ce[E.wa],"%b":E=>me[E.Fa].substring(0,3),"%B":E=>me[E.Fa],"%C":E=>U((E.Ca+1900)/100|0,2),"%d":E=>U(E.Ia,2),"%e":E=>T(E.Ia,2," "),"%g":E=>Y(E).toString().substring(2),"%G":E=>Y(E),"%H":E=>U(E.Ea,2),"%I":E=>(E=E.Ea,E==0?E=12:12<E&&(E-=12),U(E,2)),"%j":E=>{for(var te=0,fe=0;fe<=E.Fa-1;te+=(at(E.Ca+1900)?Ve:zt)[fe++]);return U(E.Ia+te,3)},"%m":E=>U(E.Fa+1,2),"%M":E=>U(E.Va,2),"%n":()=>`\n`,"%p":E=>0<=E.Ea&&12>E.Ea?"AM":"PM","%S":E=>U(E.Wa,2),"%t":()=>"	","%u":E=>E.wa||7,"%U":E=>U(Math.floor((E.Ba+7-E.wa)/7),2),"%V":E=>{var te=Math.floor((E.Ba+7-(E.wa+6)%7)/7);if(2>=(E.wa+371-E.Ba-2)%7&&te++,te)te==53&&(fe=(E.wa+371-E.Ba)%7,fe==4||fe==3&&at(E.Ca)||(te=1));else{te=52;var fe=(E.wa+7-E.Ba-1)%7;(fe==4||fe==5&&at(E.Ca%400-1))&&te++}return U(te,2)},"%w":E=>E.wa,"%W":E=>U(Math.floor((E.Ba+7-(E.wa+6)%7)/7),2),"%y":E=>(E.Ca+1900).toString().substring(2),"%Y":E=>E.Ca+1900,"%z":E=>{E=E.Ua;var te=0<=E;return E=Math.abs(E)/60,(te?"+":"-")+("0000"+(E/60*100+E%60)).slice(-4)},"%Z":E=>E.Xa,"%%":()=>"%"},h=h.replace(/%%/g,"\\0\\0");for(J in Q)h.includes(J)&&(h=h.replace(new RegExp(J,"g"),Q[J](C)));return h=h.replace(/\\0\\0/g,"%"),J=Vt(h),J.length>p?0:(q.set(J,l>>>0),J.length-1)}function st(l){try{l()}catch(p){Le(p)}}function pr(l){var p={},h;for(h in l)(function(C){var T=l[C];p[C]=typeof T=="function"?function(){wt.push(C);try{return T.apply(null,arguments)}finally{z||(wt.pop()===C||Le(),He&&Je===1&&wt.length===0&&(Je=0,st(qt),typeof Fibers<"u"&&Fibers.ab()))}}:T})(h);return p}var Je=0,He=null,fr=0,wt=[],Gt={},Nt={},mr=0,vt=null,hr=[];function gr(){return new Promise((l,p)=>{vt={resolve:l,reject:p}})}function yr(){var l=Rt(65548),p=l+12;K[l>>2>>>0]=p,K[l+4>>2>>>0]=p+65536,p=wt[0];var h=Gt[p];return h===void 0&&(h=mr++,Gt[p]=h,Nt[h]=p),B[l+8>>2>>>0]=h,l}function br(l){if(!z){if(Je===0){var p=!1,h=!1;l((C=0)=>{if(!z&&(fr=C,p=!0,h)){Je=2,st(()=>Pt(He)),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.resume(),C=!1;try{var T=(0,_[Nt[B[He+8>>2>>>0]]])()}catch(ue){T=ue,C=!0}var U=!1;if(!He){var G=vt;G&&(vt=null,(C?G.reject:G.resolve)(T),U=!0)}if(C&&!U)throw T}}),h=!0,p||(Je=1,He=yr(),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.pause(),st(()=>Kt(He)))}else Je===2?(Je=0,st($t),Ut(He),He=null,hr.forEach(C=>{if(!z)try{if(C(),!M)try{F=F=C=F,M||(r.onExit&&r.onExit(C),z=!0),d(C,new Fe(C))}catch(T){T instanceof Fe||T=="unwind"||d(1,T)}}catch(T){T instanceof Fe||T=="unwind"||d(1,T)}})):Le(`invalid state: ${Je}`);return fr}}function wr(l){return br(p=>{l().then(p)})}var vr={n:function(l,p,h){return wr(async()=>{await r.Pa(l,p,h)})},a:function(l,p,h){throw l>>>=0,new bt(l).Ya(p>>>0,h>>>0),Bt=l,lr++,Bt},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},G:function(){},l:function(){},A:function(){},x:function(){},I:function(){},y:function(){},m:()=>!0,q:function(l,p,h){l=p+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*p:NaN,h>>>=0,l=new Date(1e3*l),B[h>>2>>>0]=l.getUTCSeconds(),B[h+4>>2>>>0]=l.getUTCMinutes(),B[h+8>>2>>>0]=l.getUTCHours(),B[h+12>>2>>>0]=l.getUTCDate(),B[h+16>>2>>>0]=l.getUTCMonth(),B[h+20>>2>>>0]=l.getUTCFullYear()-1900,B[h+24>>2>>>0]=l.getUTCDay(),B[h+28>>2>>>0]=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(l,p,h){l=p+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*p:NaN,h>>>=0,l=new Date(1e3*l),B[h>>2>>>0]=l.getSeconds(),B[h+4>>2>>>0]=l.getMinutes(),B[h+8>>2>>>0]=l.getHours(),B[h+12>>2>>>0]=l.getDate(),B[h+16>>2>>>0]=l.getMonth(),B[h+20>>2>>>0]=l.getFullYear()-1900,B[h+24>>2>>>0]=l.getDay(),B[h+28>>2>>>0]=(at(l.getFullYear())?dr:it)[l.getMonth()]+l.getDate()-1|0,B[h+36>>2>>>0]=-(60*l.getTimezoneOffset()),p=new Date(l.getFullYear(),6,1).getTimezoneOffset();var C=new Date(l.getFullYear(),0,1).getTimezoneOffset();B[h+32>>2>>>0]=(p!=C&&l.getTimezoneOffset()==Math.min(C,p))|0},s:function(l){l>>>=0;var p=new Date(B[l+20>>2>>>0]+1900,B[l+16>>2>>>0],B[l+12>>2>>>0],B[l+8>>2>>>0],B[l+4>>2>>>0],B[l>>2>>>0],0),h=B[l+32>>2>>>0],C=p.getTimezoneOffset(),T=new Date(p.getFullYear(),6,1).getTimezoneOffset(),U=new Date(p.getFullYear(),0,1).getTimezoneOffset(),G=Math.min(U,T);return 0>h?B[l+32>>2>>>0]=+(T!=U&&G==C):0<h!=(G==C)&&(T=Math.max(U,T),p.setTime(p.getTime()+6e4*((0<h?G:T)-C))),B[l+24>>2>>>0]=p.getDay(),B[l+28>>2>>>0]=(at(p.getFullYear())?dr:it)[p.getMonth()]+p.getDate()-1|0,B[l>>2>>>0]=p.getSeconds(),B[l+4>>2>>>0]=p.getMinutes(),B[l+8>>2>>>0]=p.getHours(),B[l+12>>2>>>0]=p.getDate(),B[l+16>>2>>>0]=p.getMonth(),B[l+20>>2>>>0]=p.getYear(),l=p.getTime()/1e3,Lt((Ge=l,1<=+Math.abs(Ge)?0<Ge?+Math.floor(Ge/4294967296)>>>0:~~+Math.ceil((Ge-+(~~Ge>>>0))/4294967296)>>>0:0)),l>>>0},o:function(){return-52},p:function(){},v:function(l,p,h){function C(Y){return(Y=Y.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Y[1]:"GMT"}h>>>=0;var T=new Date().getFullYear(),U=new Date(T,0,1),G=new Date(T,6,1);T=U.getTimezoneOffset();var ue=G.getTimezoneOffset();K[l>>>0>>2>>>0]=60*Math.max(T,ue),B[p>>>0>>2>>>0]=+(T!=ue),l=C(U),p=C(G),l=Et(l),p=Et(p),ue<T?(K[h>>2>>>0]=l,K[h+4>>2>>>0]=p):(K[h>>2>>>0]=p,K[h+4>>2>>>0]=l)},e:()=>{Le("")},b:function(l,p,h){return l>>>=0,p=Tt(p>>>0,h>>>0),Xe[l].apply(null,p)},i:function(l,p,h){return l>>>=0,p=Tt(p>>>0,h>>>0),Xe[l].apply(null,p)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(l,p,h){return p>>>=0,le.copyWithin(l>>>0>>>0,p>>>0,p+(h>>>0)>>>0)},u:function(l){l>>>=0;var p=le.length;if(4294901760<l)return!1;for(var h=1;4>=h;h*=2){var C=p*(1+.2/h);C=Math.min(C,l+100663296);var T=Math;C=Math.max(l,C);e:{T=T.min.call(T,4294901760,C+(65536-C%65536)%65536)-D.buffer.byteLength+65535>>>16;try{D.grow(T),we();var U=1;break e}catch{}U=void 0}if(U)return!0}return!1},D:function(l,p){l>>>=0,p>>>=0;var h=0;return Wt().forEach(function(C,T){var U=p+h;for(T=K[l+4*T>>2>>>0]=U,U=0;U<C.length;++U)q[T++>>0>>>0]=C.charCodeAt(U);q[T>>0>>>0]=0,h+=C.length+1}),0},E:function(l,p){l>>>=0,p>>>=0;var h=Wt();K[l>>2>>>0]=h.length;var C=0;return h.forEach(function(T){C+=T.length+1}),K[p>>2>>>0]=C,0},f:()=>52,k:function(){return 52},t:function(){return 70},j:function(l,p,h,C){p>>>=0,h>>>=0,C>>>=0;for(var T=0,U=0;U<h;U++){var G=K[p>>2>>>0],ue=K[p+4>>2>>>0];p+=8;for(var Y=0;Y<ue;Y++){var Q=le[G+Y>>>0],J=cr[l];Q===0||Q===10?((l===1?A:R)(kt(J,0)),J.length=0):J.push(Q)}T+=ue}return K[C>>2>>>0]=T,0},F:ne,d:function(l,p,h,C){return ne(l>>>0,p>>>0,h>>>0,C>>>0)}};(function(){function l(h){if(h=h.exports,h=pr(h),_=h=pt(h),D=_.M,we(),Se.unshift(_.N),Ce--,r.monitorRunDependencies&&r.monitorRunDependencies(Ce),Ce==0&&(dt!==null&&(clearInterval(dt),dt=null),Ne)){var C=Ne;Ne=null,C()}return h}var p={a:vr};if(Ce++,r.monitorRunDependencies&&r.monitorRunDependencies(Ce),r.instantiateWasm)try{return r.instantiateWasm(p,l)}catch(h){R("Module.instantiateWasm callback failed with error: "+h),n(h)}return ke(p,function(h){l(h.instance)}).catch(n),{}})(),r._OrtInit=(l,p)=>(r._OrtInit=_.O)(l,p),r._OrtGetLastError=(l,p)=>(r._OrtGetLastError=_.P)(l,p),r._OrtCreateSessionOptions=(l,p,h,C,T,U,G,ue,Y,Q)=>(r._OrtCreateSessionOptions=_.Q)(l,p,h,C,T,U,G,ue,Y,Q),r._OrtAppendExecutionProvider=(l,p)=>(r._OrtAppendExecutionProvider=_.R)(l,p),r._OrtAddFreeDimensionOverride=(l,p,h)=>(r._OrtAddFreeDimensionOverride=_.S)(l,p,h),r._OrtAddSessionConfigEntry=(l,p,h)=>(r._OrtAddSessionConfigEntry=_.T)(l,p,h),r._OrtReleaseSessionOptions=l=>(r._OrtReleaseSessionOptions=_.U)(l),r._OrtCreateSession=(l,p,h)=>(r._OrtCreateSession=_.V)(l,p,h),r._OrtReleaseSession=l=>(r._OrtReleaseSession=_.W)(l),r._OrtGetInputOutputCount=(l,p,h)=>(r._OrtGetInputOutputCount=_.X)(l,p,h),r._OrtGetInputName=(l,p)=>(r._OrtGetInputName=_.Y)(l,p),r._OrtGetOutputName=(l,p)=>(r._OrtGetOutputName=_.Z)(l,p),r._OrtFree=l=>(r._OrtFree=_._)(l),r._OrtCreateTensor=(l,p,h,C,T,U)=>(r._OrtCreateTensor=_.$)(l,p,h,C,T,U),r._OrtGetTensorData=(l,p,h,C,T)=>(r._OrtGetTensorData=_.aa)(l,p,h,C,T),r._OrtReleaseTensor=l=>(r._OrtReleaseTensor=_.ba)(l),r._OrtCreateRunOptions=(l,p,h,C)=>(r._OrtCreateRunOptions=_.ca)(l,p,h,C),r._OrtAddRunConfigEntry=(l,p,h)=>(r._OrtAddRunConfigEntry=_.da)(l,p,h),r._OrtReleaseRunOptions=l=>(r._OrtReleaseRunOptions=_.ea)(l),r._OrtCreateBinding=l=>(r._OrtCreateBinding=_.fa)(l),r._OrtBindInput=(l,p,h)=>(r._OrtBindInput=_.ga)(l,p,h),r._OrtBindOutput=(l,p,h,C)=>(r._OrtBindOutput=_.ha)(l,p,h,C),r._OrtClearBoundOutputs=l=>(r._OrtClearBoundOutputs=_.ia)(l),r._OrtReleaseBinding=l=>(r._OrtReleaseBinding=_.ja)(l),r._OrtRunWithBinding=(l,p,h,C,T)=>(r._OrtRunWithBinding=_.ka)(l,p,h,C,T),r._OrtRun=(l,p,h,C,T,U,G,ue)=>(r._OrtRun=_.la)(l,p,h,C,T,U,G,ue),r._OrtEndProfiling=l=>(r._OrtEndProfiling=_.ma)(l),r._JsepOutput=(l,p,h)=>(r._JsepOutput=_.na)(l,p,h),r._JsepGetNodeName=l=>(r._JsepGetNodeName=_.oa)(l);var Rt=r._malloc=l=>(Rt=r._malloc=_.pa)(l),Ut=r._free=l=>(Ut=r._free=_.qa)(l),Lt=l=>(Lt=_.sa)(l),Ft=()=>(Ft=_.ta)(),Ht=l=>(Ht=_.ua)(l),jt=l=>(jt=_.va)(l),Kt=l=>(Kt=_.xa)(l),qt=()=>(qt=_.ya)(),Pt=l=>(Pt=_.za)(l),$t=()=>($t=_.Aa)();r.___start_em_js=924587,r.___stop_em_js=924748;function pt(l){l=Object.assign({},l);var p=C=>()=>C()>>>0,h=C=>T=>C(T)>>>0;return l.__errno_location=p(l.__errno_location),l.malloc=h(l.malloc),l.stackSave=p(l.stackSave),l.stackAlloc=h(l.stackAlloc),l}r.stackAlloc=jt,r.stackSave=Ft,r.stackRestore=Ht,r.UTF8ToString=_e,r.stringToUTF8=(l,p,h)=>Dt(l,le,p,h),r.lengthBytesUTF8=It;var xt;Ne=function l(){xt||Yt(),xt||(Ne=l)};function Yt(){function l(){if(!xt&&(xt=!0,r.calledRun=!0,!z)){if(yt(Se),o(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;){var p=r.postRun.shift();Oe.unshift(p)}yt(Oe)}}if(!(0<Ce)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)Ie();yt(j),0<Ce||(r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),l()},1)):l())}}if(r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);0<r.preInit.length;)r.preInit.pop()();return Yt(),t.ready}})();typeof so=="object"&&typeof dn=="object"?dn.exports=io:typeof define=="function"&&define.amd&&define([],()=>io)});var lo=Jt(()=>{});var co=Jt(()=>{});var po={};Ir(po,{cpus:()=>Ou});var Ou,fo=H(()=>{Ou=void 0});var go=Jt((ho,cn)=>{"use strict";var mo=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return we.buffer!=Ce.buffer&&pe(),Ce}function o(){return we.buffer!=Ce.buffer&&pe(),dt}function n(){return we.buffer!=Ce.buffer&&pe(),Ne}function s(){return we.buffer!=Ce.buffer&&pe(),Le}function u(){return we.buffer!=Ce.buffer&&pe(),N}function d(){return we.buffer!=Ce.buffer&&pe(),de}var a=t,m,g;a.ready=new Promise((i,c)=>{m=i,g=c}),a.jsepInit=(i,c,f,$,I,P,V,oe)=>{a.Qb=i,a.wb=c,a.yb=f,a.jb=$,a.xb=I,a.Ea=P,a.zb=V,a.Ab=oe,c=(ee,Z,re)=>(...he)=>{let be=Ze,O=Z?.();he=ee(...he);let se=Z?.();return O!==se&&(ee=se,re(O),Z=re=null),Ze!=be?hu():he},f=ee=>async(...Z)=>{try{if(a.bb)throw Error("Session already started");let re=a.bb={Fb:Z[0],errors:[]},he=await ee(...Z);if(a.bb!==re)throw Error("Session mismatch");i.flush();let be=re.errors;if(0<be.length){let O=await Promise.all(be);if(O=O.filter(se=>se),0<O.length)throw Error(O.join(`\n`))}return he}finally{a.bb=null}},a._OrtRun=f(c(a._OrtRun,()=>a._OrtRun,ee=>a._OrtRun=ee)),a._OrtRunWithBinding=f(c(a._OrtRunWithBinding,()=>a._OrtRunWithBinding,ee=>a._OrtRunWithBinding=ee)),a._OrtBindInput=c(a._OrtBindInput,()=>a._OrtBindInput,ee=>a._OrtBindInput=ee),a.jsepRegisterBuffer=(ee,Z,re,he)=>i.registerBuffer(ee,Z,re,he),a.jsepUnregisterBuffers=ee=>{i.unregisterBuffers(ee)},a.jsepGetBuffer=ee=>i.getBuffer(ee),a.jsepCreateDownloader=(ee,Z,re)=>i.createDownloader(ee,Z,re)};var x=Object.assign({},a),b="./this.program",w=(i,c)=>{throw c},v=typeof window=="object",y=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",A=a.ENVIRONMENT_IS_PTHREAD||!1,R="";function W(i){return a.locateFile?a.locateFile(i,R):R+i}var M,D,_;if(S){var z=(sn(),Mt(an)),F=(ln(),Mt(un));R=y?F.dirname(R)+"/":__dirname+"/",M=(c,f)=>(c=c.startsWith("file://")?new URL(c):F.normalize(c),z.readFileSync(c,f?void 0:"utf8")),_=c=>(c=M(c,!0),c.buffer||(c=new Uint8Array(c)),c),D=(c,f,$,I=!0)=>{c=c.startsWith("file://")?new URL(c):F.normalize(c),z.readFile(c,I?void 0:"utf8",(P,V)=>{P?$(P):f(I?V.buffer:V)})},!a.thisProgram&&1<process.argv.length&&(b=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),w=(c,f)=>{throw process.exitCode=c,f},a.inspect=()=>"[Emscripten Module object]";let i;try{i=lo()}catch(c){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),c}global.Worker=i.Worker}else(v||y)&&(y?R=self.location.href:typeof document<"u"&&document.currentScript&&(R=document.currentScript.src),typeof e<"u"&&e&&(R=e),R.indexOf("blob:")!==0?R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1):R="",S||(M=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.send(null),c.responseText},y&&(_=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),D=(i,c,f)=>{var $=new XMLHttpRequest;$.open("GET",i,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?c($.response):f()},$.onerror=f,$.send(null)}));S&&typeof performance>"u"&&(global.performance=co().performance);var q=console.log.bind(console),le=console.error.bind(console);S&&(q=(...i)=>z.writeSync(1,i.join(" ")+`\n`),le=(...i)=>z.writeSync(2,i.join(" ")+`\n`));var B=a.print||q,K=a.printErr||le;Object.assign(a,x),x=null,a.thisProgram&&(b=a.thisProgram),a.quit&&(w=a.quit);var xe;a.wasmBinary&&(xe=a.wasmBinary);var ae=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Ke("no native wasm support detected");var we,j,Se,Oe=!1,Ie,Ce,dt,Ne,Le,N,de;function pe(){var i=we.buffer;a.HEAP8=Ce=new Int8Array(i),a.HEAP16=new Int16Array(i),a.HEAP32=Ne=new Int32Array(i),a.HEAPU8=dt=new Uint8Array(i),a.HEAPU16=new Uint16Array(i),a.HEAPU32=Le=new Uint32Array(i),a.HEAPF32=N=new Float32Array(i),a.HEAPF64=de=new Float64Array(i)}var ze=a.INITIAL_MEMORY||16777216;if(5242880<=ze||Ke("INITIAL_MEMORY should be larger than STACK_SIZE, was "+ze+"! (STACK_SIZE=5242880)"),A)we=a.wasmMemory;else if(a.wasmMemory)we=a.wasmMemory;else if(we=new WebAssembly.Memory({initial:ze/65536,maximum:65536,shared:!0}),!(we.buffer instanceof SharedArrayBuffer))throw K("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),S&&K("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");pe(),ze=we.buffer.byteLength;var Ue=[],Te=[],ke=[],Ge=0;function Xe(){return ae||0<Ge}var Fe=0,yt=null,bt=null;function Bt(){Fe++,a.monitorRunDependencies&&a.monitorRunDependencies(Fe)}function lr(){if(Fe--,a.monitorRunDependencies&&a.monitorRunDependencies(Fe),Fe==0&&(yt!==null&&(clearInterval(yt),yt=null),bt)){var i=bt;bt=null,i()}}function Ke(i){throw a.onAbort&&a.onAbort(i),i="Aborted("+i+")",K(i),Oe=!0,Ie=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),g(i),i}function kt(i){return i.startsWith("data:application/octet-stream;base64,")}var _e;_e="ort-wasm-simd-threaded.wasm",kt(_e)||(_e=W(_e));function It(i){if(i==_e&&xe)return new Uint8Array(xe);if(_)return _(i);throw"both async and sync fetching of the wasm failed"}function Dt(i){if(!xe&&(v||y)){if(typeof fetch=="function"&&!i.startsWith("file://"))return fetch(i,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at \'"+i+"\'";return c.arrayBuffer()}).catch(()=>It(i));if(D)return new Promise((c,f)=>{D(i,$=>c(new Uint8Array($)),f)})}return Promise.resolve().then(()=>It(i))}function at(i,c,f){return Dt(i).then($=>WebAssembly.instantiate($,c)).then($=>$).then(f,$=>{K("failed to asynchronously prepare wasm: "+$),Ke($)})}function dr(i,c){var f=_e;return xe||typeof WebAssembly.instantiateStreaming!="function"||kt(f)||f.startsWith("file://")||S||typeof fetch!="function"?at(f,i,c):fetch(f,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,i).then(c,function(I){return K("wasm streaming compile failed: "+I),K("falling back to ArrayBuffer instantiation"),at(f,i,c)}))}var it,Et={914988:i=>{a.Ea("Abs",i,void 0)},915039:i=>{a.Ea("Neg",i,void 0)},915090:i=>{a.Ea("Floor",i,void 0)},915143:i=>{a.Ea("Ceil",i,void 0)},915195:i=>{a.Ea("Reciprocal",i,void 0)},915253:i=>{a.Ea("Sqrt",i,void 0)},915305:i=>{a.Ea("Exp",i,void 0)},915356:i=>{a.Ea("Erf",i,void 0)},915407:i=>{a.Ea("Sigmoid",i,void 0)},915462:i=>{a.Ea("Log",i,void 0)},915513:i=>{a.Ea("Sin",i,void 0)},915564:i=>{a.Ea("Cos",i,void 0)},915615:i=>{a.Ea("Tan",i,void 0)},915666:i=>{a.Ea("Asin",i,void 0)},915718:i=>{a.Ea("Acos",i,void 0)},915770:i=>{a.Ea("Atan",i,void 0)},915822:i=>{a.Ea("Sinh",i,void 0)},915874:i=>{a.Ea("Cosh",i,void 0)},915926:i=>{a.Ea("Asinh",i,void 0)},915979:i=>{a.Ea("Acosh",i,void 0)},916032:i=>{a.Ea("Atanh",i,void 0)},916085:i=>{a.Ea("Tanh",i,void 0)},916137:i=>{a.Ea("Not",i,void 0)},916188:(i,c,f)=>{a.Ea("ClipV10",i,{min:c,max:f})},916260:i=>{a.Ea("Clip",i,void 0)},916312:(i,c)=>{a.Ea("Elu",i,{alpha:c})},916370:i=>{a.Ea("Relu",i,void 0)},916422:(i,c)=>{a.Ea("LeakyRelu",i,{alpha:c})},916486:(i,c)=>{a.Ea("ThresholdedRelu",i,{alpha:c})},916556:(i,c)=>{a.Ea("Cast",i,{to:c})},916614:i=>{a.Ea("Add",i,void 0)},916665:i=>{a.Ea("Sub",i,void 0)},916716:i=>{a.Ea("Mul",i,void 0)},916767:i=>{a.Ea("Div",i,void 0)},916818:i=>{a.Ea("Pow",i,void 0)},916869:i=>{a.Ea("Equal",i,void 0)},916922:i=>{a.Ea("Greater",i,void 0)},916977:i=>{a.Ea("GreaterOrEqual",i,void 0)},917039:i=>{a.Ea("Less",i,void 0)},917091:i=>{a.Ea("LessOrEqual",i,void 0)},917150:(i,c,f,$,I)=>{a.Ea("ReduceMean",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},917314:(i,c,f,$,I)=>{a.Ea("ReduceMax",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},917477:(i,c,f,$,I)=>{a.Ea("ReduceMin",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},917640:(i,c,f,$,I)=>{a.Ea("ReduceProd",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},917804:(i,c,f,$,I)=>{a.Ea("ReduceSum",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},917967:(i,c,f,$,I)=>{a.Ea("ReduceL1",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},918129:(i,c,f,$,I)=>{a.Ea("ReduceL2",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},918291:(i,c,f,$,I)=>{a.Ea("ReduceLogSum",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},918457:(i,c,f,$,I)=>{a.Ea("ReduceSumSquare",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},918626:(i,c,f,$,I)=>{a.Ea("ReduceLogSumExp",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},918795:i=>{a.Ea("Where",i,void 0)},918848:(i,c,f)=>{a.Ea("Transpose",i,{perm:c?Array.from(n().subarray(f>>>0,f+c>>>0)):[]})},918961:(i,c,f,$,I,P,V,oe,ee,Z,re,he,be,O,se)=>{a.Ea("ConvTranspose",i,{format:ee?"NHWC":"NCHW",autoPad:c,dilations:[f],group:$,kernel_shape:[I],pads:[P,V],strides:[oe],wIsConst:()=>!!r()[Z>>>0],outputPadding:re?Array.from(n().subarray(he>>>0,he+re>>>0)):[],outputShape:be?Array.from(n().subarray(O>>>0,O+be>>>0)):[],activation:Ve(se)})},919375:(i,c,f,$,I,P,V,oe,ee,Z,re,he,be,O)=>{a.Ea("ConvTranspose",i,{format:oe?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:$,kernelShape:Array.from(n().subarray(I>>>0,I+2>>>0)),pads:Array.from(n().subarray(P>>>0,P+4>>>0)),strides:Array.from(n().subarray(V>>>0,V+2>>>0)),wIsConst:()=>!!r()[ee>>>0],outputPadding:0<Z?Array.from(n().subarray(re>>>0,re+Z>>>0)):[],outputShape:0<he?Array.from(n().subarray(be>>>0,be+he>>>0)):[],activation:Ve(O)})},919932:(i,c,f,$,I,P,V,oe,ee,Z,re,he,be,O,se)=>{a.Ea("ConvTranspose",i,{format:ee?"NHWC":"NCHW",autoPad:c,dilations:[f],group:$,kernel_shape:[I],pads:[P,V],strides:[oe],wIsConst:()=>!!r()[Z>>>0],outputPadding:re?Array.from(n().subarray(he>>>0,he+re>>>0)):[],outputShape:be?Array.from(n().subarray(O>>>0,O+be>>>0)):[],activation:Ve(se)})},920346:(i,c,f,$,I,P,V,oe,ee,Z,re,he,be,O)=>{a.Ea("ConvTranspose",i,{format:oe?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:$,kernelShape:Array.from(n().subarray(I>>>0,I+2>>>0)),pads:Array.from(n().subarray(P>>>0,P+4>>>0)),strides:Array.from(n().subarray(V>>>0,V+2>>>0)),wIsConst:()=>!!r()[ee>>>0],outputPadding:0<Z?Array.from(n().subarray(re>>>0,re+Z>>>0)):[],outputShape:0<he?Array.from(n().subarray(be>>>0,be+he>>>0)):[],activation:Ve(O)})},920903:(i,c)=>{a.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},920994:(i,c,f,$,I,P,V,oe,ee,Z,re,he,be,O,se,ye)=>{a.Ea("AveragePool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:I,dilations:[P,V],kernel_shape:[oe,ee],pads:[Z,re,he,be],strides:[O,se]})},921278:(i,c)=>{a.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},921369:(i,c,f,$,I,P,V,oe,ee,Z,re,he,be,O,se,ye)=>{a.Ea("AveragePool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:I,dilations:[P,V],kernel_shape:[oe,ee],pads:[Z,re,he,be],strides:[O,se]})},921653:(i,c)=>{a.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},921740:(i,c,f,$,I,P,V,oe,ee,Z,re,he,be,O,se,ye)=>{a.Ea("MaxPool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:I,dilations:[P,V],kernel_shape:[oe,ee],pads:[Z,re,he,be],strides:[O,se]})},922020:(i,c)=>{a.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},922107:(i,c,f,$,I,P,V,oe,ee,Z,re,he,be,O,se,ye)=>{a.Ea("MaxPool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:I,dilations:[P,V],kernel_shape:[oe,ee],pads:[Z,re,he,be],strides:[O,se]})},922387:(i,c,f,$,I)=>{a.Ea("Gemm",i,{alpha:c,beta:f,transA:$,transB:I})},922491:i=>{a.Ea("MatMul",i,void 0)},922545:(i,c,f,$)=>{a.Ea("ArgMax",i,{keepDims:!!c,selectLastIndex:!!f,axis:$})},922653:(i,c,f,$)=>{a.Ea("ArgMin",i,{keepDims:!!c,selectLastIndex:!!f,axis:$})},922761:(i,c)=>{a.Ea("Softmax",i,{axis:c})},922824:(i,c)=>{a.Ea("Concat",i,{axis:c})},922884:(i,c,f,$,I)=>{a.Ea("Split",i,{axis:c,numOutputs:f,splitSizes:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},923029:i=>{a.Ea("Expand",i,void 0)},923083:(i,c)=>{a.Ea("Gather",i,{axis:Number(c)})},923154:(i,c)=>{a.Ea("GatherElements",i,{axis:Number(c)})},923233:(i,c,f,$,I,P,V,oe,ee,Z,re)=>{a.Ea("Resize",i,{antialias:c,axes:f?Array.from(n().subarray($>>>0,$+f>>>0)):[],coordinateTransformMode:Ve(I),cubicCoeffA:P,excludeOutside:V,extrapolationValue:oe,keepAspectRatioPolicy:Ve(ee),mode:Ve(Z),nearestMode:Ve(re)})},923584:(i,c,f,$,I,P,V)=>{a.Ea("Slice",i,{starts:c?Array.from(n().subarray(f>>>0,f+c>>>0)):[],ends:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[],axes:P?Array.from(n().subarray(V>>>0,V+P>>>0)):[]})},923815:i=>{a.Ea("Tile",i,void 0)},923867:(i,c,f)=>{a.Ea("LayerNormalization",i,{axis:Number(c),epsilon:Number(f)})},923974:(i,c,f)=>{a.Ea("InstanceNormalization",i,{epsilon:c,format:f?"NHWC":"NCHW"})},924088:(i,c,f)=>{a.Ea("InstanceNormalization",i,{epsilon:c,format:f?"NHWC":"NCHW"})},924202:i=>{a.Ea("Range",i,void 0)},924255:(i,c)=>{a.Ea("Einsum",i,{equation:Ve(c)})},924336:(i,c,f,$,I)=>{a.Ea("Pad",i,{mode:c,value:f,pads:$?Array.from(n().subarray(I>>>0,I+$>>>0)):[]})},924468:i=>{a.Ea("Gelu",i,void 0)},924520:i=>{a.Ea("BiasAdd",i,void 0)},924575:i=>{a.Ea("BiasSplitGelu",i,void 0)},924636:(i,c)=>{a.Ea("SkipLayerNormalization",i,{epsilon:c})},924717:(i,c,f,$,I,P,V,oe,ee,Z,re,he,be)=>{a.Ea("Conv",i,{format:ee?"NHWC":"NCHW",auto_pad:c,dilations:[f],group:$,kernel_shape:[I],pads:P?Array.from(n().subarray(V>>>0,V+P>>>0)):[],strides:[oe],w_is_const:()=>!!r()[Z>>>0],activation:Ve(re),activation_params:he?Array.from(u().subarray(be>>>0,be+he>>>0)):[]})},925098:(i,c,f,$,I,P,V,oe,ee,Z,re,he,be,O,se,ye)=>{a.Ea("Conv",i,{format:he?"NHWC":"NCHW",auto_pad:c,dilations:[f,$],group:I,kernel_shape:[P,V],pads:oe?Array.from(n().subarray(ee>>>0,ee+oe>>>0)):[],strides:[Z,re],w_is_const:()=>!!r()[be>>>0],activation:Ve(O),activation_params:se?Array.from(u().subarray(ye>>>0,ye+se>>>0)):[]})},925500:i=>{a.zb(i)},925534:(i,c)=>a.Ab(i,c,a.bb.Fb,a.bb.errors),925646:i=>a.wb(i),925679:i=>a.yb(i),925711:(i,c,f)=>{a.jb(i,c,f,!0)},925750:(i,c,f)=>{a.jb(i,c,f)}};function ct(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}function Tt(i){i.terminate(),i.onmessage=()=>{}}function Ot(i){(i=ne.Qa[i])||Ke(),ne.Eb(i)}function Wt(i){var c=ne.tb();if(!c)return 6;ne.Ya.push(c),ne.Qa[i.Xa]=c,c.Xa=i.Xa;var f={cmd:"run",start_routine:i.Gb,arg:i.rb,pthread_ptr:i.Xa};return S&&c.unref(),c.postMessage(f,i.Mb),0}var _t=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,cr=(i,c,f)=>{c>>>=0;var $=c+f;for(f=c;i[f]&&!(f>=$);)++f;if(16<f-c&&i.buffer&&_t)return _t.decode(i.buffer instanceof SharedArrayBuffer?i.slice(c,f):i.subarray(c,f));for($="";c<f;){var I=i[c++];if(I&128){var P=i[c++]&63;if((I&224)==192)$+=String.fromCharCode((I&31)<<6|P);else{var V=i[c++]&63;I=(I&240)==224?(I&15)<<12|P<<6|V:(I&7)<<18|P<<12|V<<6|i[c++]&63,65536>I?$+=String.fromCharCode(I):(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else $+=String.fromCharCode(I)}return $},Ve=(i,c)=>(i>>>=0)?cr(o(),i,c):"";function zt(i){if(A)return G(1,1,i);Ie=i,Xe()||(ne.Hb(),a.onExit&&a.onExit(i),Oe=!0),w(i,new ct(i))}var Vt=i=>{if(Ie=i,A)throw pr(i),"unwind";zt(i)},ne={ab:[],Ya:[],mb:[],Qa:{},gb:function(){A?ne.vb():ne.ub()},ub:function(){Ue.unshift(()=>{Bt(),ne.Bb(()=>lr())})},vb:function(){ne.receiveObjectTransfer=ne.Db,ne.threadInitTLS=ne.lb,ne.setExitStatus=ne.kb,ae=!1},kb:function(i){Ie=i},Sb:["$terminateWorker"],Hb:function(){for(var i of ne.Ya)Tt(i);for(i of ne.ab)Tt(i);ne.ab=[],ne.Ya=[],ne.Qa=[]},Eb:function(i){var c=i.Xa;delete ne.Qa[c],ne.ab.push(i),ne.Ya.splice(ne.Ya.indexOf(i),1),i.Xa=0,en(c)},Db:function(){},lb:function(){ne.mb.forEach(i=>i())},Cb:i=>new Promise(c=>{i.onmessage=P=>{P=P.data;var V=P.cmd;if(P.targetThread&&P.targetThread!=Sr()){var oe=ne.Qa[P.Rb];oe?oe.postMessage(P,P.transferList):K(\'Internal error! Worker sent a message "\'+V+\'" to target pthread \'+P.targetThread+", but that thread no longer exists!")}else V==="checkMailbox"?$t():V==="spawnThread"?Wt(P):V==="cleanupThread"?Ot(P.thread):V==="killThread"?(P=P.thread,V=ne.Qa[P],delete ne.Qa[P],Tt(V),en(P),ne.Ya.splice(ne.Ya.indexOf(V),1),V.Xa=0):V==="cancelThread"?ne.Qa[P.thread].postMessage({cmd:"cancel"}):V==="loaded"?(i.loaded=!0,c(i)):V==="alert"?alert("Thread "+P.threadId+": "+P.text):P.target==="setimmediate"?i.postMessage(P):V==="callHandler"?a[P.handler](...P.args):V&&K("worker sent an unknown command "+V)},i.onerror=P=>{throw K("worker sent an error! "+P.filename+":"+P.lineno+": "+P.message),P},S&&(i.on("message",function(P){i.onmessage({data:P})}),i.on("error",function(P){i.onerror(P)}));var f=[],$=["onExit","onAbort","print","printErr"],I;for(I of $)a.hasOwnProperty(I)&&f.push(I);i.postMessage({cmd:"load",handlers:f,urlOrBlob:a.mainScriptUrlOrBlob||e,wasmMemory:we,wasmModule:Se})}),Bb:function(i){i()},qb:function(){var i=W("ort-wasm-simd-threaded.worker.js");i=new Worker(i),ne.ab.push(i)},tb:function(){return ne.ab.length==0&&(ne.qb(),ne.Cb(ne.ab[0])),ne.ab.pop()}};a.PThread=ne;var st=i=>{for(;0<i.length;)i.shift()(a)};a.establishStackSpace=function(){var i=Sr(),c=n()[i+52>>2>>>0];i=n()[i+56>>2>>>0],Zn(c,c-i),Cr(c)};function pr(i){if(A)return G(2,0,i);Vt(i)}a.invokeEntryPoint=function(i,c){i=Qn.apply(null,[i,c]),Xe()?ne.kb(i):tn(i)};function Je(i){this.fb=i-24,this.pb=function(c){s()[this.fb+4>>2>>>0]=c},this.ob=function(c){s()[this.fb+8>>2>>>0]=c},this.gb=function(c,f){this.nb(),this.pb(c),this.ob(f)},this.nb=function(){s()[this.fb+16>>2>>>0]=0}}var He=0,fr=0;function wt(i,c,f,$){return A?G(3,1,i,c,f,$):Gt(i,c,f,$)}function Gt(i,c,f,$){if(i>>>=0,c>>>=0,f>>>=0,$>>>=0,typeof SharedArrayBuffer>"u")return K("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var I=[];return A&&I.length===0?wt(i,c,f,$):(i={Gb:f,Xa:i,rb:$,Mb:I},A?(i.Ob="spawnThread",postMessage(i,I),0):Wt(i))}function Nt(i,c,f){return A?G(4,1,i,c,f):0}function mr(i,c){if(A)return G(5,1,i,c)}var vt=i=>{for(var c=0,f=0;f<i.length;++f){var $=i.charCodeAt(f);127>=$?c++:2047>=$?c+=2:55296<=$&&57343>=$?(c+=4,++f):c+=3}return c},hr=(i,c,f,$)=>{if(f>>>=0,!(0<$))return 0;var I=f;$=f+$-1;for(var P=0;P<i.length;++P){var V=i.charCodeAt(P);if(55296<=V&&57343>=V){var oe=i.charCodeAt(++P);V=65536+((V&1023)<<10)|oe&1023}if(127>=V){if(f>=$)break;c[f++>>>0]=V}else{if(2047>=V){if(f+1>=$)break;c[f++>>>0]=192|V>>6}else{if(65535>=V){if(f+2>=$)break;c[f++>>>0]=224|V>>12}else{if(f+3>=$)break;c[f++>>>0]=240|V>>18,c[f++>>>0]=128|V>>12&63}c[f++>>>0]=128|V>>6&63}c[f++>>>0]=128|V&63}}return c[f>>>0]=0,f-I},gr=(i,c,f)=>hr(i,o(),c,f);function yr(i,c){if(A)return G(6,1,i,c)}function br(i,c,f){if(A)return G(7,1,i,c,f)}function wr(i,c,f){return A?G(8,1,i,c,f):0}function vr(i,c){if(A)return G(9,1,i,c)}function Rt(i,c,f){if(A)return G(10,1,i,c,f)}function Ut(i,c,f,$){if(A)return G(11,1,i,c,f,$)}function Lt(i,c,f,$){if(A)return G(12,1,i,c,f,$)}function Ft(i,c,f,$){if(A)return G(13,1,i,c,f,$)}function Ht(i){if(A)return G(14,1,i)}function jt(i,c){if(A)return G(15,1,i,c)}function Kt(i,c,f){if(A)return G(16,1,i,c,f)}var qt=i=>{if(!Oe)try{if(i(),!Xe())try{A?tn(Ie):Vt(Ie)}catch(c){c instanceof ct||c=="unwind"||w(1,c)}}catch(c){c instanceof ct||c=="unwind"||w(1,c)}};function Pt(i){i>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(n(),i>>2,i).value.then($t),i+=128,Atomics.store(n(),i>>2,1))}a.__emscripten_thread_mailbox_await=Pt;function $t(){var i=Sr();i&&(Pt(i),qt(()=>Xn()))}a.checkMailbox=$t;var pt=i=>i%4===0&&(i%100!==0||i%400===0),xt=[0,31,60,91,121,152,182,213,244,274,305,335],Yt=[0,31,59,90,120,151,181,212,243,273,304,334];function l(i,c,f,$,I,P,V,oe){return A?G(17,1,i,c,f,$,I,P,V,oe):-52}function p(i,c,f,$,I,P,V){if(A)return G(18,1,i,c,f,$,I,P,V)}var h=i=>{var c=vt(i)+1,f=Qr(c);return f&&gr(i,f,c),f},C=[],T=(i,c)=>{C.length=0;var f;for(c>>=2;f=o()[i++>>>0];)c+=f!=105&c,C.push(f==105?n()[c>>>0]:d()[c++>>>1]),++c;return C},U=i=>{var c=rn();return i=i(),Cr(c),i};function G(i,c){var f=arguments.length-2,$=arguments;return U(()=>{for(var I=nn(8*f),P=I>>3,V=0;V<f;V++){var oe=$[2+V];d()[P+V>>>0]=oe}return Yn(i,f,I,c)})}var ue=[],Y={},Q=()=>{if(!J){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:b||"./this.program"},c;for(c in Y)Y[c]===void 0?delete i[c]:i[c]=Y[c];var f=[];for(c in i)f.push(`${c}=${i[c]}`);J=f}return J},J;function ce(i,c){if(A)return G(19,1,i,c);i>>>=0,c>>>=0;var f=0;return Q().forEach(function($,I){var P=c+f;for(I=s()[i+4*I>>2>>>0]=P,P=0;P<$.length;++P)r()[I++>>0>>>0]=$.charCodeAt(P);r()[I>>0>>>0]=0,f+=$.length+1}),0}function me(i,c){if(A)return G(20,1,i,c);i>>>=0,c>>>=0;var f=Q();s()[i>>2>>>0]=f.length;var $=0;return f.forEach(function(I){$+=I.length+1}),s()[c>>2>>>0]=$,0}function E(i){return A?G(21,1,i):52}function te(i,c,f,$){return A?G(22,1,i,c,f,$):52}function fe(i,c,f,$,I){return A?G(23,1,i,c,f,$,I):70}var ut=[null,[],[]];function Xt(i,c,f,$){if(A)return G(24,1,i,c,f,$);c>>>=0,f>>>=0,$>>>=0;for(var I=0,P=0;P<f;P++){var V=s()[c>>2>>>0],oe=s()[c+4>>2>>>0];c+=8;for(var ee=0;ee<oe;ee++){var Z=o()[V+ee>>>0],re=ut[i];Z===0||Z===10?((i===1?B:K)(cr(re,0)),re.length=0):re.push(Z)}I+=oe}return s()[$>>2>>>0]=I,0}var Nn=[31,29,31,30,31,30,31,31,30,31,30,31],Un=[31,28,31,30,31,30,31,31,30,31,30,31];function du(i){var c=Array(vt(i)+1);return hr(i,c,0,c.length),c}var cu=(i,c)=>{r().set(i,c>>>0)};function Ln(i,c,f,$){function I(O,se,ye){for(O=typeof O=="number"?O.toString():O||"";O.length<se;)O=ye[0]+O;return O}function P(O,se){return I(O,se,"0")}function V(O,se){function ye(ao){return 0>ao?-1:0<ao?1:0}var St;return(St=ye(O.getFullYear()-se.getFullYear()))===0&&(St=ye(O.getMonth()-se.getMonth()))===0&&(St=ye(O.getDate()-se.getDate())),St}function oe(O){switch(O.getDay()){case 0:return new Date(O.getFullYear()-1,11,29);case 1:return O;case 2:return new Date(O.getFullYear(),0,3);case 3:return new Date(O.getFullYear(),0,2);case 4:return new Date(O.getFullYear(),0,1);case 5:return new Date(O.getFullYear()-1,11,31);case 6:return new Date(O.getFullYear()-1,11,30)}}function ee(O){var se=O.Za;for(O=new Date(new Date(O.$a+1900,0,1).getTime());0<se;){var ye=O.getMonth(),St=(pt(O.getFullYear())?Nn:Un)[ye];if(se>St-O.getDate())se-=St-O.getDate()+1,O.setDate(1),11>ye?O.setMonth(ye+1):(O.setMonth(0),O.setFullYear(O.getFullYear()+1));else{O.setDate(O.getDate()+se);break}}return ye=new Date(O.getFullYear()+1,0,4),se=oe(new Date(O.getFullYear(),0,4)),ye=oe(ye),0>=V(se,O)?0>=V(ye,O)?O.getFullYear()+1:O.getFullYear():O.getFullYear()-1}i>>>=0,c>>>=0,f>>>=0,$>>>=0;var Z=n()[$+40>>2>>>0];$={Kb:n()[$>>2>>>0],Jb:n()[$+4>>2>>>0],cb:n()[$+8>>2>>>0],ib:n()[$+12>>2>>>0],eb:n()[$+16>>2>>>0],$a:n()[$+20>>2>>>0],Wa:n()[$+24>>2>>>0],Za:n()[$+28>>2>>>0],Tb:n()[$+32>>2>>>0],Ib:n()[$+36>>2>>>0],Lb:Z?Ve(Z):""},f=Ve(f),Z={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var re in Z)f=f.replace(new RegExp(re,"g"),Z[re]);var he="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),be="January February March April May June July August September October November December".split(" ");Z={"%a":O=>he[O.Wa].substring(0,3),"%A":O=>he[O.Wa],"%b":O=>be[O.eb].substring(0,3),"%B":O=>be[O.eb],"%C":O=>P((O.$a+1900)/100|0,2),"%d":O=>P(O.ib,2),"%e":O=>I(O.ib,2," "),"%g":O=>ee(O).toString().substring(2),"%G":O=>ee(O),"%H":O=>P(O.cb,2),"%I":O=>(O=O.cb,O==0?O=12:12<O&&(O-=12),P(O,2)),"%j":O=>{for(var se=0,ye=0;ye<=O.eb-1;se+=(pt(O.$a+1900)?Nn:Un)[ye++]);return P(O.ib+se,3)},"%m":O=>P(O.eb+1,2),"%M":O=>P(O.Jb,2),"%n":()=>`\n`,"%p":O=>0<=O.cb&&12>O.cb?"AM":"PM","%S":O=>P(O.Kb,2),"%t":()=>"	","%u":O=>O.Wa||7,"%U":O=>P(Math.floor((O.Za+7-O.Wa)/7),2),"%V":O=>{var se=Math.floor((O.Za+7-(O.Wa+6)%7)/7);if(2>=(O.Wa+371-O.Za-2)%7&&se++,se)se==53&&(ye=(O.Wa+371-O.Za)%7,ye==4||ye==3&&pt(O.$a)||(se=1));else{se=52;var ye=(O.Wa+7-O.Za-1)%7;(ye==4||ye==5&&pt(O.$a%400-1))&&se++}return P(se,2)},"%w":O=>O.Wa,"%W":O=>P(Math.floor((O.Za+7-(O.Wa+6)%7)/7),2),"%y":O=>(O.$a+1900).toString().substring(2),"%Y":O=>O.$a+1900,"%z":O=>{O=O.Ib;var se=0<=O;return O=Math.abs(O)/60,(se?"+":"-")+("0000"+(O/60*100+O%60)).slice(-4)},"%Z":O=>O.Lb,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(re in Z)f.includes(re)&&(f=f.replace(new RegExp(re,"g"),Z[re]($)));return f=f.replace(/\\0\\0/g,"%"),re=du(f),re.length>c?0:(cu(re,i),re.length-1)}function $r(i){try{i()}catch(c){Ke(c)}}function pu(i){var c={},f;for(f in i)(function($){var I=i[$];c[$]=typeof I=="function"?function(){xr.push($);try{return I.apply(null,arguments)}finally{Oe||(xr.pop()===$||Ke(),Ze&&ft===1&&xr.length===0&&(ft=0,Ge+=1,$r(to),typeof Fibers<"u"&&Fibers.Ub()))}}:I})(f);return c}var ft=0,Ze=null,Fn=0,xr=[],Hn={},jn={},fu=0,Zr=null,mu=[];function hu(){return new Promise((i,c)=>{Zr={resolve:i,reject:c}})}function gu(){var i=Qr(65548),c=i+12;s()[i>>2>>>0]=c,s()[i+4>>2>>>0]=c+65536,c=xr[0];var f=Hn[c];return f===void 0&&(f=fu++,Hn[c]=f,jn[f]=c),c=f,n()[i+8>>2>>>0]=c,i}function yu(){var i=n()[Ze+8>>2>>>0];return i=j[jn[i]],--Ge,i()}function bu(i){if(!Oe){if(ft===0){var c=!1,f=!1;i(($=0)=>{if(!Oe&&(Fn=$,c=!0,f)){ft=2,$r(()=>ro(Ze)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),$=!1;try{var I=yu()}catch(oe){I=oe,$=!0}var P=!1;if(!Ze){var V=Zr;V&&(Zr=null,($?V.reject:V.resolve)(I),P=!0)}if($&&!P)throw I}}),f=!0,c||(ft=1,Ze=gu(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),$r(()=>eo(Ze)))}else ft===2?(ft=0,$r(no),Kn(Ze),Ze=null,mu.forEach($=>qt($))):Ke(`invalid state: ${ft}`);return Fn}}function wu(i){return bu(c=>{i().then(c)})}ne.gb();var vu=[null,zt,pr,wt,Nt,mr,yr,br,wr,vr,Rt,Ut,Lt,Ft,Ht,jt,Kt,l,p,ce,me,E,te,fe,Xt],$u={r:function(i,c,f){return wu(async()=>{await a.xb(i,c,f)})},b:function(i,c,f){throw i>>>=0,new Je(i).gb(c>>>0,f>>>0),He=i,fr++,He},O:function(i){qn(i>>>0,!y,1,!v,131072,!1),ne.lb()},l:function(i){i>>>=0,A?postMessage({cmd:"cleanupThread",thread:i}):Ot(i)},I:Gt,i:Nt,U:mr,E:yr,G:br,V:wr,S:vr,K:Rt,R:Ut,p:Lt,F:Ft,C:Ht,T:jt,D:Kt,q:()=>!0,A:function(i,c){i>>>=0,i==c>>>0?setTimeout(()=>$t()):A?postMessage({targetThread:i,cmd:"checkMailbox"}):(i=ne.Qa[i])&&i.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:Pt,X:function(i){S&&ne.Qa[i>>>0].ref()},u:function(i,c,f){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,f>>>=0,i=new Date(1e3*i),n()[f>>2>>>0]=i.getUTCSeconds(),n()[f+4>>2>>>0]=i.getUTCMinutes(),n()[f+8>>2>>>0]=i.getUTCHours(),n()[f+12>>2>>>0]=i.getUTCDate(),n()[f+16>>2>>>0]=i.getUTCMonth(),n()[f+20>>2>>>0]=i.getUTCFullYear()-1900,n()[f+24>>2>>>0]=i.getUTCDay(),i=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,n()[f+28>>2>>>0]=i},v:function(i,c,f){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,f>>>=0,i=new Date(1e3*i),n()[f>>2>>>0]=i.getSeconds(),n()[f+4>>2>>>0]=i.getMinutes(),n()[f+8>>2>>>0]=i.getHours(),n()[f+12>>2>>>0]=i.getDate(),n()[f+16>>2>>>0]=i.getMonth(),n()[f+20>>2>>>0]=i.getFullYear()-1900,n()[f+24>>2>>>0]=i.getDay(),c=(pt(i.getFullYear())?xt:Yt)[i.getMonth()]+i.getDate()-1|0,n()[f+28>>2>>>0]=c,n()[f+36>>2>>>0]=-(60*i.getTimezoneOffset()),c=new Date(i.getFullYear(),6,1).getTimezoneOffset();var $=new Date(i.getFullYear(),0,1).getTimezoneOffset();i=(c!=$&&i.getTimezoneOffset()==Math.min($,c))|0,n()[f+32>>2>>>0]=i},w:function(i){i>>>=0;var c=new Date(n()[i+20>>2>>>0]+1900,n()[i+16>>2>>>0],n()[i+12>>2>>>0],n()[i+8>>2>>>0],n()[i+4>>2>>>0],n()[i>>2>>>0],0),f=n()[i+32>>2>>>0],$=c.getTimezoneOffset(),I=new Date(c.getFullYear(),6,1).getTimezoneOffset(),P=new Date(c.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(P,I);return 0>f?n()[i+32>>2>>>0]=+(I!=P&&V==$):0<f!=(V==$)&&(I=Math.max(P,I),c.setTime(c.getTime()+6e4*((0<f?V:I)-$))),n()[i+24>>2>>>0]=c.getDay(),f=(pt(c.getFullYear())?xt:Yt)[c.getMonth()]+c.getDate()-1|0,n()[i+28>>2>>>0]=f,n()[i>>2>>>0]=c.getSeconds(),n()[i+4>>2>>>0]=c.getMinutes(),n()[i+8>>2>>>0]=c.getHours(),n()[i+12>>2>>>0]=c.getDate(),n()[i+16>>2>>>0]=c.getMonth(),n()[i+20>>2>>>0]=c.getYear(),i=c.getTime()/1e3,Jn((it=i,1<=+Math.abs(it)?0<it?+Math.floor(it/4294967296)>>>0:~~+Math.ceil((it-+(~~it>>>0))/4294967296)>>>0:0)),i>>>0},s:l,t:p,z:function(i,c,f){function $(Z){return(Z=Z.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Z[1]:"GMT"}i>>>=0,c>>>=0,f>>>=0;var I=new Date().getFullYear(),P=new Date(I,0,1),V=new Date(I,6,1);I=P.getTimezoneOffset();var oe=V.getTimezoneOffset(),ee=Math.max(I,oe);s()[i>>2>>>0]=60*ee,n()[c>>2>>>0]=+(I!=oe),i=$(P),c=$(V),i=h(i),c=h(c),oe<I?(s()[f>>2>>>0]=i,s()[f+4>>2>>>0]=c):(s()[f>>2>>>0]=c,s()[f+4>>2>>>0]=i)},d:()=>{Ke("")},c:function(i,c,f){return i>>>=0,c=T(c>>>0,f>>>0),Et[i].apply(null,c)},k:function(i,c,f){return i>>>=0,c=T(c>>>0,f>>>0),Et[i].apply(null,c)},m:function(){},j:function(){return Date.now()},W:()=>{throw Ge+=1,"unwind"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return S?(fo(),Mt(po)).cpus().length:navigator.hardwareConcurrency},L:function(i,c,f,$){for(ne.Pb=c>>>0,ue.length=f,c=$>>>0>>3,$=0;$<f;$++)ue[$]=d()[c+$>>>0];return(0>i?Et[-i-1]:vu[i]).apply(null,ue)},y:function(i){i>>>=0;var c=o().length;if(i<=c||4294901760<i)return!1;for(var f=1;4>=f;f*=2){var $=c*(1+.2/f);$=Math.min($,i+100663296);var I=Math;$=Math.max(i,$);e:{I=I.min.call(I,4294901760,$+(65536-$%65536)%65536)-we.buffer.byteLength+65535>>>16;try{we.grow(I),pe();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},P:ce,Q:me,H:Vt,h:E,o:te,x:fe,n:Xt,a:we||a.wasmMemory,J:Ln,e:function(i,c,f,$){return Ln(i>>>0,c>>>0,f>>>0,$>>>0)}};(function(){function i(f,$){return f=f.exports,f=pu(f),j=f=xu(f),ne.mb.push(j.Da),Te.unshift(j.Y),Se=$,lr(),f}var c={a:$u};if(Bt(),a.instantiateWasm)try{return a.instantiateWasm(c,i)}catch(f){K("Module.instantiateWasm callback failed with error: "+f),g(f)}return dr(c,function(f){i(f.instance,f.module)}).catch(g),{}})(),a._OrtInit=(i,c)=>(a._OrtInit=j.Z)(i,c),a._OrtGetLastError=(i,c)=>(a._OrtGetLastError=j._)(i,c),a._OrtCreateSessionOptions=(i,c,f,$,I,P,V,oe,ee,Z)=>(a._OrtCreateSessionOptions=j.$)(i,c,f,$,I,P,V,oe,ee,Z),a._OrtAppendExecutionProvider=(i,c)=>(a._OrtAppendExecutionProvider=j.aa)(i,c),a._OrtAddFreeDimensionOverride=(i,c,f)=>(a._OrtAddFreeDimensionOverride=j.ba)(i,c,f),a._OrtAddSessionConfigEntry=(i,c,f)=>(a._OrtAddSessionConfigEntry=j.ca)(i,c,f),a._OrtReleaseSessionOptions=i=>(a._OrtReleaseSessionOptions=j.da)(i),a._OrtCreateSession=(i,c,f)=>(a._OrtCreateSession=j.ea)(i,c,f),a._OrtReleaseSession=i=>(a._OrtReleaseSession=j.fa)(i),a._OrtGetInputOutputCount=(i,c,f)=>(a._OrtGetInputOutputCount=j.ga)(i,c,f),a._OrtGetInputName=(i,c)=>(a._OrtGetInputName=j.ha)(i,c),a._OrtGetOutputName=(i,c)=>(a._OrtGetOutputName=j.ia)(i,c),a._OrtFree=i=>(a._OrtFree=j.ja)(i),a._OrtCreateTensor=(i,c,f,$,I,P)=>(a._OrtCreateTensor=j.ka)(i,c,f,$,I,P),a._OrtGetTensorData=(i,c,f,$,I)=>(a._OrtGetTensorData=j.la)(i,c,f,$,I),a._OrtReleaseTensor=i=>(a._OrtReleaseTensor=j.ma)(i),a._OrtCreateRunOptions=(i,c,f,$)=>(a._OrtCreateRunOptions=j.na)(i,c,f,$),a._OrtAddRunConfigEntry=(i,c,f)=>(a._OrtAddRunConfigEntry=j.oa)(i,c,f),a._OrtReleaseRunOptions=i=>(a._OrtReleaseRunOptions=j.pa)(i),a._OrtCreateBinding=i=>(a._OrtCreateBinding=j.qa)(i),a._OrtBindInput=(i,c,f)=>(a._OrtBindInput=j.ra)(i,c,f),a._OrtBindOutput=(i,c,f,$)=>(a._OrtBindOutput=j.sa)(i,c,f,$),a._OrtClearBoundOutputs=i=>(a._OrtClearBoundOutputs=j.ta)(i),a._OrtReleaseBinding=i=>(a._OrtReleaseBinding=j.ua)(i),a._OrtRunWithBinding=(i,c,f,$,I)=>(a._OrtRunWithBinding=j.va)(i,c,f,$,I),a._OrtRun=(i,c,f,$,I,P,V,oe)=>(a._OrtRun=j.wa)(i,c,f,$,I,P,V,oe),a._OrtEndProfiling=i=>(a._OrtEndProfiling=j.xa)(i),a._JsepOutput=(i,c,f)=>(a._JsepOutput=j.ya)(i,c,f),a._JsepGetNodeName=i=>(a._JsepGetNodeName=j.za)(i);var Sr=a._pthread_self=()=>(Sr=a._pthread_self=j.Aa)(),Qr=a._malloc=i=>(Qr=a._malloc=j.Ba)(i),Kn=a._free=i=>(Kn=a._free=j.Ca)(i);a.__emscripten_tls_init=()=>(a.__emscripten_tls_init=j.Da)();var qn=a.__emscripten_thread_init=(i,c,f,$,I,P)=>(qn=a.__emscripten_thread_init=j.Fa)(i,c,f,$,I,P);a.__emscripten_thread_crashed=()=>(a.__emscripten_thread_crashed=j.Ga)();var Yn=(i,c,f,$)=>(Yn=j.Ha)(i,c,f,$),en=i=>(en=j.Ia)(i),tn=a.__emscripten_thread_exit=i=>(tn=a.__emscripten_thread_exit=j.Ja)(i),Xn=a.__emscripten_check_mailbox=()=>(Xn=a.__emscripten_check_mailbox=j.Ka)(),Jn=i=>(Jn=j.La)(i),Zn=(i,c)=>(Zn=j.Ma)(i,c),rn=()=>(rn=j.Na)(),Cr=i=>(Cr=j.Oa)(i),nn=i=>(nn=j.Pa)(i),Qn=a.dynCall_ii=(i,c)=>(Qn=a.dynCall_ii=j.Ra)(i,c),eo=i=>(eo=j.Sa)(i),to=()=>(to=j.Ta)(),ro=i=>(ro=j.Ua)(i),no=()=>(no=j.Va)();a.___start_em_js=925783,a.___stop_em_js=925944;function xu(i){i=Object.assign({},i);var c=$=>()=>$()>>>0,f=$=>I=>$(I)>>>0;return i.__errno_location=c(i.__errno_location),i.pthread_self=c(i.pthread_self),i.malloc=f(i.malloc),i.stackSave=c(i.stackSave),i.stackAlloc=f(i.stackAlloc),i}a.keepRuntimeAlive=Xe,a.wasmMemory=we,a.stackAlloc=nn,a.stackSave=rn,a.stackRestore=Cr,a.UTF8ToString=Ve,a.stringToUTF8=gr,a.lengthBytesUTF8=vt,a.ExitStatus=ct,a.PThread=ne;var Ar;bt=function i(){Ar||oo(),Ar||(bt=i)};function oo(){function i(){if(!Ar&&(Ar=!0,a.calledRun=!0,!Oe)&&(A||st(Te),m(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),!A)){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;){var c=a.postRun.shift();ke.unshift(c)}st(ke)}}if(!(0<Fe))if(A)m(a),A||st(Te),startWorker(a);else{if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Ue.unshift(a.preRun.shift());st(Ue),0<Fe||(a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),i()},1)):i())}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return oo(),t.ready}})();typeof ho=="object"&&typeof cn=="object"?cn.exports=mo:typeof define=="function"&&define.amd&&define([],()=>mo)});var yo=Jt((mc,_u)=>{_u.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n\'});var mn,Qt,er,Tr,tr,So,hn,De=H(()=>{"use strict";mn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Qt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},er=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Tr=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},tr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},So=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",hn=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Vu,Gu,Co,Ao,Io,Nu,Ee,mt=H(()=>{"use strict";De();Vu=["V","I","W","E","F"],Gu=(e,t)=>{console.log(`[${Vu[e]},${new Date().toISOString()}]${t}`)},Io=(e,t)=>{Co=e,Ao=t},Nu=(e,t)=>{let r=tr(e),o=tr(Co);r>=o&&Gu(r,typeof t=="function"?t():t)},Ee=(...e)=>{Ao&&Nu(...e)}});var Eo,To=H(()=>{"use strict";De();Eo=(e,t)=>new(Tr(t))(e)});var Oo=H(()=>{"use strict"});var Or,Uu,_o,yn,gn,Ro,Po=H(()=>{"use strict";mt();Oo();Or=e=>Math.ceil(e/16)*16,Uu=1,_o=()=>Uu++,yn=async(e,t,r,o)=>{let n=Or(r),s=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=e.getCommandEncoder();e.endComputePass(),u.copyBufferToBuffer(t,0,s,0,n),e.flush(),await s.mapAsync(GPUMapMode.READ);let d=s.getMappedRange();if(o){let a=o();return a.set(new Uint8Array(d,0,r)),a}else return new Uint8Array(d.slice(0,r))}finally{s.destroy()}},gn=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let o=r.buffer,n=r.byteOffset,s=r.byteLength,u=Or(s),d=this.storageCache.get(t);if(!d)throw new Error("gpu data for uploading does not exist");if(d.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${d.originalSize}, data size=${s}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),m=a.getMappedRange();new Uint8Array(m).set(new Uint8Array(o,n,s)),a.unmap();let g=this.backend.getCommandEncoder();this.backend.endComputePass(),g.copyBufferToBuffer(a,0,d.gpuData.buffer,0,u),Ee("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(a)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(r);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=Or(o.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o.gpuData.buffer,0,n.gpuData.buffer,0,s)}registerExternalBuffer(t,r,o){let n;if(o){if(n=this.externalBuffers.get(o),n===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ee("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, buffer is the same, skip.`),n;this.externalBuffers.delete(o)}else n=_o();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,n),Ee("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ee("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Or(t),n,s=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||u){let a=s?this.freeBuffers:this.freeUniformBuffers,m=a.get(o);m||(m=[],a.set(o,m)),m.length>0?n=m.pop():n=this.backend.device.createBuffer({size:o,usage:r})}else n=this.backend.device.createBuffer({size:o,usage:r});let d={id:_o(),type:0,buffer:n};return this.storageCache.set(d.id,{gpuData:d,originalSize:t}),Ee("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${d.id}`),d}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ee("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await yn(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Ro=(...e)=>new gn(...e)});var bn,ie,Pe=H(()=>{"use strict";bn=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this._cacheKey}},ie=e=>new bn(e)});var wn,Qe,k,Ct,_r,Rr,Pr,ge=H(()=>{"use strict";wn=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},Qe=class{static calcShape(t,r,o=!1){let n=t.length,s=r.length;if(n===0)return r;if(s===0)return t;let u=Math.max(t.length,r.length),d=new Array(u);if(o){if(n<2||s<2)return;let a=wn.calcMatMulShape([t[n-2],t[n-1]],[r[s-2],r[s-1]]);if(a===void 0)return;[d[u-2],d[u-1]]=a}for(let a=o?3:1;a<=u;a++){let m=n-a<0?1:t[n-a],g=s-a<0?1:r[s-a];if(m!==g&&m>1&&g>1)return;d[u-a]=Math.max(m,g)}return d}static isValidBroadcast(t,r){let o=t.length,n=r.length;if(o>n)return!1;for(let s=1;s<=o;s++)if(t[o-s]!==1&&t[o-s]!==r[n-s])return!1;return!0}},k=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let n=1;for(let s=r;s<o;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[s]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let n=r-3;n>=0;--n)o[n]=o[n+1]*t[n+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((n,s)=>n+r[s]+r[s+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,n)=>o===r[n])}},Ct=class e{static adjustPoolAttributes(t,r,o,n,s,u){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let d=0;d<r.length-2;d++)d>=o.length?o.push(r[d+2]):o[d]=r[d+2];for(let d=0;d<o.length;d++)if(d<n.length){if(n[d]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let d=0;d<o.length;d++)if(d<s.length){if(s[d]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let d=0;d<o.length*2;d++)if(d<u.length){if(u[d]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let d=0;d<o.length;d++){if(o[d]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[d]>=o[d]||u[d+o.length]>=o[d])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,n,s,u,d){if(d){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<t.length-2;a++)e.adjustPadAndReturnShape(t[a+(u?1:2)],r[a],o[a],n[a],s,a,a+t.length-2,d)}}static computePoolOutputShape(t,r,o,n,s,u,d){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let a=[r[0],r[1]];return e.computeShapeHelper(t,r,a,o,n,s,u,d),a}static computeConvOutputShape(t,r,o,n,s,u,d){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let a=[t[0],r[0]];return e.computeShapeHelper(!1,t,a,o,n,s,u,d),a}static computeShapeHelper(t,r,o,n,s,u,d,a){if(t)for(let m=0;m<r.length-2;m++)o.push(1);else for(let m=0;m<r.length-2;m++)o.push(e.adjustPadAndReturnShape(r[m+2],n[m],s[m],u[m],d,m,m+r.length-2,a))}static adjustPadAndReturnShape(t,r,o,n,s,u,d,a){let m=o*(n-1)+1;if(a&&a!=="NOTSET")switch(a){case"VALID":return s[u]=0,s[d]=0,Math.floor((t-m)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let x=((t+r-1)/r-1)*r+n-t;return s[u]=Math.floor(a==="SAME_LOWER"?(x+1)/2:x/2),s[d]=x-s[u],Math.floor((t+x-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[u]+s[d]-m)/r+1)}},_r=class{static getShapeOfGemmResult(t,r,o,n,s){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let u,d,a;r?(u=t[1],d=t[0]):(u=t[0],d=t[1]);let m=-1;if(n?(a=o[0],m=1):(a=o[1],m=0),o[m]!==d)throw new Error("dimension mismatch");if(u<=0||a<=0||d<=0)throw new Error("invalid shape specified");if(s&&!Qe.isValidBroadcast(s,[u,a]))throw new Error("gemm: invalid bias shape for broadcast");return[u,a,d]}},Rr=-34028234663852886e22,Pr=34028234663852886e22});var Lu,Mo,Me,$n,lt,qe,At,ht,Bo,L,X,vn,ko,xn,Do,ve=H(()=>{"use strict";De();ge();Lu=64,Mo=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Me=(e,t=1)=>{let r=Mo(e,t);return typeof r=="string"?r:r[0]},$n=e=>[{type:"uint32",data:e},{type:"uint32",data:k.computeStrides(e)}],lt=e=>e%4===0?4:e%2===0?2:1,qe=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,At=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,ht=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Bo=(e,t,r,o,n)=>{let s=typeof r=="number",u=s?r:r.length,d=[...new Array(u).keys()],a=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,m=Mo(t,n),g=typeof m=="string"?m:m[1],x=typeof m=="string"?m:m[0],b={indices:a,value:g,storage:x,tensor:t},w=N=>typeof N=="string"?N:`${N}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},y=s?"uniforms.":"",S=`${y}${e}_shape`,A=`${y}${e}_strides`,R="";for(let N=0;N<u-1;N++)R+=`\n    let dim${N} = current / ${A}[${N}];\n    let rest${N} = current % ${A}[${N}];\n    indices[${N}] = dim${N};\n    current = rest${N};\n    `;R+=`indices[${u-1}] = current;`;let W=u<2?"":`\n  fn o2i_${e}(offset: u32) -> ${b.indices} {\n    var indices: ${b.indices};\n    var current = offset;\n    ${R}\n    return indices;\n  }`,M=N=>(v.offsetToIndices=!0,u<2?N:`o2i_${e}(${N})`),D=[];if(u>=2)for(let N=u-1;N>=0;N--)D.push(`${A}[${N}] * (indices[${N}])`);let _=u<2?"":`\n  fn i2o_${e}(indices: ${b.indices}) -> u32 {\n    return ${D.join("+")};\n  }`,z=N=>(v.indicesToOffset=!0,u<2?N:`i2o_${e}(${N})`),F=(...N)=>u===0?"0u":`${b.indices}(${N.map(w).join(",")})`,q=(N,de)=>u<2?`${N}`:`${N}[${de}]`,le=(N,de,pe)=>u<2?`${N}=${pe};`:`${N}[${de}]=${pe};`,B={},K=(N,de)=>{v.broadcastedIndicesToOffset=!0;let pe=`${de.name}broadcastedIndicesTo${e}Offset`;if(pe in B)return`${pe}(${N})`;let ze=[];for(let Ue=u-1;Ue>=0;Ue--){let Te=de.indicesGet("outputIndices",Ue+de.rank-u);ze.push(`${q(A,Ue)} * (${Te} % ${q(S,Ue)})`)}return B[pe]=`fn ${pe}(outputIndices: ${de.type.indices}) -> u32 {\n             return ${ze.length>0?ze.join("+"):"0u"};\n           }`,`${pe}(${N})`},xe=(N,de)=>(()=>{if(b.storage===b.value)return`${e}[${N}]=${de};`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`${e}[${N}]=vec2<u32>(u32(${de}), select(0u, 0xFFFFFFFFu, ${de} < 0));`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`${e}[${N}]=vec2<u32>(u32(${de}), 0u);`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`${e}[${N}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${de}));`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),ae=N=>(()=>{if(b.storage===b.value)return`${e}[${N}]`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`i32(${e}[${N}].x)`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`u32(${e}[${N}].x)`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${N}] & 0xFFu), bool(${e}[${N}] & 0xFF00u), bool(${e}[${N}] & 0xFF0000u), bool(${e}[${N}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),we=u<2?"":`\n  fn get_${e}ByIndices(indices: ${b.indices}) -> ${g} {\n    return ${ae(`i2o_${e}(indices)`)};\n  }`,j=u<2?"":(()=>{let N=d.map(pe=>`d${pe}: u32`).join(", "),de=d.map(pe=>`d${pe}`).join(", ");return`\n  fn get_${e}(${N}) -> ${g} {\n    return get_${e}ByIndices(${F(de)});\n  }`})(),Se=(...N)=>{if(N.length!==u)throw new Error(`indices length must be ${u}`);let de=N.map(w).join(",");return u===0?ae("0u"):u===1?ae(de[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${de})`)},Oe=N=>u<2?ae(N):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${N})`),Ie=u<2?"":`\n  fn set_${e}ByIndices(indices: ${b.indices}, value: ${g}) {\n    ${xe(`i2o_${e}(indices)`,"value")}\n  }`,Ce=u<2?"":(()=>{let N=d.map(pe=>`d${pe}: u32`).join(", "),de=d.map(pe=>`d${pe}`).join(", ");return`\n  fn set_${e}(${N}, value: ${g}) {\n    set_${e}ByIndices(${F(de)}, value);\n  }`})();return{impl:()=>{let N=[];return s||(N.push(`const ${S} = ${b.indices}(${r.join(",")});`),N.push(`const ${A} = ${b.indices}(${k.computeStrides(r).join(",")});`)),v.offsetToIndices&&N.push(W),v.indicesToOffset&&N.push(_),v.broadcastedIndicesToOffset&&Object.values(B).forEach(de=>N.push(de)),v.set&&N.push(Ce),v.setByIndices&&N.push(Ie),v.get&&N.push(j),v.getByIndices&&N.push(we),N.join(`\n`)},type:b,offsetToIndices:M,indicesToOffset:z,broadcastedIndicesToOffset:K,indices:F,indicesGet:q,indicesSet:le,set:(...N)=>{if(N.length!==u+1)throw new Error(`indices length must be ${u}`);let de=N[u];if(typeof de!="string")throw new Error("value must be string");let pe=N.slice(0,u).map(w).join(",");return u===0?xe("0u",de):u===1?xe(pe[0],de):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${pe}, ${de})`)},setByOffset:xe,setByIndices:(N,de)=>u<2?xe(N,de):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${N}, ${de});`),get:Se,getByOffset:ae,getByIndices:Oe,usage:o?"input":"output",name:e,strides:A,shape:S,rank:u}},L=(e,t,r,o=1)=>Bo(e,t,r,!0,o),X=(e,t,r,o=1)=>Bo(e,t,r,!1,o),vn=class{constructor(t){this.normalizedDispatchGroup=t;this.indicesHelpers=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=Lu){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2],s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=s?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`,d=s?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${r*o*n}u + local_index;`;return`@compute @workgroup_size(${r}, ${o}, ${n})\n  fn main(${u}) {\n    ${d}\n  `}declareVariable(t,r){this.indicesHelpers.push(t),t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:t.type.indices}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:t.type.indices});let o=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerUniform(t,r){return this.uniforms.push({name:t,type:r}),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o}of this.uniforms)t.push(`${r}:${o}`);return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.indicesHelpers.map(t=>t.impl()).join(`\n`)}},ko=e=>new vn(e),xn=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;n++){let s=r-1-n,u=e[s]||1;(t[t.length-1-n]||1)>1&&u===1&&o.unshift(s)}return o},Do=e=>e<=4});var Fu,Wo,Hu,ju,gt,zo,Vo,rr=H(()=>{"use strict";ge();Pe();ve();Fu=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Wo=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Hu=(e,t)=>k.sortBasedOnPerm(e,Wo(e.length,t)),ju=(e,t,r,o)=>{let n=[];n.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let s=0;s<t;++s)n.push(r.indicesSet("a",e[s],`i[${s}]`));return n.push("return a;}"),n.join(`\n`)},gt=(e,t)=>{let r=e.dataType,o=e.dims.length,n=Wo(o,t),s=Do(o),u=Hu(e.dims,n),d=s?u.length:u,a=s?o:e.dims,m=X("output",r,d),g=L("a",r,a),x=b=>`\n  ${b.registerUniform("output_size","u32").declareVariables(g,m)}\n\n  ${ju(n,o,g,m)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${m.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${m.setByOffset("global_idx",g.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:s?["rank"]:["dims"]},getRunData:b=>{let w=k.size(u);return{outputs:[{dims:u,dataType:b[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:s?[{type:"uint32",data:w},...$n(b[0].dims),...$n(u)]:[{type:"uint32",data:w}]}},getShaderSource:x}},zo=(e,t)=>{Fu(e.inputs),e.compute(gt(e.inputs[0],t.perm))},Vo=e=>ie({perm:e.perm})});var Ku,qu,Yu,Xu,Ju,Zu,Qu,el,tl,rl,et,Go,No,Uo,Lo,Fo,Ho,jo,Ko,qo,Yo,Xo=H(()=>{"use strict";ge();ve();Mr();rr();Ku={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},qu={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Yu={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Xu={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Ju=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Zu=(e,t)=>{let r=[],o=e.length;for(let s=0;s<o;s++)t.indexOf(s)===-1&&r.push(e[s]);let n=t.map(s=>e[s]);return[r,n]},Qu=(e,t)=>{let r=e.length+t.length,o=[],n=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?o.push(e[n++]):o.push(1);return o},el=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},tl=(e,t)=>{let r=[];if(!el(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},rl=(e,t,r,o,n,s,u)=>{let d=r[0].dims,a=k.size(s),m=k.size(u),g=L("_A",r[0].dataType,d),x=X("output",n,s),b=32,w=`\n          var<workgroup> aBestValues : array<${x.type.storage}, ${b}>;\n       `;return{name:e,shaderCache:t,getShaderSource:y=>`\n        ${y.registerUniform("reduceSize","u32").declareVariables(g,x)}\n        ${w}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${y.mainStart(b)}\n          let local_idx = local_id.x;\n\n          let outputIndex = global_idx / ${b};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${x.type.storage}(${Yu[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${b}) {\n           let candidate = ${x.type.storage}(${g.getByOffset("offset + k")});\n           bestValue = ${Ku[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${b}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${qu[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${x.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${x.type.storage}(uniforms.reduceSize)`:`${Xu[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:m}]})}},et=(e,t,r,o)=>{let n=e.inputs.length===1?r:Sn(e.inputs,r),s=n.axes;s.length===0&&!n.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((w,v)=>v));let u=k.normalizeAxes(s,e.inputs[0].dims.length),d=u,a=e.inputs[0],m=tl(d,e.inputs[0].dims.length);m.length>0&&(a=e.compute(gt(e.inputs[0],m),{inputs:[0],outputs:[-1]})[0],d=Ju(d.length,a.dims.length));let[g,x]=Zu(a.dims,d),b=g;n.keepDims&&(b=Qu(g,u)),e.compute(rl(t,{hint:n.cacheKey,inputDependencies:["type"]},[a],o,e.inputs[0].dataType,b,x),{inputs:[a]})},Go=(e,t)=>{et(e,"ReduceMeanShared",t,"mean")},No=(e,t)=>{et(e,"ReduceL1Shared",t,"l1")},Uo=(e,t)=>{et(e,"ReduceL2Shared",t,"l2")},Lo=(e,t)=>{et(e,"ReduceLogSumExpShared",t,"logSumExp")},Fo=(e,t)=>{et(e,"ReduceMaxShared",t,"max")},Ho=(e,t)=>{et(e,"ReduceMinShared",t,"min")},jo=(e,t)=>{et(e,"ReduceProdShared",t,"prod")},Ko=(e,t)=>{et(e,"ReduceSumShared",t,"sum")},qo=(e,t)=>{et(e,"ReduceSumSquareShared",t,"sumSquare")},Yo=(e,t)=>{et(e,"ReduceLogSumShared",t,"logSum")}});var tt,nl,Br,Sn,rt,ol,al,il,sl,ul,ll,dl,cl,pl,fl,nt,Jo,Zo,Qo,ea,ta,ra,na,oa,aa,ia,Ye,Mr=H(()=>{"use strict";ge();Pe();ve();Xo();tt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},nl=e=>["","",`var value = ${e.getByOffset("inputOffset")};`,""],Br=(e,t,r,o,n,s,u=!1,d=!1)=>{let a=[],m=r[0].dims,g=k.normalizeAxes(n,r[0].dims.length),x=!d&&g.length===0;m.forEach((z,F)=>{x||g.indexOf(F)>=0?u&&a.push(1):a.push(z)});let b=[],w=L("_A",r[0].dataType,m),v=X("output",s,a),y=o(w,v,g),S=`inputOffset = ${w.indicesToOffset("inputIndices")};`,A=`let ${S};`,R=`var ${S};`,W=y[1]===""?"":R,M=(y[1]===""?A:S)+`\n`+y[2];for(let z=0,F=0;z<r[0].dims.length;z++)x||g.indexOf(z)>=0?(u&&F++,M=`for(var j${z}: u32 = 0; j${z} < ${r[0].dims[z]}; j${z}++) {\n                ${y[2].includes("lastIndex")?`let lastIndex = j${z};`:""}\n                ${w.indicesSet("inputIndices",z,`j${z}`)}\n                ${M}\n              }`):(b.push(`${w.indicesSet("inputIndices",z,v.indicesGet("outputIndices",F))};`),F++);let D=k.size(a);return{name:e,shaderCache:t,getShaderSource:z=>`\n        ${z.declareVariables(w,v)}\n\n        ${z.mainStart()}\n          ${z.guardAgainstOutOfBoundsWorkgroupSizes(D)}\n          var inputIndices: ${w.type.indices};\n          let outputIndices = ${v.offsetToIndices("global_idx")};\n\n          ${b.join(`\n`)}\n          ${y[0]}       // init ops for reduce max/min\n          ${W}\n          ${y[1]}\n          ${M}\n          ${y[3]}\n          ${y.length===4?v.setByOffset("global_idx","value"):y.slice(4).join(`\n`)}\n        }`,getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(D/64)}})}},Sn=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),ie({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},rt=(e,t,r,o)=>{let n=e.inputs,s=n.length===1?r:Sn(n,r);e.compute(Br(t,{hint:s.cacheKey},[n[0]],s.noopWithEmptyAxes&&s.axes.length===0?nl:o,s.axes,n[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},ol=(e,t)=>{tt(e.inputs),rt(e,"ReduceLogSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByOffset("inputOffset")};`,"value = log(value);"])},al=(e,t)=>{tt(e.inputs),rt(e,"ReduceL1",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${o.getByOffset("inputOffset")});`,""])},il=(e,t)=>{tt(e.inputs),rt(e,"ReduceL2",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])},sl=(e,t)=>{tt(e.inputs),rt(e,"ReduceLogSumExp",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${o.getByOffset("inputOffset")});`,"value = log(value);"])},ul=(e,t)=>{tt(e.inputs),rt(e,"ReduceMax",t,(o,n,s)=>{let u=[];for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&u.push(o.indicesSet("inputIndices",d,0));return[`${u.join(`\n`)}`,`var value = ${o.getByOffset("inputOffset")};`,`value = max(value, ${o.getByOffset("inputOffset")});`,""]})},ll=(e,t)=>{tt(e.inputs),rt(e,"ReduceMean",t,(o,n,s)=>{let u=1;for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&(u*=e.inputs[0].dims[d]);return["var sum = f32(0);","",`sum += f32(${o.getByOffset("inputOffset")});`,`let value = ${n.type.value}(sum / ${u});`]})},dl=(e,t)=>{tt(e.inputs),rt(e,"ReduceMin",t,(o,n,s)=>{let u=[];for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&u.push(`inputIndices[${d}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByOffset("inputOffset")};`,`value = min(value, ${o.getByOffset("inputOffset")});`,""]})},cl=(e,t)=>{tt(e.inputs),rt(e,"ReduceProd",t,(o,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${o.getByOffset("inputOffset")};`,""])},pl=(e,t)=>{tt(e.inputs),rt(e,"ReduceSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByOffset("inputOffset")};`,""])},fl=(e,t)=>{tt(e.inputs),rt(e,"ReduceSumSquare",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByOffset("inputOffset")}; value += t * t;`,""])},nt=(e,t,r)=>{if(t.length===0)return!!r;let o=1,n=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?o*=e[s]:n*=e[s];return n<32&&o>1024},Jo=(e,t)=>{nt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ll(e,t):Go(e,t)},Zo=(e,t)=>{nt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?al(e,t):No(e,t)},Qo=(e,t)=>{nt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?il(e,t):Uo(e,t)},ea=(e,t)=>{nt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?sl(e,t):Lo(e,t)},ta=(e,t)=>{nt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ul(e,t):Fo(e,t)},ra=(e,t)=>{nt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?dl(e,t):Ho(e,t)},na=(e,t)=>{nt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?cl(e,t):jo(e,t)},oa=(e,t)=>{nt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?pl(e,t):Ko(e,t)},aa=(e,t)=>{nt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?fl(e,t):qo(e,t)},ia=(e,t)=>{nt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ol(e,t):Yo(e,t)},Ye=e=>ie(e)});var sa,ua,la,da,Cn,ca=H(()=>{"use strict";De();Pe();Mr();sa=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},ua=(e,t)=>ie({axis:t.axis,keepDims:t.keepDims,selectLastIndex:t.selectLastIndex}),la=(e,t)=>{sa(e.inputs);let r=(n,s,u)=>{let d=[];for(let a=0;a<n.rank;a++)(u.indexOf(a)>=0||u.length===0)&&d.push(`inputIndices[${a}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${n.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${n.getByOffset("inputOffset")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${n.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",s.setByOffset("global_idx","bestIndex")]},o=e.inputs.length===1?t:ua(e.inputs,t);e.compute(Br("ArgMin",{hint:o.cacheKey},[e.inputs[0]],r,[o.axis],7,o.keepDims),{inputs:[0]})},da=(e,t)=>{sa(e.inputs);let r=(n,s,u)=>{let d=[];for(let a=0;a<n.rank;a++)(u.indexOf(a)>=0||u.length===0)&&d.push(`inputIndices[${a}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${n.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${n.getByOffset("inputOffset")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${n.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",s.setByOffset("global_idx","bestIndex")]},o=e.inputs.length===1?t:ua(e.inputs,t);e.compute(Br("argMax",{hint:o.cacheKey},[e.inputs[0]],r,[o.axis],7,o.keepDims),{inputs:[0]})},Cn=e=>ie(e)});var ml,hl,pa,fa=H(()=>{"use strict";ge();ve();ml=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},hl=e=>{let t=e[0].dims,r=e[0].dims[2],o=k.size(t)/4,n=e[0].dataType,s=L("input",n,t,4),u=L("bias",n,[r],4),d=L("residual",n,t,4),a=X("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:g=>`\n  const channels = ${r}u / 4;\n  ${g.declareVariables(s,u,d,a)}\n\n  ${g.mainStart()}\n    ${g.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${s.getByOffset("global_idx")}\n      + ${u.getByOffset("global_idx % channels")} + ${d.getByOffset("global_idx")};\n    ${a.setByOffset("global_idx","value")}\n  }`}},pa=e=>{ml(e.inputs),e.compute(hl(e.inputs))}});var gl,$e,ma,ha,ga,ya,ba,wa,va,$a,xa,An,yl,Sa,Ca,Aa,Ia,kr,Ea,Dr,Ta,Oa,_a,Ra,Pa,Ma,Ba,ka,Da,Wa,za,Va,Ga,Na,Ua,La,Fa,In=H(()=>{"use strict";De();ge();Pe();ve();gl=(e,t,r,o,n,s)=>{let u=Math.ceil(t/4),d="";typeof n=="string"?d=`${n}(a)`:d=n("a");let a=L("inputData",r,[u],4),m=X("outputData",o,[u],4);return`\n  ${e.declareVariables(a,m)}\n\n  ${s??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n\n    let a = ${a.getByOffset("global_idx")};\n    ${m.setByOffset("global_idx",d)}\n  }`},$e=(e,t,r,o,n,s=e.dataType)=>({name:t,shaderCache:{hint:n},getShaderSource:u=>gl(u,k.size(e.dims),e.dataType,s,r,o),getRunData:u=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(k.size(u[0].dims)/64/4)}})}),ma=e=>{e.compute($e(e.inputs[0],"Abs","abs"))},ha=e=>{e.compute($e(e.inputs[0],"Acos","acos"))},ga=e=>{e.compute($e(e.inputs[0],"Acosh","acosh"))},ya=e=>{e.compute($e(e.inputs[0],"Asin","asin"))},ba=e=>{e.compute($e(e.inputs[0],"Asinh","asinh"))},wa=e=>{e.compute($e(e.inputs[0],"Atan","atan"))},va=e=>{e.compute($e(e.inputs[0],"Atanh","atanh"))},$a=e=>ie(e),xa=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute($e(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},An=(e,t)=>{let r=Me(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${r}> = vec4(${r}(${t.min}));\n    const clip_max_: vec4<${r}> = vec4(${r}(${t.max}));\n`,t.cacheKey),{inputs:[0]})},yl=e=>{let t=e.length>=2?e[1].getFloat32Array()[0]:Rr,r=e.length>=3?e[2].getFloat32Array()[0]:Pr;return ie({min:t,max:r})},Sa=e=>{let t=yl(e.inputs);An(e,t)},Ca=e=>{e.compute($e(e.inputs[0],"Ceil","ceil"))},Aa=e=>{e.compute($e(e.inputs[0],"Cos","cos"))},Ia=e=>{e.compute($e(e.inputs[0],"Cosh","cosh"))},kr=e=>ie(e),Ea=(e,t)=>{e.compute($e(e.inputs[0],"Elu",r=>`elu_vf32(${r})`,`\n  const elu_alpha_: f32 = f32(${t.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Dr=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,Ta=e=>{let t=Me(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Dr(`vec4<${t}>`,t)))},Oa=e=>{e.compute($e(e.inputs[0],"Exp","exp"))},_a=e=>{e.compute($e(e.inputs[0],"Floor","floor"))},Ra=e=>{let t=Me(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Dr(`vec4<${t}>`,t)))},Pa=(e,t)=>{e.compute($e(e.inputs[0],"LeakyRelu",r=>`select(leaky_relu_alpha_ * ${r}, ${r}, ${r} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},Ma=e=>{e.compute($e(e.inputs[0],"Not",t=>`!${t}`))},Ba=e=>{e.compute($e(e.inputs[0],"Neg",t=>`-${t}`))},ka=e=>{e.compute($e(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Da=e=>{e.compute($e(e.inputs[0],"Relu",t=>`select(vec4<f32>(0.0), ${t}, ${t} > vec4<f32>(0.0))`))},Wa=e=>{e.compute($e(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},za=e=>{e.compute($e(e.inputs[0],"Sin","sin"))},Va=e=>{e.compute($e(e.inputs[0],"Sinh","sinh"))},Ga=e=>{e.compute($e(e.inputs[0],"Sqrt","sqrt"))},Na=e=>{e.compute($e(e.inputs[0],"Tan","tan"))},Ua=e=>{e.compute($e(e.inputs[0],"Tanh","tanh"))},La=(e,t)=>(e.compute($e(e.inputs[0],"ThresholdedRelu",r=>`select(vec4<f32>(0.0), ${r}, ${r} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0),Fa=e=>{e.compute($e(e.inputs[0],"Log","log"))}});var wl,vl,Ha,ja=H(()=>{"use strict";ge();ve();In();wl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},vl=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=L("input",e[0].dataType,e[0].dims,4),o=L("bias",e[0].dataType,[e[0].dims[2]],4),n=X("output",e[0].dataType,t,4),s=k.size(t)/4;return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:d=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${d.declareVariables(r,o,n)}\n\n  ${Dr("vec4f")}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${n.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Ha=e=>{wl(e.inputs),e.compute(vl(e.inputs))}});var $l,xl,ot,Ka,qa,Ya,Xa,Ja,Za,Qa,ei,ti,ri,ni=H(()=>{"use strict";De();ge();ve();$l=(e,t,r,o,n,s,u,d,a,m,g)=>{let x=k.size(o),b=Math.ceil(x/4),w,v;typeof u=="string"?w=v=(M,D)=>`${u}((${M}),(${D}))`:typeof u=="function"?w=v=u:(w=u.scalar,v=u.vector);let y="",S=X("outputData",m,o,4),A=L("aData",d,t,4),R=L("bData",a,r,4);if(s){let M=D=>{let _=k.computeStrides(D),z=[];for(let F=D.length-1;F>=0;F--){let q=S.indicesGet("outputIndices",F+o.length-D.length);z.push(`${_[F]}u * (${q} % ${D[F]}u)`)}return z.length>0?z.join("+"):"0u"};y=`\n          fn calcOffsetA(outputIndices: ${S.type.indices}) -> u32 {\n            return ${M(t)};\n          }\n\n          fn calcOffsetB(outputIndices: ${S.type.indices}) -> u32 {\n            return ${M(r)};\n          }\n        `}let W;if(n)if(s){let M=k.size(t)===1,D=k.size(r)===1;M||D?W=S.setByOffset("global_idx",v(M?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"),D?`${R.type.value}(${R.getByOffset("0")}.x)`:R.getByOffset("global_idx"))):W=`\n            let outputIndices = ${S.offsetToIndices("global_idx * 4u")};\n            let offsetA = calcOffsetA(outputIndices);\n            let offsetB = calcOffsetB(outputIndices);\n            ${S.setByOffset("global_idx",v(A.getByOffset("offsetA / 4u"),R.getByOffset("offsetB / 4u")))}\n          `}else W=S.setByOffset("global_idx",v(A.getByOffset("global_idx"),R.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let M=(D,_,z="")=>{let F=`aData[indexA${_}][componentA${_}]`,q=`bData[indexB${_}][componentB${_}]`;return`\n            let outputIndices${_} = ${S.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offsetA${_} = calcOffsetA(outputIndices${_});\n            let offsetB${_} = calcOffsetB(outputIndices${_});\n            let indexA${_} = offsetA${_} / 4u;\n            let indexB${_} = offsetB${_} / 4u;\n            let componentA${_} = offsetA${_} % 4u;\n            let componentB${_} = offsetB${_} % 4u;\n            ${D}[${_}] = ${z}(${w(F,q)});\n          `};m===9?W=`\n            var data = vec4<u32>(0);\n            ${M("data",0,"u32")}\n            ${M("data",1,"u32")}\n            ${M("data",2,"u32")}\n            ${M("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:W=`\n            ${M("outputData[global_idx]",0)}\n            ${M("outputData[global_idx]",1)}\n            ${M("outputData[global_idx]",2)}\n            ${M("outputData[global_idx]",3)}\n          `}return`\n        ${e.declareVariables(A,R,S)}\n\n        ${g??""}\n        ${y}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n        ${W}\n      }`},xl=(e,t,r,o,n,s,u=r.dataType)=>{let d=!k.areEqual(r.dims,o.dims),a=r.dims,m=k.size(r.dims),g=!1;if(d){let x=Qe.calcShape(r.dims,o.dims,!1);if(!x)throw new Error("Can\'t perform binary op on the given tensors");a=x,m=k.size(a);let b=k.size(r.dims)===1,w=k.size(o.dims)===1,v=1;for(let y=1;y<a.length;y++){let S=r.dims[r.dims.length-y]??1,A=o.dims[o.dims.length-y]??1;if(S===A)v*=S;else break}(v%4===0||b||w)&&(g=!0)}else g=!0;return{name:e,shaderCache:{hint:t},getShaderSource:x=>$l(x,r.dims,o.dims,a,g,d,n,r.dataType,o.dataType,u,s),getRunData:()=>({outputs:[{dims:a,dataType:u}],dispatchGroup:{x:Math.ceil(m/64/4)}})}},ot=(e,t,r,o,n,s)=>{e.compute(xl(t,n??"",e.inputs[0],e.inputs[1],r,o,s))},Ka=e=>{ot(e,"Add",(t,r)=>`${t}+${r}`)},qa=e=>{ot(e,"Div",(t,r)=>`${t}/${r}`)},Ya=e=>{ot(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Xa=e=>{ot(e,"Mul",(t,r)=>`${t}*${r}`)},Ja=e=>{let t=L("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;ot(e,"Pow",{scalar:(o,n)=>`pow_custom(${o},${n})`,vector:(o,n)=>`pow_vector_custom(${o},${n})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Za=e=>{ot(e,"Sub",(t,r)=>`${t}-${r}`)},Qa=e=>{ot(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},ei=e=>{ot(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},ti=e=>{ot(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},ri=e=>{ot(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Cl,Al,Il,El,oi,ai,ii=H(()=>{"use strict";ge();Pe();ve();Cl=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},Al=e=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Il=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;++n){let s=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?o.push(s):n===0?o.push(`if (inputIndex == ${n}u) { ${s} }`):n===r-1?o.push(`else { ${s} }`):o.push(`else if (inputIndex == ${n}) { ${s} }`)}return o.join(`\n`)},El=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,n=r.slice(0);for(let w=1;w<e.length;w++){let v=e[w].dims.slice();for(let y=0;y<r.length;y++)if(y===o)n[o]+=v[y];else if(r[y]!==v[y])throw new Error("non concat dimensions must match")}let s=k.size(n),u=new Array(e.length),d=new Array(e.length),a=e[0].dataType,m=0;for(let w=0;w<e.length;++w)m+=e[w].dims[o],u[w]=m,d[w]=L(`input${w}`,a,e[w].dims);let g=X("output",a,n),x=g.indicesGet("indices",o),b=w=>`\n  ${w.declareVariables(...d,g)}\n\n  const sizeInConcatAxis = array<u32, ${u.length}>(${u.map(v=>`${v}u`).join(",")});\n  ${Al(u.length)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n\n    var indices = ${g.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${x});\n    if (inputIndex != 0u) {\n      ${x} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Il(d,g)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:b}},oi=(e,t)=>{Cl(e.inputs),e.compute(El(e.inputs,t.axis))},ai=e=>ie({axis:e.axis})});var We,Wr,zr,Vr=H(()=>{"use strict";We=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Wr=(e,t=!1,r=!1,o=3)=>"",zr=(e,t)=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      // TODO uncomment the following line when activation is supported above.\n      // ${t?"value = activation(value, coords);":""}\n      `});var Gr,En=H(()=>{"use strict";Gr=`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`});var Nr,Ur,nr=H(()=>{"use strict";ge();Nr=(e,t=!1)=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:t?"value = clamp(value, vec4(clip_min_), vec4(clip_max_));":"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},Ur=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,o]=e?.activation_params||[Rr,Pr];return{activation:t,clipMax:o,clipMin:r,activationCacheKey:`${t}:${r},${o}`}}return{activation:t,activationCacheKey:t}}});var Tl,Ol,or,si,_l,ar,Rl,Lr,ir=H(()=>{"use strict";ge();ve();nr();Vr();Tl=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Ol=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,or=(e,t,r="f32",o,n=!1,s=32,u=!1,d=32)=>{let a=t[1]*e[1],m=t[0]*e[0],g=n?a:s,x=n?s:a,b=g/t[0],w=s/t[1];if(!((n&&b===4&&e[1]===4||!n&&(b===3||b===4))&&g%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${b} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${b} must be 3 or 4.\n  tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${b}<${r}>, ${g/b}>, ${x}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${m/e[0]}>, ${s}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${b};\nconst tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${u?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${a};\n\n  let numTiles = ${u?`${Math.ceil(d/s)}`:"(dimInner - 1) / tileInner + 1"};\n  var kStart = ${u?`i32(globalId.z) * ${d}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${w};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Tl(n,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${b===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Ol(n,b)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},si=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,_l=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ar=(e,t,r="f32",o,n=!1,s=32,u=!1,d=32,a=!1)=>{let m=e[1]*t[1],g=e[0]*t[0],x=n?m:s,b=n?s:m;if(!(b%t[1]===0&&x%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${b} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${x} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let w=b/t[1],v=x/t[0],y=s/t[1],S=a?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${m};\n    let globalColStart = i32(workgroupId.x) * ${g};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${b}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${x}; inputCol = inputCol + ${t[0]}) {\n          ${si(n,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${m};\n\nlet tileRowA = i32(localId.y) * ${w};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${y};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${si(n,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${_l(n)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${x}>, ${b}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${g}>, ${s}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${u?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let numTiles = ${u?`${Math.ceil(d/s)}`:"(dimInner - 1) / tileInner + 1"};\n    var kStart = ${u?`i32(globalId.z) * ${d}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${S}\n  }\n`},Rl=(e,t,r,o,n,s=!1)=>{let u=n[0],d=n[1],a=n[2],m=o[0],g=o[1],x=o[2],b=o[3],w=xn(u,a),v=xn(d,a),y=Me(o[0].type.tensor),S=()=>{let W=g.rank,M=m.rank,D=`var aIndices: ${g.type.indices};`;for(let _=W-2-1,z=M-1;_>=0;_--,z--)D+=`\naIndices[${_}] = ${M>1?`batchIndices[${z}]`:"batchIndices"};`;return w.forEach(_=>{D+=`\naIndices[${_}] = 0;`}),D+=`\naIndices[${W-2}] = u32(row);\n                   aIndices[${W-1}] = u32(colIn);`,D},A=()=>{let W=x.rank,M=m.rank,D=`var bIndices: ${x.type.indices};`;for(let _=W-2-1,z=M-1;_>=0;_--,z--)D+=`\nbIndices[${_}] = ${M>1?`batchIndices[${z}]`:"batchIndices"};`;return v.forEach(_=>{D+=`\nbIndices[${_}] = 0;`}),D+=`\nbIndices[${W-2}] = u32(row);\n                   bIndices[${W-1}] = u32(colIn);`,D};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${We(e,y)} {\n      var value = ${We(e,y)}(0.0);\n      let col = colIn * ${e};\n      if(row < dimAOuter && col < dimInner)\n      {\n        ${S()}\n        value = ${g.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${We(e,y)} {\n      var value = ${We(e,y)}(0.0);\n      let col = colIn * ${e};\n      if(row < dimInner && col < dimBOuter)\n      {\n        ${A()}\n        value = ${x.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${We(e,y)}) {\n      let col = colIn * ${e};\n      if (row < dimAOuter && col < dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${We(e,y)}(bias[row])`};`:""}\n        ${r}\n        ${b.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Lr=(e,t,r,o,n=!1)=>{let s=e[0].dims,u=e[1].dims,d=s.slice(0,-2),a=u.slice(0,-2),m=o?o.slice(0,-2):r.slice(0,-2),g=L("batchDims",e[0].dataType,m),x=[g],b=[d,a,m],w=k.size(m),v=s[s.length-2],y=s[s.length-1],S=u[u.length-1],A=y%4===0&&S%4===0,{activationFunction:R,applyActivation:W}=Nr(t,A),M=v<=8?[4,1,1]:[4,4,1],D=[8,8,1],_=[Math.ceil(S/D[0]/M[0]),Math.ceil(v/D[1]/M[1]),Math.ceil(w/D[2]/M[2])],z=Me(e[0].dataType),F=A?4:1,q=L("a",e[0].dataType,[...d,v,y/F],F),le=L("b",e[1].dataType,[...a,y,S/F],F),B=X("result",e[0].dataType,[w,v,S/F],F);x.push(q),x.push(le),x.push(B);let K=[q,le],xe=e.length>2,ae=Rl(F,xe,W,x,b,n);if(xe){let j=n?F:1;K.push(L("bias",e[2].dataType,e[2].dims,j))}let we=j=>`\n  const dimAOuter: i32 = ${v};\n  const dimBOuter: i32 = ${S};\n  const dimInner: i32 = ${y};\n  ${j.declareVariables(...K,B)}\n  ${R}\n  ${ae}\n  ${A?or(M,D,z,g):ar(M,D,z,g)}\n                   ${g.impl()}`;return{name:"MatMul",shaderCache:{hint:t.activationCacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:_[0],y:_[1],z:_[2]}}),getShaderSource:we}}});var Pl,ui,li=H(()=>{"use strict";mt();ge();ve();Vr();En();ir();Pl=(e,t,r,o,n=!1,s,u=!1,d=4,a=4,m=4,g="f32")=>{let x=le=>{switch(le){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${g}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${le} is not supported.`)}},b=le=>{switch(le){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${le} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,v=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,y=e?"xShape[1]":"xShape[2]",S=e?"xShape[2]":"xShape[3]",A=e?"row":"col",R=e?"col":"row",W=`\n    let inChannels = wShape[2];\n    let outWidth = ${e?"outShape[2]":"outShape[3]"};\n    let outRow = ${A} / outWidth;\n    let outCol = ${A} % outWidth;\n\n    let WRow = ${R} / (filterDims[1] * inChannels);\n    let WCol = ${R} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${R} % inChannels;\n    var resData = ${We(d,g)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${y} && xCol >= 0 && xCol < ${S}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${x(d)}\n    }\n    return resData;`,M=e?t&&o?`\n    let col = colIn * ${d};\n    ${W}`:`\n    let col = colIn * ${d};\n    if (row < dimAOuter && col < dimInner) {\n      ${W}\n    }\n    return ${We(d,g)}(0.0);`:o&&r?`\n    let col = colIn * ${d};\n    ${W}`:`\n    let col = colIn * ${d};\n    if (row < dimInner && col < dimBOuter) {\n      ${W}\n    }\n    return ${We(d,g)}(0.0);`,D=`${b(a)}`,_=We(m,g),z=e?We(d,g):We(a,g),F=e?We(a,g):We(d,g);return`\n    ${Wr(s,u,m===4,4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${z} {\n      ${e?M:D}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${F} {\n      ${e?D:M}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${_}) {\n      let col = colIn * ${m};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${v}\n      ${zr(n,s)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},ui=(e,t,r,o,n,s,u,d)=>{let a=t.format==="NHWC",m=a?e[0].dims[3]:e[0].dims[1],g=r[0],x=a?r[2]:r[3],b=a?r[1]:r[2],w=a?r[3]:r[1],v=a&&(m%4===0||m%3===0)&&w%4===0,y=a?w:x*b,S=a?x*b:w,A=[8,8,1],R=o<=8?[4,1,1]:[4,4,1],W=[Math.ceil(y/A[0]/R[0]),Math.ceil(S/A[1]/R[1]),Math.ceil(g/A[2]/R[2])];Ee("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${W}`);let M=v?a&&m%4!==0?3:4:R[0],D=A[1]*R[1],_=A[0]*R[0],z=Math.max(A[0]*M,A[1]),F=o%D===0,q=n%_===0,le=s%z===0,B=v?[M,4,4]:[1,1,1],K=Me(e[0].dataType),xe=[`@group(0) @binding(0) var<storage, read> x: array<${v&&M===4?`vec4<${K}>`:K}>;`,`@group(0) @binding(1) var<storage, read> w: array<${v?`vec4<${K}>`:K}>;`],ae=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${K}>`:K}) {\n        result[flatIndex] = ${v?`vec4<${K}>`:K}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${K}>`:K}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`;return u&&(xe.push(`@group(0) @binding(2) var<storage, read> bias: array<${v?`vec4<${K}>`:K}>;`),ae+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${K}>`:K} {\n          return bias[coords.${a?"w":"y"}${v?"/ 4":""}];\n        }`),{name:"Conv2DMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]}}),getShaderSource:()=>`\n        ${Gr}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${xe.join("")}\n        @group(0) @binding(${xe.length}) var<storage, read_write> result: array<${v?`vec4<${K}>`:K}>;\n        //@group(0) @binding(${xe.length+1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${k.computeStrides(r).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[0]}, ${t.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${t.pads[0]}, ${t.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${o};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${s};\n        ${ae}\n        ${Pl(a,F,q,le,u,t.activation.toLowerCase(),!1,B[0],B[1],B[2],K)}\n            ${v?or(R,A,K,void 0,!a,z):ar(R,A,K,void 0,!a,z,!1,void 0,d)}`}}});var Tn,di=H(()=>{"use strict";ge();ve();_n();nr();Tn=(e,t,r)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",s=e[0].dims,u=e[1].dims,d=u[0]/t.group,{activationFunction:a,applyActivation:m}=Nr(t),g=t.format==="NHWC",x=On(s,u,t.dilations,t.pads,t.strides,g),b=k.size(x),w=X("output",e[0].dataType,x),v=L("x",e[0].dataType,s),y=L("w",e[1].dataType,u),S=[v,y];o&&S.push(L("b",e[2].dataType,e[2].dims));let A=R=>`\n  const strides: vec2<u32> = vec2(${t.strides[0]}u, ${t.strides[1]}u);\n  const pads: vec2<u32> = vec2(${t.pads[0]}u, ${t.pads[1]}u);\n\n  ${R.declareVariables(...S,w)}\n\n  ${a}\n\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n    let outputIndices = ${w.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${g?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${g?1:2}], outputIndices[${g?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${d}u;\n\n    var value: ${w.type.value} = ${w.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {\n      let input_channel = group_id * ${u[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${t.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${s[g?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${t.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${s[g?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${g?v.get("batch","xHeight","xWidth","input_channel"):v.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${y.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${n}\n    ${m}\n    ${w.setByOffset("global_idx","value")}\n  }`;return{name:"GroupedConv",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r?r(x):x,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)}}),getShaderSource:A}}});var On,ci,Ml,pi,Rn,Bl,kl,Pn,_n=H(()=>{"use strict";ge();Pe();li();ir();di();nr();rr();On=(e,t,r,o,n,s)=>{let u=e[0],d=e.slice(s?1:2,s?3:4),a=d.length,m=t[0],x=t.slice(2).map((v,y)=>v+(v-1)*(r[y]-1)),w=d.map((v,y)=>v+o[y]+o[y+a]).map((v,y)=>Math.floor((v-x[y]+n[y])/n[y]));return w.splice(0,0,u),w.splice(s?3:1,0,m),w},ci=[2,3,1,0],Ml=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},pi=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let o=e.pads.slice();Ct.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:o,cacheKey:e.cacheKey}),n},Rn=e=>{let t=Ur(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,s=e.group,u=e.kernel_shape,d=e.pads,a=e.strides,m=e.w_is_const();return ie({autoPad:o,format:r,dilations:n,group:s,kernelShape:u,pads:d,strides:a,wIsConst:m,...t})},Bl=(e,t,r)=>{let o=pi(r,t);if(r.group!==1){e.compute(Tn(t,o));return}let n=r.format==="NHWC",s=t.length===3,u=t[0].dims[n?1:2],d=t[0].dims[n?2:3],a=t[0].dims[n?3:1],m=t[1].dims[2],g=t[1].dims[3],x=On(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,n),b=x[n?1:2],w=x[n?2:3],v=x[n?3:1],y=n&&m===u&&g===d&&r.pads[0]===0&&r.pads[1]===0;if(y||m===1&&g===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let _=x[0],z,F,q,le=[];if(n){let B=e.kernelCustomData.wT??e.compute(gt(t[1],ci),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=B),y){let K=u*d*a;z=t[0].reshape([1,_,K]),F=B.reshape([1,K,v]),q=[1,_,v]}else z=t[0].reshape([_,u*d,a]),F=B.reshape([1,a,v]),q=[_,b*w,v];le.push(z),le.push(F)}else z=t[0].reshape([_,a,u*d]),F=t[1].reshape([1,v,a]),q=[_,v,b*w],le.push(F),le.push(z);s&&le.push(t[2]),e.compute(Lr(le,o,x,q,n),{inputs:le});return}let S=!0,A=e.kernelCustomData.wT??e.compute(gt(t[1],ci),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let R=[t[0],A];s&&R.push(t[2]);let W=n?b*w:v,M=n?v:b*w,D=m*g*a;e.compute(ui(R,o,x,W,M,D,s,S),{inputs:R})},kl=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),u=[1].concat(t.dilations),d=[1].concat(t.kernelShape),a=pi({...t,pads:n,strides:s,dilations:u,kernelShape:d},o);e.compute(Tn(o,a,m=>r?[m[0],m[2],m[3]]:[]))},Pn=(e,t)=>{Ml(e.inputs,t),e.inputs[0].dims.length===3?kl(e,t):Bl(e,e.inputs,t)}});var Dl,fi,mi=H(()=>{"use strict";mt();ge();Vr();En();ir();Dl=(e,t=!1,r,o=!1,n=4)=>{let s=We(n,"f32"),u=A=>{switch(A){case 1:return"return W[getIndexFromCoords4D(coord, wShape)];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${A} is not supported.`)}},d=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,a=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,m=e?"outBackprop[1]":"outBackprop[2]",g=e?"outBackprop[2]":"outBackprop[3]",x=e?"row":"col",b=e?"col":"row",w=`\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      let outRow = ${x} / outWidth;\n      let outCol = ${x} % outWidth;\n\n      let WRow = ${b} / (filterDims[1] * inChannels);\n      let WCol = ${b} / inChannels % filterDims[1];\n      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);\n      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);\n      if (xR < 0.0 || xR >= f32(${m}) || fract(xR) > 0.0) {\n        return ${s}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${g}) || fract(xC) > 0.0) {\n        return ${s}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${b} % inChannels;\n      ${d}\n      return x[getIndexFromCoords4D(coord, xShape)/${n}];`,v=e?`\n      let col = colIn * ${n};\n      if (row < dimAOuter && col < dimInner) {\n        ${w}\n      }\n      return ${s}(0.0);`:`\n      let col = colIn * ${n};\n      if (row < dimInner && col < dimBOuter) {\n        ${w}\n      }\n      return ${s}(0.0);`,y=`\n      let col = colIn * ${n};\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);\n      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];\n      if (${e?"row < dimInner && col < dimBOuter":"row < dimInner && col < dimAOuter"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(n)}\n      }\n      return ${s}(0.0);\n      `;return`\n  ${Wr(r,o,n===4,4)}\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?v:y}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?y:v}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${s}) {\n    let col = colIn * ${n};\n    if (row < dimAOuter && col < dimBOuter) {\n      var value = valueInput;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${a}\n      ${zr(t,r)}\n      result[getIndexFromCoords4D(coords, outShape)/${n}] = value;\n    }\n  }`},fi=(e,t,r,o,n,s,u,d)=>{let a=t.format==="NHWC",m=a?e[0].dims[3]:e[0].dims[1],g=r[0],x=a?r[2]:r[3],b=a?r[1]:r[2],w=a?r[3]:r[1],v=a?m%4===0&&w%4===0:x%4===0&&w%4===0,y=a?w:x*b,S=a?x*b:w,A=v?[8,8,1]:[y<=4||S<=4?4:16,y>4&&S<=4?4:16,1],R=v?[4,4,1]:[y<=4?1:4,y>4&&S<=4?1:4,1],W=[Math.ceil(y/A[0]/R[0]),Math.ceil(S/A[1]/R[1]),Math.ceil(g/A[2]/R[2])];Ee("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${W}`);let M=v?4:1,D=Math.max(A[0]*M,A[1]),_=[`@group(0) @binding(0) var<storage, read> x: array<${v?"vec4<f32>":"f32"}>;`,"@group(0) @binding(1) var<storage, read> W: array<f32>;"],z="";return u&&(_.push(`@group(0) @binding(2) var<storage, read> bias: array<${v?"vec4<f32>":"f32"}>;`),z+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?"vec4<f32>":"f32"} {\n          return bias[coords.${a?"w":"y"}${v?"/ 4":""}];\n        }`),{name:"Conv2DTransposeMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]}}),getShaderSource:()=>`\n        ${Gr}\n        ${_.join(`\n`)}\n        @group(0) @binding(${_.length}) var<storage, read_write> result: array<${v?"vec4<f32>":"f32"}>;\n        const outBackprop : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${k.computeStrides(r).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[a?1:2]}, ${t.kernelShape[a?2:3]});\n        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(\n              ${t.dilations[0]<=1?0:(t.kernelShape[a?1:2]-1)*(t.dilations[0]-1)},\n              ${t.dilations[1]<=1?0:(t.kernelShape[a?2:3]-1)*(t.dilations[1]-1)});\n        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${t.pads[0]+t.pads[2]})/2,\n                                         i32(effectiveFilterDims[1]) - 1 - (${t.pads[1]+t.pads[3]})/2);\n        const strides : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${o};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${s};\n        ${z}\n        ${Dl(a,u,t.activation.toLowerCase(),!1,M)}\n        ${v?or(R,A,"f32",void 0,!a,D):ar(R,A,"f32",void 0,!a,D,!1,void 0,d)}`}}});var Wl,Mn,hi=H(()=>{"use strict";mt();ge();ve();Wl=(e,t,r,o,n,s,u=!1,d)=>{let a=r.format==="NHWC",m=a?1:2,g=a?2:3,x=a?3:1,b=k.size(o),w=u?2:1,v=r.group,y=t[1].dims,S=y[0]/v,A=y[1],R=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${d}>`:d}) {\n    result[flatIndex] = ${u?`vec4<${d}>`:d}(value);\n  }`;n&&(R+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${d}>`:d} {\n      return bias[coords.${a?"w":"y"}${u?"/ 4":""}];\n    }`);let W=u?4:1,M=L("W",t[1].dataType,t[1].dims,W),D=L("Dy",t[0].dataType,t[0].dims,W),_=[D,M];n&&_.push(L("bias",t[2].dataType,[o[x]],W));let z=X("result",t[0].dataType,o,W),F=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / outShape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % outShape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${d}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${d}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${d}(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(strides.y);\n            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${d}(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${d}(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${D.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${x}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${n?"bias[c+i]":"0.0"};\n          ${z.set("batch","r","c + i","d1","value")};\n        }\n      }`,q=`\n          let outputIndices = ${z.offsetToIndices("global_idx")};\n          let batch = ${z.indicesGet("outputIndices",0)};\n          let d1 = ${z.indicesGet("outputIndices",x)};\n          let r = ${z.indicesGet("outputIndices",m)};\n          let c = ${z.indicesGet("outputIndices",g)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${A};\n          let wOutChannel = d1 - groupId * ${A};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = 0.0;\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= ${d}(outBackprop[${m}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= ${d}(outBackprop[${g}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * ${S};\n              for (var d2: u32 = 0; d2 < ${S}; d2 = d2 + 1) {\n                let xValue = ${a?D.get("batch","idyR","idyC","inputChannel"):D.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${M.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${n?"bias[d1]":"0.0"};\n          ${z.setByOffset("global_idx","value")};\n        `;return`\n  ${e.declareVariables(..._,z)}\n  ${R}\n  const outShape : vec4<u32> = vec4<u32>(${o.join(",")});\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\n  const strides : vec2<u32> = vec2<u32>(${r.strides[0]}, ${r.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${r.kernelShape[a?1:2]}, ${r.kernelShape[a?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${r.dilations[0]}, ${r.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${r.dilations[0]<=1?0:(r.kernelShape[a?1:2]-1)*(r.dilations[0]-1)},\n          ${r.dilations[1]<=1?0:(r.kernelShape[a?2:3]-1)*(r.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)};\n  ${u?F:q}}`},Mn=(e,t,r)=>{let o=e.length>2,n=t.outputShape,s=k.size(n),u=[Math.ceil(s/64),1,1];Ee("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let d=Me(e[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:t.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}]}),getShaderSource:a=>Wl(a,e,t,n,o,u[1]===1&&u[2]===1,!1,d)}}});var zl,Vl,Gl,gi,yi,Nl,Ul,Ll,Fl,bi,wi=H(()=>{"use strict";Pe();mi();hi();nr();rr();zl=(e,t,r,o,n,s)=>(e-1)*t+r+(o-1)*n+1-s,Vl=(e,t,r,o,n)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=s,r[n]=e-s):t==="SAME_LOWER"&&(r[o]=e-s,r[n]=s)},Gl=(e,t,r,o,n,s,u,d,a,m)=>{let g=e.length-2,x=m.length===0;if(a.length===0)for(let v=0;v<g;++v)a.push(0);let b=e[0],w=t[d?3:1]*n;for(let v=0,y=e.length-g-(d?1:0);v<g;++v,++y){let S=e[y],A=x?S*u[v]:m[v],R=zl(S,u[v],s[v],t[y],r[v],A);Vl(R,o,s,v,v+g),x&&m.push(u[v]*(S-1)+a[v]+(t[y]-1)*r[v]+1-s[v]-s[v+g])}m.splice(0,0,b),m.splice(d?3:1,0,w)},gi=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((b,w)=>b*w,1)===0){r.length=0;for(let b=2;b<t[1].dims.length;++b)r.push(t[1].dims[b])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let n=e.pads.slice(),s=e.outputShape.slice(),u=e.outputPadding.slice(),d=t[0].dims,a=e.dilations.slice();if(a.reduce((b,w)=>b+w,0)===0){let b=t[0].dims.length-2;a=new Array(b).fill(1)}let m=e.strides.slice();if(m.reduce((b,w)=>b+w,0)===0){let b=t[0].dims.length-2;m=new Array(b).fill(1)}Gl(d,r,a,e.autoPad,e.group,n,m,o,u,s);let g=Object.assign({},e),x=e.cacheKey+[r.join("n,"),n.join(","),m.join(","),u.join(","),s.join(","),a.join(",")].join("_");return Object.assign(g,{kernelShape:r,pads:n,outputPadding:u,outputShape:s,dilations:a,strides:m,cacheKey:x}),g},yi=e=>{let t=Ur(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,s=e.group,u=e.kernelShape,d=e.pads,a=e.strides,m=e.wIsConst(),g=e.outputPadding,x=e.outputShape;return ie({autoPad:o,format:r,dilations:n,group:s,kernelShape:u,outputPadding:g,outputShape:x,pads:d,strides:a,wIsConst:m,...t})},Nl=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((g,x)=>g+x,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((g,x)=>g+x,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((g,x)=>g+x,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((g,x)=>g+x,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Ul=[2,3,1,0],Ll=(e,t,r)=>{let o=gi(r,t),n=r.format==="NHWC",s=t.length===3;if(o.group!==1){e.compute(Mn(t,o));return}let u=o.outputShape,d=u[n?1:2],a=u[n?2:3],m=u[n?3:1],g=t[1].dims[2],x=t[1].dims[3],b=t[0].dims[n?3:1],w=n?d*a:m,v=n?m:d*a,y=g*x*b,S=!0,A=e.kernelCustomData.wT??e.compute(gt(t[1],Ul),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let R=[t[0],A];s&&(!n&&t[2].dims.length===1?R.push(t[2].reshape([t[2].dims[0],1,1])):R.push(t[2])),e.compute(fi(R,o,u,w,v,y,s,S),{inputs:R})},Fl=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let u=t.strides;(u.length===0||u[0]===0)&&(u=[1]);let d=t.pads;d.length===0&&(d=[0,0]),d=[0,d[0],0,d[1]],u=[1].concat(u),s=[1].concat(s),n=[1].concat(n);let a=gi({...t,pads:d,strides:u,dilations:s,kernelShape:n},o);e.compute(Mn(o,a,m=>r?[m[0],m[2],m[3]]:[m[0],m[1],m[3]]))},bi=(e,t)=>{Nl(e.inputs,t),e.inputs[0].dims.length===3?Fl(e,t):Ll(e,e.inputs,t)}});var Bn,Fr,vi,Hl,jl,kn,Dn,Kl,$i,xi,Si=H(()=>{"use strict";ge();Pe();ve();Bn="[a-zA-Z]|\\\\.\\\\.\\\\.",Fr="("+Bn+")+",vi="^"+Fr+"$",Hl="("+Fr+",)*"+Fr,jl="^"+Hl+"$",kn=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Dn=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,n]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(jl)))throw new Error("Invalid LHS term");if(o.split(",").forEach((d,a)=>{let m=t[a].dims.slice();if(!d.match(RegExp(vi)))throw new Error("Invalid LHS term");let g=this.processTerm(d,!0,m,a);this.lhs.push(g)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([d,a])=>a.count===1||d==="...").map(([d])=>d).join("");else if(!n.match(RegExp(Fr)))throw new Error("Invalid RHS");n.match(RegExp(Bn,"g"))?.forEach(d=>{if(d==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(d);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(n,!0,this.outputDims)}addSymbol(t,r,o){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==r&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(o)}else n={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,n)}processTerm(t,r,o,n=-1){let s=o.length,u=!1,d=[],a=0;if(!t.match(RegExp(vi))&&!r&&t!=="")throw new Error("Invalid LHS term");let m=t.match(RegExp(Bn,"g")),g=new kn(n);return m?.forEach((x,b)=>{if(x==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let w=s-m.length+1;if(w<0)throw new Error("Ellipsis out of bounds");if(d=o.slice(a,a+w),this.hasEllipsis){if(this.ellipsisDims.length!==d.length||this.ellipsisDims.toString()!==d.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=d;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<d.length;v++){let y=String.fromCharCode("0".charCodeAt(0)+b);g.addSymbol(y,b+v),this.addSymbol(y,o[a++],n)}}else g.addSymbol(x,b),this.addSymbol(x,o[a++],n)}),g}},Kl=(e,t)=>{let r=e[0].dataType,o=new Array(e.length);for(let W=0;W<e.length;++W)o[W]=L(`input${W}`,r,e[W].dims);let n=t.outputDims,s=k.size(n),u=X("output",r,n),d=[],a=Array.from(t.rhs.symbolToIndices.keys()),m="var prod = 1.0;",g="var sum = 0.0;",x="sum += prod;",b=[],w=[],v=[],y=[],S=t.symbolToInfo.size===a.length;t.symbolToInfo.forEach((W,M)=>{if(a.includes(M)){let D=a.indexOf(M);t.lhs.forEach((_,z)=>{if(W.inputIndices.includes(z)){let F=_.symbolToIndices.get(M);if(F===void 0)throw new Error("Invalid symbol error");F.forEach(q=>{d.push(`${o[z].indicesSet(`input${z}Indices`,q,u.indicesGet("outputIndices",D))}`)})}})}else t.lhs.forEach((D,_)=>{let z=t.symbolToInfo.get(M);if(z===void 0)throw new Error("Invalid symbol error");if(z.inputIndices.includes(_)){let F=D.symbolToIndices.get(M);if(F===void 0)throw new Error("Invalid symbol error");F.forEach(q=>{b.push(`${o[_].indicesSet(`input${_}Indices`,q,`${M}`)}`)}),y.push(`prod *= ${o[_].getByIndices(`input${_}Indices`)};`)}}),w.push(`for(var ${M}: u32 = 0; ${M} < ${t.symbolToInfo.get(M)?.dimValue}; ${M}++) {`),v.push("}")});let A=S?[...d,`let sum = ${o.map((W,M)=>W.getByIndices(`input${M}Indices`)).join(" * ")};`]:[...d,g,...w,...b,m,...y,x,...v],R=W=>`\n      ${W.declareVariables(...o,u)}\n\n      ${W.mainStart()}\n        ${W.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n        var outputIndices = ${u.offsetToIndices("global_idx")};\n        ${o.map((M,D)=>`var input${D}Indices: ${o[D].type.indices};`).join(`\n`)}\n        ${A.join(`\n`)};\n        ${u.setByOffset("global_idx","sum")};\n      }`;return{name:"Einsum",shaderCache:{hint:t.equation},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:R}},$i=(e,t)=>{let r=new Dn(e.inputs,t.equation);e.compute(Kl(e.inputs,r))},xi=e=>{let t=e.equation.replace(/\\s+/g,"");return ie({equation:t})}});var ql,Ci,Yl,Xl,Ai,Ii=H(()=>{"use strict";ge();ve();ql=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;o<r.length&&n<t.length;++o,++n)if(r[o]!==t[n]&&r[o]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ci=(e,t)=>{let r=e.length-t.length,o=[];for(let n=0;n<r;++n)o.push(e[n]);for(let n=0;n<t.length;++n)o.push(t[n]===1?e[n+r]:t[n]);return o},Yl=(e,t)=>e.length>t.length?Ci(e,t):Ci(t,e),Xl=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Yl(t,r),n=k.size(o),s=e[0].dataType,u=L("input",s,t),d=X("output",s,o),a=m=>`\n  const inputShape = ${u.indices(...t)};\n  ${m.declareVariables(u,d)}\n  ${m.mainStart()}\n  ${m.guardAgainstOutOfBoundsWorkgroupSizes(n)}\n    let outputIndices = ${d.offsetToIndices("global_idx")};\n    var inputIndices: ${u.type.indices};\n    for (var i = 0; i < ${t.length}; i++) {\n      if (${u.indicesGet("inputShape","i")} == 1) {\n        ${u.indicesSet("inputIndices","i",0)}\n      } else {\n        ${u.indicesSet("inputIndices","i",d.indicesGet("outputIndices",`i + ${o.length-t.length}`))}\n      }\n    }\n    ${d.setByOffset("global_idx",u.getByIndices("inputIndices"))}\n  }`;return{name:"Expand",shaderCache:{hint:`${o}`},getShaderSource:a,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}})}},Ai=e=>{ql(e.inputs),e.compute(Xl(e.inputs),{inputs:[0]})}});var Jl,Zl,Ei,Ti,Oi=H(()=>{"use strict";ge();Pe();ve();Jl=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Zl=(e,t)=>{let r=e[0].dims,o=e[1].dims,n=r.length,s=k.normalizeAxis(t.axis,n),u=r.slice(0);u.splice(s,1,...o);let d=r[s],a=k.size(u),m=L("data",e[0].dataType,e[0].dims),g=L("inputIndices",e[1].dataType,e[1].dims),x=X("output",e[0].dataType,u),b=()=>{let v=o.length,y=`var indicesIndices  = ${g.type.indices}(0);`;for(let S=0;S<v;S++)y+=`${v>1?`indicesIndices[${S}]`:"indicesIndices"} = ${u.length>1?`outputIndices[${s+S}]`:"outputIndices"};`;y+=`\n        var idx = ${g.getByIndices("indicesIndices")};\n        if (idx < 0) {\n          idx = idx + ${d};\n        }\n        var dataIndices = ${m.type.indices}(0);\n      `;for(let S=0,A=0;S<n;S++)S===s?(y+=`${n>1?`dataIndices[${S}]`:"dataIndices"} = u32(idx);`,A+=v):(y+=`${n>1?`dataIndices[${S}]`:"dataIndices"} = ${u.length>1?`outputIndices[${A}]`:"outputIndices"};`,A++);return y},w=v=>`\n      ${v.declareVariables(m,g,x)}\n      ${v.mainStart()}\n        ${v.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n        let outputIndices = ${x.offsetToIndices("global_idx")};\n        ${b()};\n        let value = ${m.getByIndices("dataIndices")};\n        ${x.setByOffset("global_idx","value")};\n      }`;return{name:"Gather",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:w}},Ei=e=>ie({axis:e.axis}),Ti=(e,t)=>{let r=e.inputs;Jl(r),e.compute(Zl(e.inputs,t))}});var Ql,ed,_i,Ri,Pi=H(()=>{"use strict";ge();Pe();ve();Ql=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},ed=(e,t)=>{let r=e[0].dims,o=e[0].dataType,n=r.length,s=k.computeStrides(r),u=k.size(r),d=e[1].dims,a=e[1].dataType,m=k.size(d),g=k.normalizeAxis(t.axis,n),x=r[g],b=d.slice(0),w=k.size(b),v=L("input",o,r),y=L("indices",a,[m]),S=X("output",o,b),A=R=>`\n      const inputStrides = array<u32, ${s.length}>(${s.map(W=>`${W}u`).join(",")});\n      ${R.declareVariables(v,y,S)}\n      ${R.mainStart()}\n      ${R.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n\n      var idx = ${y.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + ${x};\n      }\n\n      var srcOffset = u32(0);\n\n      for (var i = 0; i < ${r.length}; i++) {\n        if (i == ${g}) {\n          srcOffset +=  u32(idx) * inputStrides[i];\n        } else {\n          srcOffset += ${S.indicesGet("outputIndices","i")} * inputStrides[i];\n        }\n      }\n\n      // Should never hit this with valid values in indices\n      // This is a guard against malicious data in the indices input\n      if (srcOffset < 0 || srcOffset >= ${u}) {\n        return;\n      }\n\n      output[global_idx] = input[srcOffset];\n  }`;return{name:"GatherElements",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:b,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:A}},_i=e=>ie({axis:e.axis}),Ri=(e,t)=>{let r=e.inputs;Ql(r),e.compute(ed(e.inputs,t))}});var td,rd,nd,Mi,Bi,ki=H(()=>{"use strict";ge();Pe();ve();td=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},rd=(e,t,r)=>{if(r.length===0)return"0u";let o=r.length===1&&e!==1||r.length===2&&r[0]!==e,n=r[r.length-1]!==t,s="0u";return o||(s+=`+ m * ${r[r.length-1]}u`),n||(s+="+n"),s},nd=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[n,s,u]=_r.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),d=[n,s];if(!d)throw new Error("Can\'t use gemm on the given tensors");let a=k.size(d),m="";t.transA&&t.transB?m="value += a[k * M + m] * b[n * K + k];":t.transA&&!t.transB?m="value += a[k * M + m] * b[k * N + n];":!t.transA&&t.transB?m="value += a[m * K + k] * b[n * K + k];":!t.transA&&!t.transB&&(m="value += a[m * K + k] * b[k * N + n];");let g=Me(e[0].dataType),x=t.alpha===1?"":"value *= alpha;",b=e.length===3?`value += beta * c[${rd(n,s,e[2].dims)}];`:"",w=[`@group(0) @binding(0) var<storage, read> a : array<${g}>;`,`@group(0) @binding(1) var<storage, read> b : array<${g}>;`];e.length===3&&w.push(`@group(0) @binding(2) var<storage, read> c : array<${g}>;`);let v=y=>`\n  const M: u32 = ${n}u;\n  const N: u32 = ${s}u;\n  const K: u32 = ${u}u;\n  const alpha = ${g}(${t.alpha});\n  const beta = ${g}(${t.beta});\n\n  ${w.join(`\n`)}\n  @group(0) @binding(${e.length}) var<storage, read_write> output : array<${g}>;\n\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${g}(0);\n    for (var k: u32 = 0u; k<${u}u; k++) {\n      ${m}\n    }\n\n    ${x}\n    ${b}\n    output[global_id.x] = value;\n\n  }`;return{name:"Gemm",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:v}},Mi=(e,t)=>{td(e.inputs),e.compute(nd(e.inputs,t))},Bi=e=>ie(e)});var od,ad,id,sd,Di,Wi,zi=H(()=>{"use strict";De();ge();Pe();ve();od={name:"InstanceNormalization"},ad=(e,t)=>{let r=e[0].dims,o=r,n=2,s=k.sizeToDimension(r,n),u=k.sizeFromDimension(r,n),d=r[1],a=L("x",e[0].dataType,[r[0],r[1],u]),m=L("scale",e[1].dataType,e[1].dims),g=L("bias",e[2].dataType,e[2].dims),x=X("output",e[0].dataType,[r[0],r[1],u]),b=[a,m,g,x],w=a.type.value,v=64,y=S=>`\n\n  const C: u32 = ${d};\n  const normSize: u32 = ${u};\n  const epsilon: f32 = ${t.epsilon};\n  var<workgroup> meanShared : ${w};\n  var<workgroup> squaredNormShared : ${w};\n  var<workgroup> workgroupShared : array<${w}, ${v}>;\n  const workgroupSize = ${v}u;\n  ${S.declareVariables(...b)}\n  ${S.mainStart(v)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / C;\n    let channel = norm % C;\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial: ${w} = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      initial = initial + ${a.get("batch","channel","h")};\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = workgroupShared[0] / ${w}(normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let deviation =  ${a.get("batch","channel","h")} - meanShared;\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = workgroupShared[0];\n    }\n    workgroupBarrier();\n\n    let invStdDev = 1 / sqrt(squaredNormShared / ${w}(normSize) + epsilon);\n    let channelScale = invStdDev * ${m.getByOffset("channel")};\n    let channelShift = ${g.getByOffset("channel")} - meanShared * channelScale;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let value = ${a.get("batch","channel","h")} * channelScale + channelShift;\n      ${x.set("batch","channel","h","value")};\n    }\n  }`;return{...od,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:s}}),getShaderSource:y}},id=(e,t,r,o,n,s,u,d)=>{let a=lt(u),m=L("input",t.dataType,t.dims,a),g=L("scale",r.dataType,r.dims,a),x=L("bias",o.dataType,o.dims,a),b=64,w=a===1?"vec2f":`mat2x${a}f`,v=a===1?"f32":`vec${a}f`,y=(D,_)=>`${w}(${D}, ${_})`,S=n*u/a,A=Math.ceil(s/b),R=D=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/a};\n  const imageSize: u32 = ${s*u/a};\n\n  ${D.declareVariables(m)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${w}>;\n\n  ${D.mainStart(b)}\n    let currentImageNumber = global_idx / ${b} / C;\n    let currentChannelNumber = (global_idx / ${b}) % C;\n    let wgId = global_idx % ${b};\n    let wgOffset = wgId * ${A};\n    if (wgOffset >= H) {\n        return;\n    }\n    let wgMax = min(wgOffset + ${A}, H);\n\n    let offset = currentImageNumber * imageSize + currentChannelNumber;\n    var sum = ${qe("f32",a)};\n    var squaredSum = ${qe("f32",a)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${v}(input[offset + i * C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${y("sum","squaredSum")};\n  }`,W=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:a,n,h:s,c:u})},getRunData:()=>({outputs:[{dims:[n,u,b,2],dataType:1}],dispatchGroup:{x:n*u/a}}),getShaderSource:R},{inputs:[t],outputs:[-1]})[0],M=D=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/a};\n  const imageSize: u32 = ${b*u/a};\n  const epsilon: f32 = ${d};\n\n  @group(0) @binding(0) var<storage, read> input : array<${w}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${g.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${x.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${w}>;\n\n  ${D.mainStart()}\n    ${D.guardAgainstOutOfBoundsWorkgroupSizes(S)}\n    let currentImageNumber = global_idx / C;\n    let currentChannelNumber = global_idx % C;\n\n    let offset = currentImageNumber * imageSize;\n    var sum = ${qe("f32",a)};\n    var squaredSum = ${qe("f32",a)};\n    for (var i: u32 = 0; i < ${b}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${b}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(H);\n    squaredSum = squaredSum / f32(H);\n    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);\n    let channelScale = invStdDev * ${v}(scale[currentChannelNumber]);\n    let channelShift = ${v}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${y("channelScale","channelShift")};\n  }`;return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:a,n,h:s,c:u,epsilon:d})},getRunData:()=>({outputs:[{dims:[n,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(S/64)}}),getShaderSource:M},{inputs:[W,r,o],outputs:[-1]})[0]},sd=(e,t,r)=>{let o=t[0].dims,n=o,s=o[0],u=o[o.length-1],d=k.sizeFromDimension(o,1)/u,a=lt(u),m=k.size(n)/a,g=L("input",t[0].dataType,t[0].dims,a),x=X("output",t[0].dataType,n,a),b=Me(t[0].dataType),w=a===1?"vec2f":`mat2x${a}f`,v=a===1?b:`vec${a}<${b}>`,y=id(e,t[0],t[1],t[2],s,d,u,r.epsilon),S=A=>`\n  const H: u32 = ${d};\n  const C: u32 = ${u/a};\n\n  @group(0) @binding(0) var<storage, read> input : array<${g.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${w}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${x.type.storage}>;\n\n  ${A.mainStart()}\n    let currentImageNumber = global_idx / (C * H);\n    let currentChannelNumber = global_idx % C;\n\n    let scaleOffset = currentImageNumber * C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${v}(scale[0]), ${v}(scale[1]));\n  }`;e.compute({name:"InstanceNormalization",shaderCache:{hint:`${r.cacheKey}`},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)}}),getShaderSource:S},{inputs:[t[0],y]})},Di=e=>ie({epsilon:e.epsilon,format:e.format}),Wi=(e,t)=>{t.format==="NHWC"?sd(e,e.inputs,t):e.compute(ad(e.inputs,t))}});var ud,ld,Vi,Gi,Ni=H(()=>{"use strict";De();ge();Pe();ve();ud=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},ld=(e,t,r)=>{let o=e[0].dims,n=e[1],s=e[2],u=o,d=k.normalizeAxis(t.axis,o.length),a=k.sizeToDimension(o,d),m=k.sizeFromDimension(o,d),g=k.size(n.dims),x=s?k.size(s.dims):0;if(g!==m||s&&x!==m)throw new Error(`Size of X.shape()[axis:] == ${m}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${g} and bias size of ${x}`);let b=[];for(let M=0;M<o.length;++M)M<d?b.push(o[M]):b.push(1);let w=lt(m),v=Me(e[0].dataType),y=[L("x",e[0].dataType,e[0].dims,w),L("scale",n.dataType,n.dims,w)];s&&y.push(L("bias",s.dataType,s.dims,w)),y.push(X("output",e[0].dataType,u,w));let S=r>1,A=r>2;S&&y.push(X("meanDataOutput",1,b)),A&&y.push(X("invStdOutput",1,b));let R=M=>`\n  const normSize: f32 = ${m};\n  const normSizeVectorized: u32 = ${m/w};\n  const epsilon: f32 = ${t.epsilon};\n\n  ${M.declareVariables(...y)}\n  ${M.mainStart()}\n    ${M.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n    let offset = global_idx * normSizeVectorized;\n    var meanVector = ${qe("f32",w)};\n    var meanSquareVector = ${qe("f32",w)};\n\n    for (var h: u32 = 0u; h < normSizeVectorized; h++) {\n      let value = ${At(v,w,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${ht("meanVector",w)} / normSize;\n    let meanSquare = sqrt(${ht("meanSquareVector",w)} \n      / normSize - mean * mean + epsilon);\n\n    for (var j: u32 = 0; j < normSizeVectorized; j++) {\n      let f32input = ${At(v,w,"x[j + offset]")};\n      let f32scale = ${At(v,w,"scale[j]")};\n      output[j + offset] = ${y[0].type.value}((f32input - mean) / meanSquare * f32scale\n        ${s?`+ ${At(v,w,"bias[j]")}`:""}\n      );\n    }\n\n    ${S?"meanDataOutput[global_idx] = mean":""};\n    ${A?"invStdOutput[global_idx] = 1 / meanSquare":""};\n  }`,W=[{dims:u,dataType:e[0].dataType}];return S&&W.push({dims:b,dataType:1}),A&&W.push({dims:b,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${t.cacheKey}|${r}|${e.length}`},getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:R}},Vi=e=>ie({axis:e.axis,epsilon:e.epsilon}),Gi=(e,t)=>{ud(e.inputs),e.compute(ld(e.inputs,t,e.outputCount))}});var dd,Ui,Li=H(()=>{"use strict";ge();ir();dd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Ui=e=>{dd(e.inputs);let t=Qe.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");e.compute(Lr(e.inputs,{activation:"",activationCacheKey:""},t))}});var cd,pd,fd,md,hd,gd,yd,bd,wd,Fi,Hi,ji=H(()=>{"use strict";De();ge();Pe();ve();cd=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1)throw new Error("Input type must be float.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},pd=(e,t,r,o,n,s,u)=>{let d=r.length,a="";for(let m=d-1;m>=0;--m)a+=`\n            k = i32(${e.indicesGet("indices",m)}) - ${n[m]};\n            if (k < 0) {\n              break;\n            }\n            if (k >= ${r[m]}) {\n              break;\n            }\n            offset += k * ${o[m]};\n        `;return`\n          value = ${s}(${u});\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${a}\n            value = x[offset];\n          }\n      `},fd=(e,t,r,o,n)=>{let s=r.length,u="";for(let d=s-1;d>=0;--d)u+=`\n                k = i32(${e.indicesGet("indices",d)}) - ${n[d]};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = ${2*(r[d]-1)};\n                  k = k % _2n_1;\n                  if(k >= ${r[d]}) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * ${o[d]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},md=(e,t,r,o,n)=>{let s=r.length,u="";for(let d=s-1;d>=0;--d)u+=`\n                k = i32(${e.indicesGet("indices",d)}) - ${n[d]};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= ${r[d]}) {\n                  k = ${r[d]-1};\n                }\n                offset += k * ${o[d]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},hd=(e,t,r,o,n)=>{let s=r.length,u="";for(let d=s-1;d>=0;--d)u+=`\n                k = i32(${e.indicesGet("indices",d)}) - ${n[d]};\n                if (k < 0)  {\n                  k += ${r[d]};\n                }\n                if (k >= ${r[d]}) {\n                  k -= ${r[d]};\n                }\n                offset += k * ${o[d]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},gd=(e,t,r,o,n,s)=>{switch(n.mode){case 0:return pd(e,t,r,o,n.pads,s,n.value);case 1:return fd(e,t,r,o,n.pads);case 2:return md(e,t,r,o,n.pads);case 3:return hd(e,t,r,o,n.pads);default:throw new Error("Invalid mode")}},yd=(e,t,r,o)=>{let n=t[0].dims,s=k.padShape(n.slice(),r.pads),u=k.size(s),d=k.computeStrides(n),a=X("output",t[0].dataType,s),m=L("x",t[0].dataType,n),g=gd(a,s,n,d,r,o);return`\n              ${e.declareVariables(m,a)}\n              ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n\n              let indices = ${a.offsetToIndices("global_idx")};\n\n              var value = ${o}(0);\n              ${g}\n              output[global_idx] = value;\n          }`},bd=(e,t)=>{let r=k.padShape(e[0].dims.slice(),t.pads);return{name:"Pad",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(k.size(r)/64)}}),getShaderSource:o=>yd(o,e,t,"f32")}},wd=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,n=e[0].dims.length,s=new Int32Array(2*n).fill(0);if(e.length>=4){let d=e[3].getBigInt64Array();for(let a=0;a<d.length;a++)s[Number(d[a])]=Number(r[a]),s[Number(d[a])+n]=Number(r[a+d.length])}else r.forEach((d,a)=>s[Number(a)]=Number(d));let u=[];return s.forEach(d=>u.push(d)),ie({mode:t.mode,value:o,pads:u})}else return t},Fi=(e,t)=>{cd(e.inputs);let r=wd(e.inputs,t);e.compute(bd(e.inputs,r),{inputs:[0]})},Hi=e=>{let t=e.mode,r=e.value,o=e.pads;return ie({mode:t,value:r,pads:o})}});var Hr,Ki,qi,Yi,Xi,Ji,Zi,Qi,es,ts,rs,ns,os,as,is,ss=H(()=>{"use strict";ge();Pe();ve();Hr=e=>{if(!e||e.length!==1)throw new Error("Pool ops requires 1 input.");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("Pool ops supports 1-D or 2-D inputs only for now.")},Ki=(e,t,r)=>{let o=t.format==="NHWC",n=e.dims.slice();o&&n.splice(1,0,n.pop());let s=Object.hasOwnProperty.call(t,"dilations"),u=t.kernelShape.slice(),d=t.strides.slice(),a=s?t.dilations.slice():[],m=t.pads.slice();Ct.adjustPoolAttributes(r,n,u,d,a,m);let g=Ct.computePoolOutputShape(r,n,d,a,u,m,t.autoPad),x=Object.assign({},t);s?Object.assign(x,{kernelShape:u,strides:d,pads:m,dilations:a,cacheKey:t.cacheKey}):Object.assign(x,{kernelShape:u,strides:d,pads:m,cacheKey:t.cacheKey});let b=g.slice();return b.push(b.splice(1,1)[0]),[x,o?b:g]},qi=(e,t,r,o,n,s,u,d)=>{let a=n.format==="NHWC",m=r,g=t.type.value,x=m.length,b=k.size(o),w=X("output",t.type.tensor,o);if(n.kernelShape.length<=2){let v=n.kernelShape[n.kernelShape.length-1],y=n.strides[n.strides.length-1],S=n.pads[n.pads.length/2-1],A=n.pads[n.pads.length-1],R=x-(a?2:1),W="",M="",D="";if(S+A!==0?W=`\n                for (var i: u32 = 0u; i < ${v}u; i++) {\n                  xIndices[${R}] = indices[${R}] * ${y} - ${S} + i;\n                  if (xIndices[${R}] < 0 || xIndices[${R}] >= ${m[R]}) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`:W=`\n                for (var i: u32 = 0u; i < ${v}u; i++) {\n                  xIndices[${R}] = indices[${R}] * ${y} - ${S} + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`,n.kernelShape.length===2){let z=n.kernelShape[n.kernelShape.length-2],F=n.strides[n.strides.length-2],q=n.pads[n.pads.length/2-2],le=n.pads[n.pads.length-2],B=x-(a?3:2),K=m[B];q+le!==0?M=`\n                for (var j: u32 = 0u; j < ${z}u; j++) {\n                  xIndices[${B}] = indices[${B}] * ${F} - ${q} + j;\n                  if (xIndices[${B}] < 0 || xIndices[${B}] >= ${K}) {\n                    pad+= ${v};\n                    continue;\n                  }\n              `:M=`\n                for (var j: u32 = 0u; j < ${z}u; j++) {\n                  xIndices[${B}] = indices[${B}] * ${F} - ${q} + j;\n                `,D=`\n              }\n            `}return`\n            ${e.declareVariables(t,w)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              var xIndices = ${w.offsetToIndices("global_idx")};\n\n              var value: ${g} = ${g}(${d});\n              var pad = 0;\n              ${M}\n              ${W}\n              ${D}\n              ${u}\n\n              output[global_idx] = value;\n            }`}else{if(a)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let v=k.size(n.kernelShape),y=k.computeStrides(n.kernelShape),S=y.length,A=n.pads.length,R=n.pads.reduce((D,_)=>D+_),W="";return R?W=`\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${s}\n              }`:W=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${s}\n            `,`\n            ${e.declareVariables(t,w)}\n\n            const pads = array<u32, ${A}>(${n.pads.map(D=>`${D}u`).join(",")});\n            const inputDims = array<u32, ${x}>(${m.map(D=>`${D}u`).join(",")});\n            const kernelStrides = array<u32, ${S}>(${y.map(D=>`${D}u`).join(",")});\n            const strides = array<u32, ${S}>(${n.strides.map(D=>`${D}u`).join(",")});\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              let xIndices = ${w.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${S}>;\n\n              var value = ${w.type.value}(${d});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${v}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${S-1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${S-1}] = offset;\n\n                isPad = false;\n                for (var j = ${x-S}u; j < ${x}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${x-S}u]\n                    + offsets[j - ${x-S}u] - pads[j - 2u];\n                  ${W}\n              }\n              ${u}\n\n              output[global_idx] = value;\n            }`}},Yi=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Xi=(e,t,r,o)=>{let[n,s]=Ki(t,o,r),u=k.size(n.kernelShape),d=L("x",t.dataType,t.dims),a=d.type.value,m="value += x_val;",g="";return n.countIncludePad?g+=`value /= ${a}(${u});`:g+=`value /= ${a}(${u} - pad);`,{name:e,shaderCache:{hint:o.cacheKey},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(k.size(s)/64)}}),getShaderSource:x=>qi(x,d,t.dims,s,n,m,g,"0.0")}},Ji=e=>{let t=e.count_include_pad!==0,r=Yi(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return ie({countIncludePad:t,...r})},Zi=(e,t)=>{Hr(e.inputs),e.compute(Xi("AveragePool",e.inputs[0],!1,t))},Qi={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},es=e=>{let t=e.format;return{format:t,...Qi,cacheKey:t}},ts=(e,t)=>{Hr(e.inputs),e.compute(Xi("GlobalAveragePool",e.inputs[0],!0,t))},rs=(e,t,r,o)=>{let[n,s]=Ki(t,o,r),u=`\n      value = max(x_val, value);\n    `,d="",a=L("x",t.dataType,t.dims);return{name:e,shaderCache:{hint:o.cacheKey},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(k.size(s)/64)}}),getShaderSource:m=>qi(m,a,t.dims,s,n,u,d,"-1e5")}},ns=(e,t)=>{Hr(e.inputs),e.compute(rs("MaxPool",e.inputs[0],!1,t))},os=e=>{let t=e.storage_order,r=e.dilations,o=Yi(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return ie({storageOrder:t,dilations:r,...o})},as=e=>{let t=e.format;return{format:t,...Qi,cacheKey:t}},is=(e,t)=>{Hr(e.inputs),e.compute(rs("GlobalMaxPool",e.inputs[0],!0,t))}});var jr=H(()=>{"use strict"});var us=H(()=>{"use strict";jr()});var ls,ds=H(()=>{"use strict";ls="1.17.0-dev.20231103-1439da36fe"});var cs,Wn,ps=H(()=>{"use strict";ds();cs="warning",Wn={wasm:{},webgl:{},webgpu:{},versions:{common:ls},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);cs=e}},get logLevel(){return cs}};Object.defineProperty(Wn,"logLevel",{enumerable:!0})});var fs,ms=H(()=>{"use strict";ps();fs=Wn});var hs=H(()=>{"use strict"});var gs=H(()=>{"use strict";Kr()});var bs=H(()=>{"use strict"});var ws=H(()=>{"use strict";Kr()});var Kr=H(()=>{"use strict";hs();gs();bs();ws()});var qr=H(()=>{"use strict";Kr()});var vs=H(()=>{"use strict";jr();qr()});var $s=H(()=>{"use strict";vs()});var xs=H(()=>{"use strict"});var Ss=H(()=>{"use strict";jr();qr()});var Cs=H(()=>{"use strict";Ss()});var As=H(()=>{"use strict";us();ms();$s();qr();xs();Cs()});var Sd,Cd,Is,Es=H(()=>{"use strict";As();De();ve();Sd=(e,t,r)=>{let o=e===t,n=e<t&&r<0,s=e>t&&r>0;if(o||n||s)throw new Error("Range these inputs\' contents are invalid.")},Cd=(e,t,r,o)=>{let n=Math.abs(Math.ceil((t-e)/r)),s=[n],u=n,d=X("output",o,s),a=d.type.storage,m=g=>`\n        ${g.declareVariables(d)}\n        ${g.mainStart()}\n        ${g.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        output[global_idx] = ${a}(${e}) + ${a}(global_idx) * ${a}(${r});\n      }`;return{name:"Range",shaderCache:{hint:[e,t,r].map(g=>g.toString()).join("_")},getShaderSource:m,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(u/64)}})}},Is=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),fs.webgpu.validateInputContent&&Sd(t,r,o),e.compute(Cd(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var Ad,Id,Ed,Td,Od,_d,Rd,Pd,Md,Bd,kd,Dd,Wd,zd,Vd,Ts,Os,_s=H(()=>{"use strict";ge();Pe();ve();Ad=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Id=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((n,s)=>o[n]=e[s]),o},Ed=(e,t,r,o,n,s)=>{let[u,d,a]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],m=e[0].dims.length;if(u>0&&e.length>u&&e[u].dims.length>0)e[u].getFloat32Array().forEach(g=>s.push(g));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(d>0&&e.length>d&&e[d].dims.length>0){if(e[d].getFloat32Array().forEach(g=>o.push(g)),o.length!==0&&o.length!==m&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ad(o,t),t.axes.length>0&&Id(o,t.axes,m).forEach((g,x)=>o[x]=g)}if(a>0&&e.length>a&&(e[a].getBigInt64Array().forEach(g=>n.push(Number(g))),n.length!==m||r>=18&&n.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(n.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof n<"u"&&o.length>0&&n.length>m)throw new Error("Resize requires only of scales or sizes to be specified")},Td=e=>"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(e){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join(`\n`);case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Od=(e,t)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",_d=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?o:e.slice();return t.length>0?(t.forEach((s,u)=>{o[s]=n[u],o[u+r]=n[t.length+u]}),o):n},Rd=(e,t,r,o)=>{let n=[];if(r.length>0)if(o.length>0){if(e.forEach(s=>n.push(s)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((s,u)=>n[s]=r[u])}else r.forEach(s=>n.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((s,u)=>Math.round(s*t[u]))}return n},Pd=(e,t,r,o)=>{let n=(()=>{switch(o.keepAspectRatioPolicy){case"not_larger":return o.axes.length>0?Math.min(...o.axes.map(u=>r[u]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return o.axes.length>0?Math.max(...o.axes.map(u=>r[u]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${o.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let s=e.slice();return o.axes.length>0?(o.axes.forEach(u=>r[u]=n),o.axes.forEach(u=>s[u]=Math.round(e[u]*r[u]))):(r.fill(n,0,r.length),s.forEach((u,d)=>s[d]=Math.round(u*r[d]))),s},Md=(e,t,r,o,n)=>`\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> array<f32, ${r.length}> {\n      const inputShape = array<u32, ${t.length}>(${t.map(s=>`${s}u`).join(",")});\n      const outputShape = array<u32, ${r.length}>(${r.map(s=>`${s}u`).join(",")});\n      const scales = array<f32, ${o.length}>(${o.map(s=>`${s}f`).join(",")});\n      const roi = array<f32, ${n.length}>(${n.map(s=>`${s}f`).join(",")});\n      var originalIndices: array<f32, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var outputIndex = ${r.length===1?"outputIndices":"outputIndices[i]"};\n        if (scales[i] == 1.0) {\n          originalIndices[i] = f32(outputIndex);\n        } else {\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${t.length}]);\n        }\n      }\n      return originalIndices;\n    }`,Bd=(e,t,r,o,n,s,u)=>`\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n        const inputShape = array<u32, ${r.length}>(${r.map(d=>`${d}u`).join(",")});\n        const outputShape = array<u32, ${o.length}>(${o.map(d=>`${d}u`).join(",")});\n        const scales = array<f32, ${n.length}>(${n.map(d=>`${d}f`).join(",")});\n        const roi = array<f32, ${s.length}>(${s.map(d=>`${d}f`).join(",")});\n        var inputIndices: ${e.type.indices};\n        for (var i:u32 = 0; i < ${o.length}; i++) {\n          var outputIndex = ${o.length===1?"outputIndices":"outputIndices[i]"};\n          var inputIndex: u32;\n          if (scales[i] == 1.0) {\n            inputIndex = outputIndex;\n          } else {\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${r.length}]);\n            if (!${u} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {\n              if (original_idx < 0) {\n                inputIndex = 0;\n              } else if (original_idx > (f32(inputShape[i]) - 1)) {\n                inputIndex = inputShape[i] - 1;\n              } else {\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\n              }\n            } else {\n              inputIndex = u32(original_idx);\n            }\n          }\n          ${e.indicesSet("inputIndices","i","inputIndex")}\n        }\n        return inputIndices;\n    }`,kd=(e,t)=>`\n    fn checkInputIndices(inputIndices: ${e.type.indices}) -> bool {\n      const inputShape = array<u32, ${t.length}>(${t.map(r=>`${r}u`).join(",")});\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var inputIndex = ${t.length===1?"inputIndices":"inputIndices[i]"};\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\n          return false;\n        }\n      }\n      return true;\n    }`,Dd=(e,t,r,o,n,s,u)=>{let[d,a,m,g]=r.length===2?[-1,0,1,-1]:n[1]===1?[0,2,3,1]:[0,1,2,3];return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {\n      var inputIndices: ${e.type.indices};\n      inputIndices[${a}] = max(0, min(row, ${r[a]} - 1));\n      inputIndices[${m}] = max(0, min(col, ${r[m]} - 1));\n      if (${r.length} > 2) {\n        inputIndices[${g}] = channel;\n        inputIndices[${d}] = batch;\n      };\n      return input[${e.indicesToOffset("inputIndices")}];\n    }\n\n    fn bilinearInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\n      var row:f32 = originalIndices[${a}];\n      var col:f32 = originalIndices[${m}];\n      if (${s} && (row < 0 || row > (${r[a]} - 1) || col < 0 || col > ${r[m]} - 1)) {\n        return ${u};\n      }\n      row = max(0, min(row, ${r[a]} - 1));\n      col = max(0, min(col, ${r[m]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = 0;\n      var batch: u32 = 0;\n      if (${r.length>2}) {\n        channel = u32(originalIndices[${g}]);\n        batch = u32(originalIndices[${d}]);\n      }\n      var x11: f32 = getInputValue(batch, channel, row1, col1);\n      var x12: f32 = getInputValue(batch, channel, row1, col2);\n      var x21: f32 = getInputValue(batch, channel, row2, col1);\n      var x22: f32 = getInputValue(batch, channel, row2, col2);\n      var dx1: f32 = row - f32(row1);\n      var dx2: f32 = f32(row2 ) - row;\n      var dy1 = col - f32(col1);\n      var dy2 = f32(col2) - col;\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Wd=(e,t,r,o,n,s,u,d,a,m)=>{let[g,x]=r.length===2?[0,1]:n[1]===1?[2,3]:[1,2],b=w=>{let v=w===g?"row":"col";return`\n      fn ${v}CubicInterpolation(inputIndices: ${e.type.indices}, outputIndices: ${t.type.indices}) -> f32 {\n        var outputIndex = ${o.length===1?"outputIndices":`outputIndices[${w}]`};\n        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${n[w]},\n        f32(${o[w]}), f32(${r[w]}), ${s[w]}, ${s[w]} + ${r.length});\n        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${d} && (originalIdx < 0 || originalIdx > (${r[w]} - 1))) {\n          return ${a};\n        }\n        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${v}: f32 = originalIdx + f32(i);\n          if (${v} < 0 || ${v} >= ${r[w]}) {\n            if (${m}) {\n              coefs[i + 1] = 0.0;\n              continue;\n            } else if (${d}) {\n              return ${a};\n            } else {\n              ${v} = max(0, min(${v}, ${r[w]} - 1));\n            }\n          }\n          var inputIndicesCopy: ${e.type.indices} = inputIndices;\n          inputIndicesCopy[${w}] = u32(${v});\n          data[i + 1] = ${w===g?`input[${e.indicesToOffset("inputIndicesCopy")}];`:`\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${b(g)};\n    ${b(x)};\n  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {\n    var absS = abs(s);\n    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: f32 = 1.0 - absS;\n    var twoMinusAbsS: f32 = 2.0 - absS;\n    var onePlusAbsS: f32 = 1.0 + absS;\n    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};\n    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {\n    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n    var inputIndices: ${e.type.indices} = outputIndices;\n    return colCubicInterpolation(inputIndices, outputIndices);\n  }\n    `},zd=(e,t,r,o,n,s)=>{let u=e.dims,d=_d(s,t.axes,u.length),a=Rd(u,o,n,t.axes),m=o.slice();o.length===0&&(m=u.map((S,A)=>S===0?1:a[A]/S),t.keepAspectRatioPolicy!=="stretch"&&(a=Pd(u,a,m,t)));let g=X("output",e.dataType,a),x=L("input",e.dataType,u),b=k.size(a),w=u.length===a.length&&u.every((S,A)=>S===a[A]),v=t.coordinateTransformMode==="tf_crop_and_resize",y=S=>`\n      ${Td(t.coordinateTransformMode)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${kd(x,u)};\n              ${Od(t.nearestMode,r)};\n              ${Bd(x,g,u,a,m,d,v)};\n              `;case"linear":return`\n              ${Md(g,u,a,m,d)};\n              ${Dd(x,g,u,a,m,v,t.extrapolationValue)};\n              `;case"cubic":return`\n            ${Wd(x,g,u,a,m,d,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)};\n            `;default:throw Error("Invalid resize mode")}})()};\n      ${S.declareVariables(x,g)}\n      ${S.mainStart()}\n        ${S.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n        if (${w}) {\n          output[global_idx] = input[global_idx];\n        } else {\n          let outputIndices = ${g.offsetToIndices("global_idx")};\n          var inputIndices: ${x.type.indices};\n          ${(()=>{switch(t.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\n                  if (checkInputIndices(inputIndices)) {\n                    output[global_idx] = input[${x.indicesToOffset("inputIndices")}];\n                  } else {\n                    output[global_idx] = ${t.extrapolationValue};\n                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n        }\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${m.length>0?m:""}|${n.length>0?n:""}`},getShaderSource:y,getRunData:()=>({outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(b/64)}})}},Vd=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ts=(e,t)=>{let r=[],o=[],n=[],s=Vd(e);Ed(e.inputs,t,s,r,o,n),e.compute(zd(e.inputs[0],t,s,r,o,n),{inputs:[0]})},Os=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,n=e.cubicCoeffA,s=e.excludeOutside!==0,u=e.extrapolationValue,d=e.keepAspectRatioPolicy,a=e.mode,m=e.nearestMode===""?"simple":e.nearestMode;return ie({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:n,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:d,mode:a,nearestMode:m})}});var Gd,Nd,Rs,Ps,Ms=H(()=>{"use strict";De();ge();Pe();ve();Gd=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let u=e[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let u=e[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},Nd=(e,t,r,o)=>{let n=e[0].dims,s=k.size(n),u=n,d=s,a=n.slice(-1)[0],m=o?n.slice(0,-1).concat(1):[],g=e.length>3,x=e.length>4,b=o&&r>1,w=o&&r>2,v=r>3,y=lt(a),S=[L("x",e[0].dataType,e[0].dims,y),L("skip",e[1].dataType,e[1].dims,y),L("gamma",e[2].dataType,e[2].dims,y)];g&&S.push(L("beta",e[3].dataType,e[3].dims,y)),x&&S.push(L("bias",e[4].dataType,e[4].dims,y)),S.push(X("output",e[0].dataType,u,y)),b&&S.push(X("meanOutput",1,m)),w&&S.push(X("invStdOutput",1,m)),v&&S.push(X("inputSkipBiasSum",e[0].dataType,u,y));let A=Me(e[0].dataType),R=M=>`\n      const hiddenSize: f32 = ${a};\n      const hiddenSizeVectorized: u32 = ${a/y};\n      const epsilon: f32 = ${t.epsilon};\n\n      ${M.declareVariables(...S)}\n\n      ${M.mainStart()}\n        ${M.guardAgainstOutOfBoundsWorkgroupSizes(d/a)}\n        let offset = global_idx * hiddenSizeVectorized;\n        var sum = ${qe("f32",y)};\n        var squareSum = ${qe("f32",y)};\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${x?"bias[i]":"0.0"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${v?"inputSkipBiasSum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32Value = ${At(A,y,"value")};\n          sum += f32Value;\n          squareSum += f32Value * f32Value;\n        }\n        let mean = ${ht("sum",y)} / hiddenSize;\n        let variance = sqrt(${ht("squareSum",y)} / hiddenSize - mean * mean + epsilon);\n        ${b?"meanOutput[global_idx] = mean;":""}\n        ${w?"invStdOutput[global_idx] = 1.0 / variance;":""}\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${A}(mean)) / ${A}(variance) * gamma[i]\n           + ${g?"beta[i]":"0.0"};\n        }\n      }`,W=[{dims:u,dataType:e[0].dataType}];return r>1&&W.push({dims:m,dataType:1}),r>2&&W.push({dims:m,dataType:1}),r>3&&W.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:t.cacheKey},getShaderSource:R,getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(d/a/64)}})}},Rs=(e,t)=>{Gd(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Nd(e.inputs,t,e.outputCount,!1),{outputs:o})},Ps=e=>{let t=e.epsilon;return ie({epsilon:t})}});var Ud,Yr,Ld,Bs,Fd,Hd,ks,Ds,Ws=H(()=>{"use strict";De();ge();Pe();ve();Ud=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Yr=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Ld=(e,t)=>{if(e.length>1){let r=Yr(e,1),o=Yr(e,2),n=Yr(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),ie({starts:r,ends:o,axes:n})}else return t},Bs=(e,t,r,o,n)=>{let s=e;return e<0&&(s+=r[o[t]]),n[t]<0?Math.max(0,Math.min(s,r[o[t]]-1)):Math.max(0,Math.min(s,r[o[t]]))},Fd=(e,t,r,o)=>`fn calculateInputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n          var inputIndices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            var outputIndex = ${o.length===1?"outputIndices":"outputIndices[i]"};\n            var inputIndex = outputIndex * steps[i] + starts[i] + carry;\n            carry = inputIndex / inputShape[i];\n            inputIndex = inputIndex % inputShape[i];\n            if (signs[i] < 0) {\n              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];\n            }\n            ${r.length===1?"inputIndices":"inputIndices[i]"} = inputIndex;\n          }\n          return inputIndices;\n      }`,Hd=(e,t)=>{let r=e[0].dims,o=k.size(r),n=t.axes.length>0?k.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=Yr(e,4);s.forEach(y=>y!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(n.length).fill(1));let u=t.starts.map((y,S)=>Bs(y,S,r,n,s)),d=t.ends.map((y,S)=>Bs(y,S,r,n,s));if(n.length!==r.length)for(let y=0;y<r.length;++y)n.includes(y)||(u.splice(y,0,0),d.splice(y,0,r[y]),s.splice(y,0,1));let a=s.map(y=>Math.sign(y));s.forEach((y,S,A)=>{if(y<0){let R=(d[S]-u[S])/y,W=u[S],M=W+R*s[S];u[S]=M,d[S]=W,A[S]=-y}});let m=r.slice(0);n.forEach((y,S)=>{m[y]=Math.ceil((d[y]-u[y])/s[y])});let g={dims:m,dataType:e[0].dataType},x=X("output",e[0].dataType,m),b=L("input",e[0].dataType,r),w=k.size(m),v=y=>`\n      ${y.declareVariables(b,x)}\n        const signs = array<i32, ${a.length}>(${a.map(S=>`${S}i`).join(",")});\n        const starts = array<u32, ${u.length}>(${u.map(S=>`${S}u`).join(",")});\n        const ends = array<u32, ${d.length}>(${d.map(S=>`${S}u`).join(",")});\n        const steps = array<u32, ${s.length}>(${s.map(S=>`${S}u`).join(",")});\n        const inputShape = array<u32, ${r.length}>(${r.map(S=>`${S}u`).join(",")});\n\n        ${Fd(b,x,r,m)}\n        ${y.mainStart()}\n          ${y.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n          let outputIndices = ${x.offsetToIndices("global_idx")};\n          let inputIndices = calculateInputIndices(outputIndices);\n          ${x.setByOffset("global_idx",b.getByIndices("inputIndices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${t.cacheKey}|${e[4]?.dims??""}`},getShaderSource:v,getRunData:()=>({outputs:[g],dispatchGroup:{x:Math.ceil(o/64)}})}},ks=(e,t)=>{Ud(e.inputs,t);let r=Ld(e.inputs,t);e.compute(Hd(e.inputs,r),{inputs:[0]})},Ds=e=>{let t=e.starts,r=e.ends,o=e.axes;return ie({starts:t,ends:r,axes:o})}});var jd,Kd,zs,Vs,Gs=H(()=>{"use strict";ge();Pe();ve();jd=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Kd=(e,t)=>{let r=Me(e.dataType),o=e.dims,n=k.size(o),s=64,u=t.axis;if(u<0&&(u=o.length+u),u<o.length-1)throw new Error("softmax only supports last axis for now.");let d=o[u],a=n/d,m=lt(d),g=d/m,x=m===1?r:`vec${m}<${r}>`,b=(y,S)=>S===4?`max(max(${y}.x, ${y}.y), max(${y}.z, ${y}.w))`:S===2?`max(${y}.x, ${y}.y)`:S===3?`max(max(${y}.x, ${y}.y), ${y}.z)`:y,w=r==="f32"?`var threadMax = ${x}(-3.402823e+38f);`:`var threadMax = ${x}(-65504.0h);`;return{name:"Softmax",getRunData:()=>({outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:a}}),getShaderSource:y=>`\n      var<workgroup> rowMaxShared : ${x};\n      var<workgroup> rowSumShared : ${x};\n      var<workgroup> threadShared : array<${x}, ${s}>;\n\n      @group(0) @binding(0) var<storage, read> x : array<${x}>;\n      @group(0) @binding(1) var<storage, read_write> result : array<${x}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${x} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${x}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n\n      @compute @workgroup_size(${s}, 1, 1)\n      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {\n        let gindex = i32(global_id.x);\n        let lindex = i32(local_id.x);\n        const wg = ${s};\n        let row = gindex / wg;\n        let cols = ${g};\n        let row_stride : i32 = ${g};\n\n        // find the rows max\n        ${w}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${x}(${b("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${x}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${x}(${ht("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`}},zs=(e,t)=>{jd(e.inputs),e.compute(Kd(e.inputs[0],t))},Vs=e=>ie({axis:e.axis})});var qd,Yd,Xd,Jd,Zd,Ns,Us,Ls=H(()=>{"use strict";ge();Pe();ve();qd=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Yd=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),o=r.length),ie({numOutputs:o,axis:t.axis,splitSizes:r})},Xd=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < sizeInConcatAxis[i]) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Jd=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let n=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(n):o===0?r.push(`if (outputNumber == ${o}u) { ${n} }`):o===t-1?r.push(`else { ${n} }`):r.push(`else if (outputNumber == ${o}) { ${n} }`)}return`\n      fn writeBufferData(outputNumber: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Zd=(e,t)=>{let r=e[0].dims,o=k.size(r),n=e[0].dataType,s=r.length,u=t.axis,d=u<0?r.length+u:u,a=new Array(t.numOutputs),m=L("input",n,r),g=new Array(t.numOutputs),x=[],b=[],w=0;for(let S=0;S<t.numOutputs;S++){w+=t.splitSizes[S],g[S]=w;let A=r.slice();A[t.axis]=t.splitSizes[S],b.push(A),a[S]=X(`output${S}`,n,b[S]),x.push({dims:b[S],dataType:e[0].dataType})}let v=s<2?"indices":`indices[${d}]`,y=S=>`\n  ${S.declareVariables(m,...a)}\n  const sizeInConcatAxis = array<u32, ${g.length}>(${g.map(A=>`${A}u`).join(",")});\n  ${Xd(g.length)}\n  ${Jd(a)}\n\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n\n    var indices = ${m.offsetToIndices("global_idx")};\n    let outputNumber = calculateOutputIndex(${v});\n    if (outputNumber != 0) {\n        ${v} -= sizeInConcatAxis[outputNumber - 1u];\n    }\n    writeBufferData(outputNumber, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey},getShaderSource:y,getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(o/64)}})}},Ns=(e,t)=>{qd(e.inputs);let r=e.inputs.length===1?t:Yd(e.inputs,t);e.compute(Zd(e.inputs,r),{inputs:[0]})},Us=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ie({axis:t,numOutputs:o,splitSizes:r})}});var Fs,Qd,ec,tc,Hs,js=H(()=>{"use strict";De();ge();ve();Fs=e=>Array.from(e.getBigInt64Array(),Number),Qd=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Fs(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},ec=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},tc=e=>{let t=e[0].dims,r=Fs(e[1]),o=ec(t,r),n=k.size(o),s=e[0].dataType,u=L("input",s,t),d=X("output",s,o),a=m=>`\n      const inputShape = ${u.indices(...t)};\n      ${m.declareVariables(u,d)}\n      ${m.mainStart()}\n      ${m.guardAgainstOutOfBoundsWorkgroupSizes(n)}\n      let outputIndices = ${d.offsetToIndices("global_idx")};\n      var inputIndices: ${u.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let inputDimValue = ${d.indicesGet("outputIndices","i")}  % ${u.indicesGet("inputShape","i")};\n\n        ${u.indicesSet("inputIndices","i","inputDimValue")}\n      }\n      ${d.setByOffset("global_idx",u.getByIndices("inputIndices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:a}},Hs=e=>{Qd(e.inputs),e.compute(tc(e.inputs),{inputs:[0]})}});var rc,nc,Ks,qs=H(()=>{"use strict";De();ge();ve();rc=(e,t,r,o,n)=>{let s=k.size(r),u=Math.ceil(s/4),d=X("outputData",n,r,4),a=L("aData",t[1].dataType,t[1].dims,4),m=L("bData",t[2].dataType,t[2].dims,4),g=L("cData",t[0].dataType,t[0].dims,4),x,b=(w,v,y)=>`select(${v}, ${w}, ${y})`;if(!o)x=d.setByOffset("global_idx",b(a.getByOffset("global_idx"),m.getByOffset("global_idx"),g.getByOffset("global_idx")));else{let w=(v,y,S="")=>{let A=`aData[indexA${y}][componentA${y}]`,R=`bData[indexB${y}][componentB${y}]`,W=`bool(cData[indexC${y}] & ${4278190080>>>(3-y)*8}u)`;return`\n            let outputIndices${y} = ${d.offsetToIndices(`global_idx * 4u + ${y}u`)};\n            let offsetA${y} = ${a.broadcastedIndicesToOffset(`outputIndices${y}`,d)};\n            let offsetB${y} = ${m.broadcastedIndicesToOffset(`outputIndices${y}`,d)};\n            let offsetC${y} = ${g.broadcastedIndicesToOffset(`outputIndices${y}`,d)};\n            let indexA${y} = offsetA${y} / 4u;\n            let indexB${y} = offsetB${y} / 4u;\n            let indexC${y} = offsetC${y} / 4u;\n            let componentA${y} = offsetA${y} % 4u;\n            let componentB${y} = offsetB${y} % 4u;\n            ${v}[${y}] = ${S}(${b(A,R,W)});\n          `};n===9?x=`\n            var data = vec4<u32>(0);\n            ${w("data",0,"u32")}\n            ${w("data",1,"u32")}\n            ${w("data",2,"u32")}\n            ${w("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:x=`\n            ${w("outputData[global_idx]",0)}\n            ${w("outputData[global_idx]",1)}\n            ${w("outputData[global_idx]",2)}\n            ${w("outputData[global_idx]",3)}\n          `}return`\n        ${e.declareVariables(g,a,m,d)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        ${x}\n      }`},nc=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,n=e[1].dataType,s=!(k.areEqual(t,r)&&k.areEqual(r,o)),u=t,d=k.size(t);if(s){let a=Qe.calcShape(Qe.calcShape(t,r,!1),o,!1);if(!a)throw new Error("Can\'t perform where op on the given tensors");u=a,d=k.size(u)}return{name:"Where",getShaderSource:a=>rc(a,e,u,s,n),getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(d/64/4)}})}},Ks=e=>{e.compute(nc(e.inputs))}});var Ys,Xs=H(()=>{"use strict";ca();fa();ja();ni();ii();_n();wi();Si();Ii();Oi();Pi();ki();zi();Ni();Li();ji();ss();Es();Mr();_s();Ms();Ws();Gs();Ls();js();rr();In();qs();Ys=new Map([["Abs",[ma]],["Acos",[ha]],["Acosh",[ga]],["Add",[Ka]],["ArgMax",[da,Cn]],["ArgMin",[la,Cn]],["Asin",[ya]],["Asinh",[ba]],["Atan",[wa]],["Atanh",[va]],["AveragePool",[Zi,Ji]],["BiasAdd",[pa]],["BiasSplitGelu",[Ha]],["Cast",[xa,$a]],["Ceil",[Ca]],["ClipV10",[An]],["Clip",[Sa]],["Concat",[oi,ai]],["Conv",[Pn,Rn]],["ConvTranspose",[bi,yi]],["Cos",[Aa]],["Cosh",[Ia]],["Div",[qa]],["Einsum",[$i,xi]],["Elu",[Ea,kr]],["Equal",[Ya]],["Erf",[Ta]],["Exp",[Oa]],["Expand",[Ai]],["Floor",[_a]],["FusedConv",[Pn,Rn]],["Gather",[Ti,Ei]],["GatherElements",[Ri,_i]],["Gelu",[Ra]],["Gemm",[Mi,Bi]],["GlobalAveragePool",[ts,es]],["GlobalMaxPool",[is,as]],["Greater",[Qa]],["GreaterOrEqual",[ti]],["InstanceNormalization",[Wi,Di]],["LayerNormalization",[Gi,Vi]],["LeakyRelu",[Pa,kr]],["Less",[ei]],["LessOrEqual",[ri]],["Log",[Fa]],["MatMul",[Ui]],["MaxPool",[ns,os]],["Mul",[Xa]],["Neg",[Ba]],["Not",[Ma]],["Pad",[Fi,Hi]],["Pow",[Ja]],["Range",[Is]],["Reciprocal",[ka]],["ReduceMin",[ra,Ye]],["ReduceMean",[Jo,Ye]],["ReduceMax",[ta,Ye]],["ReduceSum",[oa,Ye]],["ReduceProd",[na,Ye]],["ReduceL1",[Zo,Ye]],["ReduceL2",[Qo,Ye]],["ReduceLogSum",[ia,Ye]],["ReduceLogSumExp",[ea,Ye]],["ReduceSumSquare",[aa,Ye]],["Relu",[Da]],["Resize",[Ts,Os]],["Sigmoid",[Wa]],["Sin",[za]],["Sinh",[Va]],["Slice",[ks,Ds]],["SkipLayerNormalization",[Rs,Ps]],["Split",[Ns,Us]],["Sqrt",[Ga]],["Softmax",[zs,Vs]],["Sub",[Za]],["Tan",[Na]],["Tanh",[Ua]],["ThresholdedRelu",[La,kr]],["Tile",[Hs]],["Transpose",[zo,Vo]],["Where",[Ks]]])});var Xr,Js=H(()=>{"use strict";De();mt();ve();Xr=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,n,s,u,d){let a=this.backend.device,m=this.backend.getComputePassEncoder();m.setPipeline(t.computePipeline);let g=[];for(let b of n)g.push({binding:g.length,resource:{buffer:b.buffer}});for(let b of s)g.push({binding:g.length,resource:{buffer:b.buffer}});d&&g.push({binding:g.length,resource:d});let x=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:g,label:t.programInfo.name});if(m.setBindGroup(0,x),m.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let b=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,b.buffer,0,this.backend.querySetCount*8),this.backend.flush();let w=this.backend.currentKernelId,v=this.backend.kernels.get(w),y=`[${v[0]}] ${v[1]}`;b.buffer.mapAsync(GPUMapMode.READ).then(()=>{let S=new BigUint64Array(b.buffer.getMappedRange()),A=S[0],R=S[1];b.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=A);let W=Number(A-this.backend.queryTimeBase),M=Number(R-this.backend.queryTimeBase);if(!Number.isSafeInteger(W)||!Number.isSafeInteger(M))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(b.id);let D="";r.forEach((z,F)=>{D+=`input[${F}]: [${z.dims}] | ${Qt(z.dataType)}, `});let _="";o.forEach((z,F)=>{_+=`output[${F}]: [${z.dims}] | ${Qt(z.dataType)}, `}),console.log(`[profiling] kernel "${w}|${y}" ${D}${_}execution time: ${M-W} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(t,r){let o=this.backend.device,n=[];o.features.has("shader-f16")&&n.push("enable f16;");let s=ko(r),u=t.getShaderSource(s),d=`${n.join(`\n`)}\n${s.additionalImplementations}\n${u}`,a=o.createShaderModule({code:d,label:t.name});Ee("verbose",()=>`[WebGPU] shader code: ${d}`);let m=o.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:t.name});return{programInfo:t,computePipeline:m}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=s&&o<=s&&n<=s)return[r,o,n];let u=r*o*n,d=Math.ceil(Math.sqrt(u));if(d>s){if(d=Math.ceil(Math.cbrt(u)),d>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[d,d,d]}else return[d,d,1]}}});var oc,ac,Jr,Zs=H(()=>{"use strict";mt();To();Po();Xs();Js();oc=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let n=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let s=e[o].dims.length;r.push(`${n};${s}`);break}case"dims":{let s=e[o].dims.join(",");r.push(`${n};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},ac=(e,t)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=`:${oc(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},Jr=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=t;let o=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(n),this.gpuDataManager=Ro(this),this.programManager=new Xr(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Io(t.logLevel,!!t.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return!!(this.device.features.has("timestamp-query")&&this.env.webgpu.profilingMode==="default")}run(t,r,o,n,s){let u=[];for(let A=0;A<r.length;++A){let R=this.gpuDataManager.get(r[A].data);if(!R)throw new Error(`no GPU data for input: ${r[A].data}`);u[A]=R}let d=ac(t,r),a=this.programManager.getArtifact(d),{outputs:m,dispatchGroup:g,programUniforms:x}=t.getRunData(r),b=o.length===0?m.map((A,R)=>R):o;if(b.length!==m.length)throw new Error(`Output size ${b.length} must be equal to ${m.length}.`);let w=[],v=[];for(let A=0;A<m.length;++A){if(!Number.isInteger(b[A])||b[A]<-3||b[A]>=m.length)throw new Error(`Invalid output index: ${b[A]}`);if(b[A]===-3)continue;let R=b[A]===-1,W=b[A]===-2,M=R||W?s(m[A].dataType,m[A].dims):n(b[A],m[A].dataType,m[A].dims),D=this.gpuDataManager.get(M.data);if(!D)throw new Error(`no GPU data for output: ${M.data}`);if(R&&this.temporaryData.push(D),W){let _=this.kernelPersistentData.get(this.currentKernelId);_||(_=[],this.kernelPersistentData.set(this.currentKernelId,_)),_.push(D)}w.push(M),v.push(D)}let y;if(x){let A=0,R=0,W=[],M=1;x.forEach(z=>{let F=typeof z.data=="number"?[z.data]:z.data,q;switch(F.length){case 1:q=4;break;case 2:q=8;break;case 3:q=16;break;case 4:q=16;break;case 5:q=16;break;case 6:q=16;break;default:throw new Error(`unsupported data length: ${F.length}`)}(R===5||R===6)&&(q=16),q>M&&(M=q),A=Math.ceil(A/q)*q,R=F.length,W.push(A),A+=F.length*4}),A=Math.ceil(A/M)*M;let D=new ArrayBuffer(A);x.forEach((z,F)=>{let q=W[F],le=typeof z.data=="number"?[z.data]:z.data;z.type==="int32"?new Int32Array(D,q,le.length).set(le):z.type==="uint32"?new Uint32Array(D,q,le.length).set(le):new Float32Array(D,q,le.length).set(le)});let _=this.gpuDataManager.create(A,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(_.buffer,0,D,0,A),this.gpuDataManager.release(_.id),y={offset:0,size:A,buffer:_.buffer}}let S=this.programManager.normalizeDispatchGroupSize(g);return a||(a=this.programManager.build(t,S),this.programManager.setArtifact(d,a)),Ee("info",()=>`[ProgramManager] run "${t.name}" (key=${d}) with ${S[0]}x${S[1]}x${S[2]}`),this.programManager.run(a,r,w,u,v,S,y),w}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,n){let s=Ys.get(t);if(!s)throw new Error(`kernel not implemented: ${t}`);this.kernels.set(r,[t,n,s[0],[s[1],o]])}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let[s,u,d,a]=n;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${u}" is not allowed to be called recursively`);this.currentKernelId=t,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Ee("info",()=>`[WebGPU] Start to run kernel "[${s}] ${u}"...`);let m=this.env.debug;this.temporaryData=[];try{return m&&this.device.pushErrorScope("validation"),d(r,a[1]),0}catch(g){return o.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${u}" failed. ${g}`)),1}finally{m&&o.push(this.device.popErrorScope().then(g=>g?`GPU validation error for kernel "[${s}] ${u}": ${g.message}`:null));for(let g of this.temporaryData)this.gpuDataManager.release(g.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,n){let s=this.sessionExternalDataMapping.get(t);s||(s=new Map,this.sessionExternalDataMapping.set(t,s));let u=s.get(r),d=this.gpuDataManager.registerExternalBuffer(o,n,u?.[1]);return s.set(r,[d,o]),d}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let n=await yn(this,t,r);return Eo(n.buffer,o)}}}});var Qs={};Ir(Qs,{init:()=>ic});var sr,zn,ic,eu=H(()=>{"use strict";De();Zs();mt();ge();sr=class e{constructor(t,r,o,n){this.module=t;this.dataType=r;this.data=o;this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(k.size(t)!==k.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},zn=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let n=t.HEAPU32,s=o>>2;this.opKernelContext=n[s++];let u=n[s++];this.outputCount=n[s++],this.customDataOffset=n[s++],this.customDataSize=n[s++];let d=[];for(let a=0;a<u;a++){let m=n[s++],g=n[s++],x=n[s++],b=[];for(let w=0;w<x;w++)b.push(n[s++]);d.push(new sr(t,m,g,b))}this.inputs=d}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(d=>typeof d=="number"?this.inputs[d]:d)??this.inputs,n=r?.outputs??[],s=(d,a,m)=>new sr(this.module,a,this.output(d,m),m),u=(d,a)=>{let m=er(d);if(!m)throw new Error(`Unsupported data type: ${d}`);let g=m*k.size(a);return new sr(this.module,d,this.backend.gpuDataManager.create(g).id,a)};return this.backend.run(t,o,n,s,u)}output(t,r){let o=this.module.stackSave();try{let n=this.module.stackAlloc((1+r.length)*4),s=n>>2;this.module.HEAPU32[s++]=r.length;for(let u=0;u<r.length;u++)this.module.HEAPU32[s++]=r[u];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(o)}}},ic=async(e,t)=>{let r=e.jsepInit;if(r&&navigator.gpu){if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");let o=new Jr;await o.initialize(t),r(o,n=>o.alloc(n),n=>o.free(n),(n,s,u,d=!1)=>{if(d)Ee("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${s}, size=${u}`),o.memcpy(n,s);else{Ee("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${s}, size=${u}`);let a=e.HEAPU8.subarray(n,n+u);o.upload(s,a)}},async(n,s,u)=>{Ee("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${s}, size=${u}`),await o.download(n,()=>e.HEAPU8.subarray(s,s+u))},(n,s,u)=>o.createKernel(n,s,u,t.debug||t.webgpu.profilingMode==="default"?e.UTF8ToString(e._JsepGetNodeName(s)):`${s}`),n=>o.releaseKernel(n),(n,s,u,d)=>{Ee("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${n}, contextDataOffset=${s}`);let a=new zn(e,o,s);return o.computeKernel(n,a,d)})}}});var wo;wo=uo();var Ru=go(),pn,fn=!1,Er=!1,bo=!1,Pu=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},Mu=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Bu=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",vo=async e=>{if(fn)return Promise.resolve();if(Er)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(bo)throw new Error("previous call to \'initializeWebAssembly()\' failed.");Er=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,n=r>1&&Pu(),s=o&&Mu(),u=e.wasmPaths,d=typeof u=="string"?u:void 0,a=Bu(s,n),m=typeof u=="object"?u[a]:void 0,g=!1,x=[];if(t>0&&x.push(new Promise(b=>{setTimeout(()=>{g=!0,b()},t)})),x.push(new Promise((b,w)=>{let v=n?Ru:wo,y={locateFile:(S,A)=>{if(n&&S.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([yo()],{type:"text/javascript"}));if(S.endsWith(".wasm")){if(m)return m;let R=d??A;return a==="ort-wasm-simd.wasm"?R+"ort-wasm-simd.jsep.wasm":a==="ort-wasm-simd-threaded.wasm"?R+"ort-wasm-simd-threaded.jsep.wasm":R+a}return A+S}};if(n)if(typeof Blob>"u")y.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let S=`var ortWasmThreaded=${v.toString()};`;y.mainScriptUrlOrBlob=new Blob([S],{type:"text/javascript"})}v(y).then(S=>{Er=!1,fn=!0,pn=S,b()},S=>{Er=!1,bo=!0,w(S)})})),await Promise.race(x),g)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Re=()=>{if(fn&&pn)return pn;throw new Error("WebAssembly is not initialized yet.")};var Be=(e,t)=>{let r=Re(),o=r.lengthBytesUTF8(e)+1,n=r._malloc(o);return r.stringToUTF8(e,n,o),t.push(n),n},Zt=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,s])=>{let u=t?t+n:n;if(typeof s=="object")Zt(s,u+".",r,o);else if(typeof s=="string"||typeof s=="number")o(u,s.toString());else if(typeof s=="boolean")o(u,s?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof s}`)})},Ae=e=>{let t=Re(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let n=t.HEAP32[o/4],s=t.HEAPU32[o/4+1],u=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${u}`)}finally{t.stackRestore(r)}};var $o=e=>{let t=Re(),r=0,o=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Be(e.tag,o)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,s),r===0&&Ae("Can\'t create run options."),e?.extra!==void 0&&Zt(e.extra,"",new WeakSet,(u,d)=>{let a=Be(u,o),m=Be(d,o);t._OrtAddRunConfigEntry(r,a,m)!==0&&Ae(`Can\'t set a run config entry: ${u} - ${d}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(u=>t._free(u)),s}};var ku=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Du=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Wu=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},zu=(e,t,r)=>{for(let o of t){let n=typeof o=="string"?o:o.name;switch(n){case"xnnpack":n="XNNPACK";break;case"webnn":if(n="WEBNN",typeof o!="string"){let u=o;if(u?.deviceType){let d=Be("deviceType",r),a=Be(u.deviceType,r);Re()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ae(`Can\'t set a session config entry: \'deviceType\' - ${u.deviceType}.`)}if(u?.powerPreference){let d=Be("powerPreference",r),a=Be(u.powerPreference,r);Re()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ae(`Can\'t set a session config entry: \'powerPreference\' - ${u.powerPreference}.`)}}break;case"webgpu":if(n="JS",typeof o!="string"){let u=o;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${u.preferredLayout}`);let d=Be("preferredLayout",r),a=Be(u.preferredLayout,r);Re()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ae(`Can\'t set a session config entry: \'preferredLayout\' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let s=Be(n,r);Re()._OrtAppendExecutionProvider(e,s)!==0&&Ae(`Can\'t append execution provider: ${n}.`)}},xo=e=>{let t=Re(),r=0,o=[],n=e||{};Wu(n);try{let s=ku(n.graphOptimizationLevel??"all"),u=Du(n.executionMode??"sequential"),d=typeof n.logId=="string"?Be(n.logId,o):0,a=n.logSeverityLevel??2;if(!Number.isInteger(a)||a<0||a>4)throw new Error(`log serverity level is not valid: ${a}`);let m=n.logVerbosityLevel??0;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log verbosity level is not valid: ${m}`);let g=typeof n.optimizedModelFilePath=="string"?Be(n.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(s,!!n.enableCpuMemArena,!!n.enableMemPattern,u,!!n.enableProfiling,0,d,a,m,g),r===0&&Ae("Can\'t create session options."),n.executionProviders&&zu(r,n.executionProviders,o),n.freeDimensionOverrides)for(let[x,b]of Object.entries(n.freeDimensionOverrides)){if(typeof x!="string")throw new Error(`free dimension override name must be a string: ${x}`);if(typeof b!="number"||!Number.isInteger(b)||b<0)throw new Error(`free dimension override value must be a non-negative integer: ${b}`);let w=Be(x,o);t._OrtAddFreeDimensionOverride(r,w,b)!==0&&Ae(`Can\'t set a free dimension override: ${x} - ${b}.`)}return n.extra!==void 0&&Zt(n.extra,"",new WeakSet,(x,b)=>{let w=Be(x,o),v=Be(b,o);t._OrtAddSessionConfigEntry(r,w,v)!==0&&Ae(`Can\'t set a session config entry: ${x} - ${b}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(u=>t._free(u)),s}};De();var ru=!1,sc=e=>{let t=Re(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ae("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},uc=(e,t)=>{Re()._OrtInit(e,t)!==0&&Ae("Can\'t initialize onnxruntime.")},nu=async e=>{uc(e.wasm.numThreads,tr(e.logLevel));{let t=(eu(),Mt(Qs)).init;await t(Re(),e)}ru=!0},ur=new Map,ou=()=>ru,Vn=e=>{let t=Re(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Gn=(e,t)=>{let r=Re(),o=0,n=0,s=0,u=[],d=[],a=[];try{[n,u]=xo(t),o=r._OrtCreateSession(e[0],e[1],n),o===0&&Ae("Can\'t create a session.");let[m,g]=sc(o),x=[],b=[],w=[];for(let y=0;y<m;y++){let S=r._OrtGetInputName(o,y);S===0&&Ae("Can\'t get an input name."),d.push(S),x.push(r.UTF8ToString(S))}for(let y=0;y<g;y++){let S=r._OrtGetOutputName(o,y);S===0&&Ae("Can\'t get an output name."),a.push(S);let A=r.UTF8ToString(S);b.push(A);{let R=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[A]??"cpu";if(R!=="cpu"&&R!=="cpu-pinned"&&R!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${R}.`);w.push(R)}}let v=null;return w.some(y=>y==="gpu-buffer")&&(s=r._OrtCreateBinding(o),s===0&&Ae("Can\'t create IO binding."),v={handle:s,outputPreferredLocations:w,outputPreferredLocationsEncoded:w.map(y=>hn(y))}),ur.set(o,[o,d,a,v]),[o,x,b]}catch(m){throw d.forEach(g=>r._OrtFree(g)),a.forEach(g=>r._OrtFree(g)),s!==0&&r._OrtReleaseBinding(s),o!==0&&r._OrtReleaseSession(o),m}finally{r._free(e[0]),n!==0&&r._OrtReleaseSessionOptions(n),u.forEach(m=>r._free(m))}},au=(e,t)=>{let r=Vn(e);return Gn(r,t)},iu=e=>{let t=Re(),r=ur.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,n,s,u]=r;u&&t._OrtReleaseBinding(u.handle),t.jsepUnregisterBuffers?.(e),n.forEach(d=>t._OrtFree(d)),s.forEach(d=>t._OrtFree(d)),t._OrtReleaseSession(o),ur.delete(e)},tu=(e,t,r,o,n)=>{if(!e){t.push(0);return}let s=Re(),u=e[0],d=e[1],a=e[3],m,g;if(u==="string"&&a==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(a==="gpu-buffer"){let w=e[2].gpuBuffer,v=er(mn(u));g=d.reduce((y,S)=>y*S,1)*v,m=s.jsepRegisterBuffer(o,n,w,g)}else{let w=e[2];if(Array.isArray(w)){g=4*w.length,m=s._malloc(g),r.push(m);let v=m/4;for(let y=0;y<w.length;y++){if(typeof w[y]!="string")throw new TypeError(`tensor data at index ${y} is not a string`);s.HEAPU32[v++]=Be(w[y],r)}}else g=w.byteLength,m=s._malloc(g),r.push(m),s.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,g),m)}let x=s.stackSave(),b=s.stackAlloc(4*d.length);try{let w=b/4;d.forEach(y=>s.HEAP32[w++]=y);let v=s._OrtCreateTensor(mn(u),m,g,b,d.length,hn(a));v===0&&Ae(`Can\'t create tensor for input/output. session=${o}, index=${n}.`),t.push(v)}finally{s.stackRestore(x)}},su=async(e,t,r,o,n,s)=>{let u=Re(),d=ur.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);let[a,m,g,x]=d,b=t.length,w=o.length,v=0,y=[],S=[],A=[],R=[],W=u.stackSave(),M=u.stackAlloc(b*4),D=u.stackAlloc(b*4),_=u.stackAlloc(w*4),z=u.stackAlloc(w*4);try{[v,y]=$o(s);for(let ae=0;ae<b;ae++)tu(r[ae],S,R,e,t[ae]);for(let ae=0;ae<w;ae++)tu(n[ae],A,R,e,b+o[ae]);let F=M/4,q=D/4,le=_/4,B=z/4;for(let ae=0;ae<b;ae++)u.HEAPU32[F++]=S[ae],u.HEAPU32[q++]=m[t[ae]];for(let ae=0;ae<w;ae++)u.HEAPU32[le++]=A[ae],u.HEAPU32[B++]=g[o[ae]];if(x){let{handle:ae,outputPreferredLocations:we,outputPreferredLocationsEncoded:j}=x;if(m.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model\'s input count (${m.length}).`);for(let Se=0;Se<b;Se++){let Oe=t[Se];await u._OrtBindInput(ae,m[Oe],S[Se])!==0&&Ae(`Can\'t bind input[${Se}] for session=${e}.`)}for(let Se=0;Se<w;Se++){let Oe=o[Se];n[Se]?.[3]?u._OrtBindOutput(ae,g[Oe],A[Se],0)!==0&&Ae(`Can\'t bind pre-allocated output[${Se}] for session=${e}.`):u._OrtBindOutput(ae,g[Oe],0,j[Oe])!==0&&Ae(`Can\'t bind output[${Se}] to ${we[Se]} for session=${e}.`)}}let K;x?K=await u._OrtRunWithBinding(a,x.handle,w,_,v):K=await u._OrtRun(a,D,M,b,z,w,_,v),K!==0&&Ae("failed to call OrtRun().");let xe=[];for(let ae=0;ae<w;ae++){let we=u.HEAPU32[_/4+ae];if(we===A[ae]){xe.push(n[ae]);continue}let j=u.stackSave(),Se=u.stackAlloc(4*4),Oe=!1,Ie,Ce=0;try{u._OrtGetTensorData(we,Se,Se+4,Se+8,Se+12)!==0&&Ae(`Can\'t access output tensor data on index ${ae}.`);let Ne=Se/4,Le=u.HEAPU32[Ne++];Ce=u.HEAPU32[Ne++];let N=u.HEAPU32[Ne++],de=u.HEAPU32[Ne++],pe=[];for(let Te=0;Te<de;Te++)pe.push(u.HEAPU32[N/4+Te]);u._OrtFree(N);let ze=pe.reduce((Te,ke)=>Te*ke,1);Ie=Qt(Le);let Ue=x?.outputPreferredLocations[o[ae]];if(Ie==="string"){if(Ue==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Te=[],ke=Ce/4;for(let Ge=0;Ge<ze;Ge++){let Xe=u.HEAPU32[ke++],Fe=Ge===ze-1?void 0:u.HEAPU32[ke]-Xe;Te.push(u.UTF8ToString(Xe,Fe))}xe.push([Ie,pe,Te,"cpu"])}else if(Ue==="gpu-buffer"&&ze>0){let Te=u.jsepGetBuffer(Ce),ke=er(Le);if(ke===void 0||!So(Ie))throw new Error(`Unsupported data type: ${Ie}`);Oe=!0,xe.push([Ie,pe,{gpuBuffer:Te,download:u.jsepCreateDownloader(Te,ze*ke,Ie),dispose:()=>{u._OrtReleaseTensor(we)}},"gpu-buffer"])}else{let Te=Tr(Ie),ke=new Te(ze);new Uint8Array(ke.buffer,ke.byteOffset,ke.byteLength).set(u.HEAPU8.subarray(Ce,Ce+ke.byteLength)),xe.push([Ie,pe,ke,"cpu"])}}finally{u.stackRestore(j),Ie==="string"&&Ce&&u._free(Ce),Oe||u._OrtReleaseTensor(we)}}return x&&u._OrtClearBoundOutputs(x.handle),xe}finally{u.stackRestore(W),S.forEach(F=>u._OrtReleaseTensor(F)),A.forEach(F=>u._OrtReleaseTensor(F)),R.forEach(F=>u._free(F)),v!==0&&u._OrtReleaseRunOptions(v),y.forEach(F=>u._free(F))}},uu=e=>{let t=Re(),r=ur.get(e);if(!r)throw new Error("invalid session id");let o=r[0],n=t._OrtEndProfiling(o);n===0&&Ae("Can\'t get an profile file name."),t._OrtFree(n)},lu=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{switch(e.data.type){case"init-wasm":try{vo(e.data.in).then(()=>postMessage({type:"init-wasm"}),t=>postMessage({type:"init-wasm",err:t}))}catch(t){postMessage({type:"init-wasm",err:t})}break;case"init-ort":try{nu(e.data.in).then(()=>postMessage({type:"init-ort"}),t=>postMessage({type:"init-ort",err:t}))}catch(t){postMessage({type:"init-ort",err:t})}break;case"create_allocate":try{let{model:t}=e.data.in,r=Vn(t);postMessage({type:"create_allocate",out:r})}catch(t){postMessage({type:"create_allocate",err:t})}break;case"create_finalize":try{let{modeldata:t,options:r}=e.data.in,o=Gn(t,r);postMessage({type:"create_finalize",out:o})}catch(t){postMessage({type:"create_finalize",err:t})}break;case"create":try{let{model:t,options:r}=e.data.in,o=au(t,r);postMessage({type:"create",out:o})}catch(t){postMessage({type:"create",err:t})}break;case"release":try{let t=e.data.in;iu(t),postMessage({type:"release"})}catch(t){postMessage({type:"release",err:t})}break;case"run":try{let{sessionId:t,inputIndices:r,inputs:o,outputIndices:n,options:s}=e.data.in;su(t,r,o,n,s).then(u=>{postMessage({type:"run",out:u},lu(u))},u=>{postMessage({type:"run",err:u})})}catch(t){postMessage({type:"run",err:t})}break;case"end-profiling":try{let t=e.data.in;uu(t),postMessage({type:"end-profiling"})}catch(t){postMessage({type:"end-profiling",err:t})}break;case"is-ort-env-initialized":try{let t=ou();postMessage({type:"is-ort-env-initialized",out:t})}catch(t){postMessage({type:"is-ort-env-initialized",err:t})}break;default:}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var Tr,Et,ia,fu,pu,nu,ou,iu,au,su,uu,lu,cu,du,Lr,V1,oa,ny,oy,iy,ay,hu,sy,uy,ly,cy,mu=P(()=>{"use strict";kt();ty();An();Tr=()=>!!xe.wasm.proxy&&typeof document<"u",ia=!1,fu=!1,pu=!1,iu=[],au=[],su=[],uu=[],lu=[],cu=[],du=[],Lr=()=>{if(ia||!fu||pu||!Et)throw new Error("worker not ready")},V1=r=>{switch(r.data.type){case"init-wasm":ia=!1,r.data.err?(pu=!0,nu[1](r.data.err)):(fu=!0,nu[0]());break;case"init-ort":r.data.err?ou[1](r.data.err):ou[0]();break;case"create_allocate":r.data.err?iu.shift()[1](r.data.err):iu.shift()[0](r.data.out);break;case"create_finalize":r.data.err?au.shift()[1](r.data.err):au.shift()[0](r.data.out);break;case"create":r.data.err?su.shift()[1](r.data.err):su.shift()[0](r.data.out);break;case"release":r.data.err?uu.shift()[1](r.data.err):uu.shift()[0]();break;case"run":r.data.err?lu.shift()[1](r.data.err):lu.shift()[0](r.data.out);break;case"end-profiling":r.data.err?cu.shift()[1](r.data.err):cu.shift()[0]();break;case"is-ort-env-initialized":r.data.err?du.shift()[1](r.data.err):du.shift()[0](r.data.out);break;default:}},oa=typeof document<"u"?document?.currentScript?.src:void 0,ny=async()=>{if(Tr()){if(fu)return;if(ia)throw new Error("multiple calls to 'initWasm()' detected.");if(pu)throw new Error("previous call to 'initWasm()' failed.");return ia=!0,xe.wasm.wasmPaths===void 0&&oa&&oa.indexOf("blob:")!==0&&(xe.wasm.wasmPaths=oa.substr(0,+oa.lastIndexOf("/")+1)),new Promise((r,e)=>{Et?.terminate();let n=URL.createObjectURL(new Blob([ry()],{type:"text/javascript"}));Et=new Worker(n,{name:"ort-wasm-proxy-worker"}),Et.onerror=o=>e(o),Et.onmessage=V1,URL.revokeObjectURL(n),nu=[r,e];let t={type:"init-wasm",in:xe.wasm};Et.postMessage(t)})}else return Oh(xe.wasm)},oy=async r=>{if(Tr())return Lr(),new Promise((e,n)=>{ou=[e,n];let t={type:"init-ort",in:r};Et.postMessage(t)});await Kb(r)},iy=async r=>Tr()?(Lr(),new Promise((e,n)=>{iu.push([e,n]);let t={type:"create_allocate",in:{model:r}};Et.postMessage(t,[r.buffer])})):tu(r),ay=async(r,e)=>Tr()?(Lr(),new Promise((n,t)=>{au.push([n,t]);let o={type:"create_finalize",in:{modeldata:r,options:e}};Et.postMessage(o)})):ru(r,e),hu=async(r,e)=>{if(Tr()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Lr(),new Promise((n,t)=>{su.push([n,t]);let o={type:"create",in:{model:r,options:e}};Et.postMessage(o,[r.buffer])})}else return Xb(r,e)},sy=async r=>{if(Tr())return Lr(),new Promise((e,n)=>{uu.push([e,n]);let t={type:"release",in:r};Et.postMessage(t)});Jb(r)},uy=async(r,e,n,t,o,i)=>{if(Tr()){if(n.some(u=>u[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(u=>u))throw new Error("pre-allocated output tensor is not supported for proxy.");return Lr(),new Promise((u,a)=>{lu.push([u,a]);let s=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:s,outputIndices:t,options:i}};Et.postMessage(l,ey(s))})}else return Zb(r,e,n,t,o,i)},ly=async r=>{if(Tr())return Lr(),new Promise((e,n)=>{cu.push([e,n]);let t={type:"end-profiling",in:r};Et.postMessage(t)});Qb(r)},cy=async()=>Tr()?(Lr(),new Promise((r,e)=>{du.push([r,e]);let n={type:"is-ort-env-initialized"};Et.postMessage(n)})):Yb()});var aa,dy,W1,sa,fy=P(()=>{"use strict";kt();mu();dt();dy=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},W1=r=>{switch(r[3]){case"cpu":return new lt(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!Li(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return lt.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},sa=class{async createSessionAllocate(e){let n=await fetch(e);if(n.status!==200)throw new Error(`failed to load model: ${e}`);let t=await n.arrayBuffer();return iy(new Uint8Array(t))}async loadModel(e,n){if(await cy()||(aa||(aa=oy(xe)),await aa,aa=void 0),typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node){let t=await(void 0)(e);[this.sessionId,this.inputNames,this.outputNames]=await hu(t,n)}else{let t=await this.createSessionAllocate(e);[this.sessionId,this.inputNames,this.outputNames]=await ay(t,n)}else[this.sessionId,this.inputNames,this.outputNames]=await hu(e,n)}async dispose(){return sy(this.sessionId)}async run(e,n,t){let o=[],i=[];Object.entries(e).forEach(h=>{let g=h[0],y=h[1],b=this.inputNames.indexOf(g);if(b===-1)throw new Error(`invalid input '${g}'`);o.push(y),i.push(b)});let u=[],a=[];Object.entries(n).forEach(h=>{let g=h[0],y=h[1],b=this.outputNames.indexOf(g);if(b===-1)throw new Error(`invalid output '${g}'`);u.push(y),a.push(b)});let s=o.map((h,g)=>dy(h,()=>`input "${this.inputNames[i[g]]}"`)),l=u.map((h,g)=>h?dy(h,()=>`output "${this.outputNames[a[g]]}"`):null),c=await uy(this.sessionId,i,s,a,l,t),f={};for(let h=0;h<c.length;h++)f[this.outputNames[a[h]]]=u[h]??W1(c[h]);return f}startProfiling(){}endProfiling(){ly(this.sessionId)}}});var U1,ua,py=P(()=>{"use strict";kt();mu();fy();U1=()=>{if((typeof xe.wasm.initTimeout!="number"||xe.wasm.initTimeout<0)&&(xe.wasm.initTimeout=0),typeof xe.wasm.simd!="boolean"&&(xe.wasm.simd=!0),typeof xe.wasm.proxy!="boolean"&&(xe.wasm.proxy=!1),typeof xe.wasm.numThreads!="number"||!Number.isInteger(xe.wasm.numThreads)||xe.wasm.numThreads<=0){let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;xe.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},ua=class{async init(){U1(),await ny()}async createInferenceSessionHandler(e,n){let t=new sa;return await t.loadModel(e,n),Promise.resolve(t)}}});var hy={};Ar(hy,{wasmBackend:()=>H1});var H1,my=P(()=>{"use strict";py();H1=new ua});var q1={};Ar(q1,{InferenceSession:()=>nl,Tensor:()=>lt,TrainingSession:()=>sl,default:()=>j1,env:()=>xe,registerBackend:()=>er});kt();kt();kt();var ll="1.17.0-dev.20231103-1439da36fe";var j1=ba;{let r=(hh(),br(ph)).onnxjsBackend;er("webgl",r,-10)}{let r=(my(),br(hy)).wasmBackend;typeof navigator<"u"&&navigator.gpu&&er("webgpu",r,5),er("cpu",r,10),er("wasm",r,10),er("xnnpack",r,9),er("webnn",r,9)}Object.defineProperty(xe.versions,"web",{value:ll,enumerable:!0});return br(q1);})();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
